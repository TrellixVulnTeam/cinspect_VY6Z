{
  "hashes": {
    "/tmp/tmprpWAbb/hellomodule.c": "d351ce17b7d5a370974fa2170044f78d", 
    "/tmp/tmpSbM_A3/hellomodule.c": "dbe8cfab74393cc2d5b58d4ad7217a4c"
  }, 
  "objects": {}, 
  "modules": {
    "hello": {
      "source": "#include <Python.h>\n\n// start: say_hello\nstatic PyObject*\nsay_hello(PyObject* self, PyObject* args)\n{\n    const char* name;\n\n    if (!PyArg_ParseTuple(args, \"s\", &name))\n        return NULL;\n\n    printf(\"Hello %s!\\n\", name);\n\n    Py_RETURN_NONE;\n}\n// end: say_hello\n\nstatic PyMethodDef HelloMethods[] =\n{\n     {\"say_hello\", say_hello, METH_VARARGS, \"Greet somebody.\"},\n     {NULL, NULL, 0, NULL}\n};\n\n\n#if PY_MAJOR_VERSION >= 3\nPyMODINIT_FUNC PyInit_hello(void){\n  static struct PyModuleDef moduledef = {PyModuleDef_HEAD_INIT, \"hello\", \"Docs\", -1, HelloMethods};\n  return PyModule_Create(&moduledef);\n}\n#else\nPyMODINIT_FUNC inithello(void)\n{\n  (void) Py_InitModule(\"hello\", HelloMethods);\n}\n#endif\n", 
      "method_maps": [
        "HelloMethods"
      ], 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }
  }, 
  "methods": {
    "_PyWeakref_GetWeakrefCount": {
      "source": "PyAPI_FUNC(Py_ssize_t) _PyWeakref_GetWeakrefCount(PyWeakReference *head);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getc_unlocked": {
      "source": "extern int getc_unlocked (FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sleep": {
      "source": "extern unsigned int sleep (unsigned int __seconds);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySlice_GetIndices": {
      "source": "PyAPI_FUNC(int) PySlice_GetIndices(PySliceObject *r, Py_ssize_t length,\n                                  Py_ssize_t *start, Py_ssize_t *stop, Py_ssize_t *step);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "group_member": {
      "source": "extern int group_member (__gid_t __gid) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__logb": {
      "source": "__MATHCALL (logb,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcsncasecmp": {
      "source": "extern int wcsncasecmp (const wchar_t *__s1, const wchar_t *__s2,\n\t\t\tsize_t __n) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "swab": {
      "source": "extern void swab (const void *__restrict __from, void *__restrict __to,\n\t\t  ssize_t __n) __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ilogb": {
      "source": "__MATHDECL (int,ilogb,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__logbl": {
      "source": "__MATHCALL (logb,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__getpgid": {
      "source": "extern __pid_t __getpgid (__pid_t __pid) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "futimens": {
      "source": "extern int futimens (int __fd, const struct timespec __times[2]) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_MergeFromSeq2": {
      "source": "PyAPI_FUNC(int) PyDict_MergeFromSeq2(PyObject *d,\n                                           PyObject *seq2,\n                                           int override);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__logbf": {
      "source": "__MATHCALL (logb,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "localtime": {
      "source": "extern struct tm *localtime (const time_t *__timer) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "rand_r": {
      "source": "extern int rand_r (unsigned int *__seed) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getpt": {
      "source": "extern int getpt (void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ctime_r": {
      "source": "extern char *ctime_r (const time_t *__restrict __timer,\n\t\t      char *__restrict __buf) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_Items": {
      "source": "PyAPI_FUNC(PyObject *) PyDict_Items(PyObject *mp);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_Occurred": {
      "source": "PyAPI_FUNC(PyObject *) PyErr_Occurred(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getppid": {
      "source": "extern __pid_t getppid (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getloadavg": {
      "source": "extern int getloadavg (double __loadavg[], int __nelem)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySys_WriteStderr": {
      "source": "PyAPI_FUNC(void) PySys_WriteStderr(const char *format, ...)\n\t\t\tPy_GCC_ATTRIBUTE((format(printf, 1, 2)));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lchmod": {
      "source": "extern int lchmod (const char *__file, __mode_t __mode)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyOS_snprintf": {
      "source": "PyAPI_FUNC(int) PyOS_snprintf(char *str, size_t size, const char  *format, ...)\n                        Py_GCC_ATTRIBUTE((format(printf, 3, 4)));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInstance_NewRaw": {
      "source": "PyAPI_FUNC(PyObject *) PyInstance_NewRaw(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_Exit": {
      "source": "PyAPI_FUNC(void) Py_Exit(int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_RealIsSubclass": {
      "source": "PyAPI_FUNC(int) _PyObject_RealIsSubclass(PyObject *derived, PyObject *cls);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__sqrtf": {
      "source": "__MATHCALL (sqrt,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "vwscanf": {
      "source": "extern int vwscanf (const wchar_t *__restrict __format,\n\t\t    __gnuc_va_list __arg)\n", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicodeUCS4_IsTitlecase": {
      "source": "PyAPI_FUNC(int) _PyUnicode_IsTitlecase(\n    Py_UNICODE ch       /* Unicode character */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCodec_Encode": {
      "source": "PyAPI_FUNC(PyObject *) PyCodec_Encode(\n       PyObject *object,\n       const char *encoding,\n       const char *errors\n       );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "gnu_dev_makedev": {
      "source": "extern unsigned long long int gnu_dev_makedev (unsigned int __major,\n\t\t\t\t\t       unsigned int __minor)\n     __THROW __attribute_const__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__sqrtl": {
      "source": "__MATHCALL (sqrt,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getlogin_r": {
      "source": "extern int getlogin_r (char *__name, size_t __name_len) __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicodeUCS4_AsDefaultEncodedString": {
      "source": "PyAPI_FUNC(PyObject *) _PyUnicode_AsDefaultEncodedString(\n    PyObject *, const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFloat_FromDouble": {
      "source": "PyAPI_FUNC(PyObject *) PyFloat_FromDouble(double);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_DelItem": {
      "source": "PyAPI_FUNC(int) PyDict_DelItem(PyObject *mp, PyObject *key);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_Keys": {
      "source": "PyAPI_FUNC(PyObject *) PyDict_Keys(PyObject *mp);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcrtomb": {
      "source": "extern size_t wcrtomb (char *__restrict __s, wchar_t __wc,\n\t\t       mbstate_t *__restrict __ps) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_c_sum": {
      "source": "PyAPI_FUNC(Py_complex) c_sum(Py_complex, Py_complex);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "asin": {
      "source": "__MATHCALL (asin,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__lrintf": {
      "source": "__MATHDECL (long int,lrint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__lrintl": {
      "source": "__MATHDECL (long int,lrint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyOS_ascii_formatd": {
      "source": "PyAPI_FUNC(char *) PyOS_ascii_formatd(char *buffer, size_t buf_len,\n                                      const char *format, double d);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fxstatat64": {
      "source": "extern int __fxstatat64 (int __ver, int __fildes, const char *__filename,\n\t\t\t struct stat64 *__stat_buf, int __flag)\n     __THROW __nonnull ((3, 4));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__j0l": {
      "source": "__MATHCALL (j0,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ualarm": {
      "source": "extern __useconds_t ualarm (__useconds_t __value, __useconds_t __interval)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getdate_r": {
      "source": "extern int getdate_r (const char *__restrict __string,\n\t\t      struct tm *__restrict __resbufp);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__j0f": {
      "source": "__MATHCALL (j0,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyFloat_DigitsInit": {
      "source": "PyAPI_FUNC(void) _PyFloat_DigitsInit(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyFile_SanitizeMode": {
      "source": "int _PyFile_SanitizeMode(char *mode);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "vwprintf": {
      "source": "extern int vwprintf (const wchar_t *__restrict __format,\n\t\t     __gnuc_va_list __arg)\n", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "copysign": {
      "source": "__MATHCALLX (copysign,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_HasAttrString": {
      "source": "PyAPI_FUNC(int) PyObject_HasAttrString(PyObject *, const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyDict_Next": {
      "source": "PyAPI_FUNC(int) _PyDict_Next(\n    PyObject *mp, Py_ssize_t *pos, PyObject **key, PyObject **value, long *hash);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "drem": {
      "source": "__MATHCALL (drem,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setstate_r": {
      "source": "extern int setstate_r (char *__restrict __statebuf,\n\t\t       struct random_data *__restrict __buf)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_AsUTF16String": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_AsUTF16String(\n    PyObject *unicode           /* Unicode object */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_CallObject": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_CallObject(PyObject *callable_object,\n                                               PyObject *args);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFile_IncUseCount": {
      "source": "PyAPI_FUNC(void) PyFile_IncUseCount(PyFileObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getsid": {
      "source": "extern __pid_t getsid (__pid_t __pid) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFunction_GetDefaults": {
      "source": "PyAPI_FUNC(PyObject *) PyFunction_GetDefaults(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcsxfrm": {
      "source": "extern size_t wcsxfrm (wchar_t *__restrict __s1,\n\t\t       const wchar_t *__restrict __s2, size_t __n) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyDict_MaybeUntrack": {
      "source": "PyAPI_FUNC(void) _PyDict_MaybeUntrack(PyObject *mp);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ispunct_l": {
      "source": "__exctype_l (ispunct_l);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyBuffer_IsContiguous": {
      "source": "PyAPI_FUNC(int) PyBuffer_IsContiguous(Py_buffer *view, char fort);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstoq": {
      "source": "extern long long int wcstoq (const wchar_t *__restrict __nptr,\n\t\t\t     wchar_t **__restrict __endptr, int __base)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_Count": {
      "source": "PyAPI_FUNC(Py_ssize_t) PySequence_Count(PyObject *o, PyObject *value);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFunction_SetClosure": {
      "source": "PyAPI_FUNC(int) PyFunction_SetClosure(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_IsTrue": {
      "source": "PyAPI_FUNC(int) PyObject_IsTrue(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstok": {
      "source": "extern wchar_t *wcstok (wchar_t *__restrict __s,\n\t\t\tconst wchar_t *__restrict __delim,\n\t\t\twchar_t **__restrict __ptr) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "brk": {
      "source": "extern int brk (void *__addr) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "printf": {
      "source": "extern int printf (const char *__restrict __format, ...);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstod": {
      "source": "extern double wcstod (const wchar_t *__restrict __nptr,\n\t\t      wchar_t **__restrict __endptr) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ttyname_r": {
      "source": "extern int ttyname_r (int __fd, char *__buf, size_t __buflen)\n     __THROW __nonnull ((2)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getchar": {
      "source": "extern int getchar (void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__modff": {
      "source": "__MATHCALL (modf,, (_Mdouble_ __x, _Mdouble_ *__iptr)) __nonnull ((2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyBuffer_FromReadWriteObject": {
      "source": "PyAPI_FUNC(PyObject *) PyBuffer_FromReadWriteObject(PyObject *base,\n                                                    Py_ssize_t offset,\n                                                    Py_ssize_t size);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_Index": {
      "source": "PyAPI_FUNC(Py_ssize_t) PySequence_Index(PyObject *o, PyObject *value);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigreturn": {
      "source": "extern int sigreturn (struct sigcontext *__scp) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fputs_unlocked": {
      "source": "extern int fputs_unlocked (const char *__restrict __s,\n\t\t\t   FILE *__restrict __stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__modfl": {
      "source": "__MATHCALL (modf,, (_Mdouble_ __x, _Mdouble_ *__iptr)) __nonnull ((2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_GetFuncDesc": {
      "source": "PyAPI_FUNC(const char *) PyEval_GetFuncDesc(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getwchar_unlocked": {
      "source": "extern wint_t getwchar_unlocked (void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isblank_l": {
      "source": "__exctype_l (isblank_l);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyClass_New": {
      "source": "PyAPI_FUNC(PyObject *) PyClass_New(PyObject *, PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_EvalCode": {
      "source": "PyAPI_FUNC(PyObject *) PyEval_EvalCode(PyCodeObject *, PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_EvalCodeEx": {
      "source": "PyAPI_FUNC(PyObject *) PyEval_EvalCodeEx(PyCodeObject *co,\n\t\t\t\t\tPyObject *globals,\n\t\t\t\t\tPyObject *locals,\n\t\t\t\t\tPyObject **args, int argc,\n\t\t\t\t\tPyObject **kwds, int kwdc,\n\t\t\t\t\tPyObject **defs, int defc,\n\t\t\t\t\tPyObject *closure);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__llrint": {
      "source": "__MATHDECL (long long int,llrint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isatty": {
      "source": "extern int isatty (int __fd) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "eaccess": {
      "source": "extern int eaccess (const char *__name, int __type)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__libc_current_sigrtmax": {
      "source": "extern int __libc_current_sigrtmax (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "expm1": {
      "source": "__MATHCALL (expm1,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyOS_Readline": {
      "source": "PyAPI_FUNC(char *) PyOS_Readline(FILE *, FILE *, char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstoll_l": {
      "source": "extern long long int wcstoll_l (const wchar_t *__restrict __nptr,\n\t\t\t\twchar_t **__restrict __endptr,\n\t\t\t\tint __base, __locale_t __loc) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "pthread_sigmask": {
      "source": "extern int pthread_sigmask (int __how,\n\t\t\t    const __sigset_t *__restrict __newmask,\n\t\t\t    __sigset_t *__restrict __oldmask)__THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyList_Sort": {
      "source": "PyAPI_FUNC(int) PyList_Sort(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstoull_l": {
      "source": "extern unsigned long long int wcstoull_l (const wchar_t *__restrict __nptr,\n\t\t\t\t\t  wchar_t **__restrict __endptr,\n\t\t\t\t\t  int __base, __locale_t __loc)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_InPlaceConcat": {
      "source": "PyAPI_FUNC(PyObject *) PySequence_InPlaceConcat(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__lgamma_r": {
      "source": "__MATHCALL (lgamma,_r, (_Mdouble_, int *__signgamp));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyFloat_Pack8": {
      "source": "PyAPI_FUNC(int) _PyFloat_Pack8(double x, unsigned char *p, int le);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyFloat_Pack4": {
      "source": "PyAPI_FUNC(int) _PyFloat_Pack4(double x, unsigned char *p, int le);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strerror": {
      "source": "extern char *strerror (int __errnum) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "erf": {
      "source": "__MATHCALL (erf,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__pow10": {
      "source": "__MATHCALL (pow10,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "utimensat": {
      "source": "extern int utimensat (int __fd, const char *__path,\n\t\t      const struct timespec __times[2],\n\t\t      int __flags)\n     __THROW __nonnull ((2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Subtract": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Subtract(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyLong_Init": {
      "source": "PyAPI_FUNC(int) _PyLong_Init(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyImport_Cleanup": {
      "source": "PyAPI_FUNC(void) PyImport_Cleanup(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyRun_InteractiveOneFlags": {
      "source": "PyAPI_FUNC(int) PyRun_InteractiveOneFlags(FILE *, const char *, PyCompilerFlags *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyLong_Format": {
      "source": "PyAPI_FUNC(PyObject *) _PyLong_Format(PyObject *aa, int base, int addL, int newstyle);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__trunc": {
      "source": "__MATHCALLX (trunc,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_FromString": {
      "source": "PyAPI_FUNC(PyObject *) PyString_FromString(const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySys_SetArgvEx": {
      "source": "PyAPI_FUNC(void) PySys_SetArgvEx(int, char **, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fpclassifyl": {
      "source": "__MATHDECL_1 (int, __fpclassify,, (_Mdouble_ __value))\n     __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fpclassifyf": {
      "source": "__MATHDECL_1 (int, __fpclassify,, (_Mdouble_ __value))\n     __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyStaticMethod_New": {
      "source": "PyAPI_FUNC(PyObject *) PyStaticMethod_New(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getgroups": {
      "source": "extern int getgroups (int __size, __gid_t __list[]) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__mempcpy": {
      "source": "extern void *__mempcpy (void *__restrict __dest,\n\t\t\tconst void *__restrict __src, size_t __n)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "memfrob": {
      "source": "extern void *memfrob (void *__s, size_t __n) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__atan2": {
      "source": "__MATHCALL (atan2,, (_Mdouble_ __y, _Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fxstatat": {
      "source": "extern int __REDIRECT_NTH (__fxstatat, (int __ver, int __fildes,\n\t\t\t\t\tconst char *__filename,\n\t\t\t\t\tstruct stat *__stat_buf, int __flag),\n\t\t\t   __fxstatat64) __nonnull ((3, 4));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__atanhl": {
      "source": "__MATHCALL (atanh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "rewind": {
      "source": "extern void rewind (FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_InternFromString": {
      "source": "PyAPI_FUNC(PyObject *) PyString_InternFromString(const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCodec_XMLCharRefReplaceErrors": {
      "source": "PyAPI_FUNC(PyObject *) PyCodec_XMLCharRefReplaceErrors(PyObject *exc);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcsrchr": {
      "source": "extern wchar_t *wcsrchr (const wchar_t *__wcs, wchar_t __wc)\n     __THROW __attribute_pure__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__atanhf": {
      "source": "__MATHCALL (atanh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_FromOrdinal": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_FromOrdinal(int ordinal);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "pwrite64": {
      "source": "extern ssize_t pwrite64 (int __fd, const void *__buf, size_t __n,\n\t\t\t __off64_t __offset) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_Display": {
      "source": "PyAPI_FUNC(void) PyErr_Display(PyObject *, PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setkey": {
      "source": "extern void setkey (const char *__key) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "valloc": {
      "source": "extern void *valloc (size_t __size) __THROW __attribute_malloc__ ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "at_quick_exit": {
      "source": "extern int at_quick_exit (void (*__func) (void)) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_AsUnsignedLongLongMask": {
      "source": "PyAPI_FUNC(unsigned PY_LONG_LONG) PyLong_AsUnsignedLongLongMask(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "funlockfile": {
      "source": "extern void funlockfile (FILE *__stream) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_DecodeLatin1": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_DecodeLatin1(\n    const char *string,         /* Latin-1 encoded string */\n    Py_ssize_t length,          /* size of string */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigdelset": {
      "source": "extern int sigdelset (sigset_t *__set, int __signo) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strerror_r": {
      "source": "extern char *strerror_r (int __errnum, char *__buf, size_t __buflen)\n     __THROW __nonnull ((2)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeEncodeError_GetObject": {
      "source": "PyAPI_FUNC(PyObject *) PyUnicodeEncodeError_GetObject(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCodec_StreamWriter": {
      "source": "PyAPI_FUNC(PyObject *) PyCodec_StreamWriter(\n       const char *encoding,\n       PyObject *stream,\n       const char *errors\n       );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "iscntrl": {
      "source": "__exctype (iscntrl);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__atanl": {
      "source": "__MATHCALL (atan,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strerror_l": {
      "source": "extern char *strerror_l (int __errnum, __locale_t __l) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__atanh": {
      "source": "__MATHCALL (atanh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__atanf": {
      "source": "__MATHCALL (atan,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_IsInitialized": {
      "source": "PyAPI_FUNC(int) Py_IsInitialized(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtouq": {
      "source": "extern unsigned long long int strtouq (const char *__restrict __nptr,\n\t\t\t\t       char **__restrict __endptr, int __base)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyInt_Format": {
      "source": "PyAPI_FUNC(PyObject*) _PyInt_Format(PyIntObject* v, int base, int newstyle);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "btowc": {
      "source": "extern wint_t btowc (int __c) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtoul": {
      "source": "extern unsigned long int strtoul (const char *__restrict __nptr,\n\t\t\t\t  char **__restrict __endptr, int __base)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCodec_LookupError": {
      "source": "PyAPI_FUNC(PyObject *) PyCodec_LookupError(const char *name);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyImport_ImportModuleLevel": {
      "source": "PyAPI_FUNC(PyObject *) PyImport_ImportModuleLevel(char *name,\n\tPyObject *globals, PyObject *locals, PyObject *fromlist, int level);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "finitel": {
      "source": "__MATHDECL_1 (int,finite,, (_Mdouble_ __value)) __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFloat_FromString": {
      "source": "PyAPI_FUNC(PyObject *) PyFloat_FromString(PyObject*, char** junk);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtol_l": {
      "source": "extern long int strtol_l (const char *__restrict __nptr,\n\t\t\t  char **__restrict __endptr, int __base,\n\t\t\t  __locale_t __loc) __THROW __nonnull ((1, 4));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fwrite": {
      "source": "extern size_t fwrite (const void *__restrict __ptr, size_t __size,\n\t\t      size_t __n, FILE *__restrict __s);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCapsule_GetName": {
      "source": "PyAPI_FUNC(const char *) PyCapsule_GetName(PyObject *capsule);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_FromString": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_FromString(\n    const char *u        /* string */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__acos": {
      "source": "__MATHCALL (acos,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__remquo": {
      "source": "__MATHCALL (remquo,, (_Mdouble_ __x, _Mdouble_ __y, int *__quo));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setgid": {
      "source": "extern int setgid (__gid_t __gid) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_ConcatAndDel": {
      "source": "PyAPI_FUNC(void) PyString_ConcatAndDel(PyObject **, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fchown": {
      "source": "extern int fchown (int __fd, __uid_t __owner, __gid_t __group) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_Copy": {
      "source": "PyAPI_FUNC(PyObject *) PyDict_Copy(PyObject *mp);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyString_Resize": {
      "source": "PyAPI_FUNC(int) _PyString_Resize(PyObject **, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "pow10f": {
      "source": "__MATHCALL (pow10,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_Restore": {
      "source": "PyAPI_FUNC(void) PyErr_Restore(PyObject *, PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "pow10l": {
      "source": "__MATHCALL (pow10,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicode_DecodeUTF7Stateful": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_DecodeUTF7Stateful(\n    const char *string,         /* UTF-7 encoded string */\n    Py_ssize_t length,          /* size of string */\n    const char *errors,         /* error handling */\n    Py_ssize_t *consumed        /* bytes consumed */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "vfwscanf": {
      "source": "extern int vfwscanf (__FILE *__restrict __s,\n\t\t     const wchar_t *__restrict __format,\n\t\t     __gnuc_va_list __arg)\n", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "gcvt": {
      "source": "extern char *gcvt (double __value, int __ndigit, char *__buf)\n     __THROW __nonnull ((3)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_AsEncodedObject": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_AsEncodedObject(\n    PyObject *unicode,          /* Unicode object */\n    const char *encoding,       /* encoding */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeEncodeError_GetStart": {
      "source": "PyAPI_FUNC(int) PyUnicodeEncodeError_GetStart(PyObject *, Py_ssize_t *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Float": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Float(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_DecodeUTF16": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_DecodeUTF16(\n    const char *string,         /* UTF-16 encoded string */\n    Py_ssize_t length,          /* size of string */\n    const char *errors,         /* error handling */\n    int *byteorder              /* pointer to byteorder to use\n                                   0=native;-1=LE,1=BE; updated on\n                                   exit */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_GC_Del": {
      "source": "PyAPI_FUNC(void) PyObject_GC_Del(void *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "vsscanf": {
      "source": "extern int vsscanf (const char *__restrict __s,\n\t\t    const char *__restrict __format, _G_va_list __arg)\n     __THROW __attribute__ ((__format__ (__scanf__, 2, 0)));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__sin": {
      "source": "__MATHCALL (sin,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "logf": {
      "source": "__MATHCALL (log,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "logb": {
      "source": "__MATHCALL (logb,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sinhf": {
      "source": "__MATHCALL (sinh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fileno_unlocked": {
      "source": "extern int fileno_unlocked (FILE *__stream) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "logl": {
      "source": "__MATHCALL (log,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sinhl": {
      "source": "__MATHCALL (sinh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyThreadState_Init": {
      "source": "PyAPI_FUNC(void) _PyThreadState_Init(PyThreadState *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "putwc_unlocked": {
      "source": "extern wint_t putwc_unlocked (wchar_t __wc, __FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "vswscanf": {
      "source": "extern int vswscanf (const wchar_t *__restrict __s,\n\t\t     const wchar_t *__restrict __format,\n\t\t     __gnuc_va_list __arg)\n     __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sprintf": {
      "source": "extern int sprintf (char *__restrict __s,\n\t\t    const char *__restrict __format, ...) __THROWNL;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__ctype_b_loc": {
      "source": "extern const unsigned short int **__ctype_b_loc (void)\n     __THROW __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFile_DecUseCount": {
      "source": "PyAPI_FUNC(void) PyFile_DecUseCount(PyFileObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__sinf": {
      "source": "__MATHCALL (sin,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strcspn": {
      "source": "extern size_t strcspn (const char *__s, const char *__reject)\n     __THROW __attribute_pure__ __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__sinh": {
      "source": "__MATHCALL (sinh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "free": {
      "source": "extern void free (void *__ptr) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fmodf": {
      "source": "__MATHCALL (fmod,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fmodl": {
      "source": "__MATHCALL (fmod,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyByteArray_Size": {
      "source": "PyAPI_FUNC(Py_ssize_t) PyByteArray_Size(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInt_Fini": {
      "source": "PyAPI_FUNC(void) PyInt_Fini(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_CallObjectWithKeywords": {
      "source": "PyAPI_FUNC(PyObject *) PyEval_CallObjectWithKeywords(\n    PyObject *, PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "erff": {
      "source": "__MATHCALL (erf,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isinff": {
      "source": "__MATHDECL_1 (int,isinf,, (_Mdouble_ __value)) __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "erfc": {
      "source": "__MATHCALL (erfc,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyString_Eq": {
      "source": "PyAPI_FUNC(int) _PyString_Eq(PyObject *, PyObject*);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "pow10": {
      "source": "__MATHCALL (pow10,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "erfl": {
      "source": "__MATHCALL (erf,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "rand": {
      "source": "extern int rand (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__exp": {
      "source": "__MATHCALL (exp,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "floorl": {
      "source": "__MATHCALLX (floor,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_SlotCompare": {
      "source": "extern int _PyObject_SlotCompare(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ldexp": {
      "source": "__MATHCALL (ldexp,, (_Mdouble_ __x, int __exponent));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyInt_AsInt": {
      "source": "PyAPI_FUNC(int) _PyInt_AsInt(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_BuildValue_SizeT": {
      "source": "PyAPI_FUNC(PyObject *) _Py_BuildValue_SizeT(const char *, ...);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__atan2l": {
      "source": "__MATHCALL (atan2,, (_Mdouble_ __y, _Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strncpy": {
      "source": "extern char *strncpy (char *__restrict __dest,\n\t\t      const char *__restrict __src, size_t __n)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyList_Extend": {
      "source": "PyAPI_FUNC(PyObject *) _PyList_Extend(PyListObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCallable_Check": {
      "source": "PyAPI_FUNC(int) PyCallable_Check(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyClass_IsSubclass": {
      "source": "PyAPI_FUNC(int) PyClass_IsSubclass(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_GetBuffer": {
      "source": "PyAPI_FUNC(int) PyObject_GetBuffer(PyObject *obj, Py_buffer *view,\n                                        int flags);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isalnum": {
      "source": "__exctype (isalnum);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_Size": {
      "source": "PyAPI_FUNC(Py_ssize_t) PyObject_Size(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "exp2": {
      "source": "__MATHCALL (exp2,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "qsort": {
      "source": "extern void qsort (void *__base, size_t __nmemb, size_t __size,\n\t\t   __compar_fn_t __compar) __nonnull ((1, 4));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "faccessat": {
      "source": "extern int faccessat (int __fd, const char *__file, int __type, int __flag)\n     __THROW __nonnull ((2)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isalpha": {
      "source": "__exctype (isalpha);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "memcmp": {
      "source": "extern int memcmp (const void *__s1, const void *__s2, size_t __n)\n     __THROW __attribute_pure__ __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "dprintf": {
      "source": "extern int dprintf (int __fd, const char *__restrict __fmt, ...)\n     __attribute__ ((__format__ (__printf__, 2, 3)));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ecvt_r": {
      "source": "extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,\n\t\t   int *__restrict __sign, char *__restrict __buf,\n\t\t   size_t __len) __THROW __nonnull ((3, 4, 5));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_CallMethod_SizeT": {
      "source": "PyAPI_FUNC(PyObject *) _PyObject_CallMethod_SizeT(PyObject *o,\n                                                       char *name,\n                                                       char *format, ...);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setbuffer": {
      "source": "extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,\n\t\t       size_t __size) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcschr": {
      "source": "extern wchar_t *wcschr (const wchar_t *__wcs, wchar_t __wc)\n     __THROW __attribute_pure__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mkostemp": {
      "source": "extern int __REDIRECT (mkostemp, (char *__template, int __flags), mkostemp64)\n     __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isascii": {
      "source": "extern int isascii (int __c) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInstance_New": {
      "source": "PyAPI_FUNC(PyObject *) PyInstance_New(PyObject *, PyObject *,\n                                            PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_NextNotImplemented": {
      "source": "PyAPI_FUNC(PyObject *) _PyObject_NextNotImplemented(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInt_GetMax": {
      "source": "PyAPI_FUNC(long) PyInt_GetMax(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicodeUCS4_IsNumeric": {
      "source": "PyAPI_FUNC(int) _PyUnicode_IsNumeric(\n    Py_UNICODE ch       /* Unicode character */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fstat64": {
      "source": "extern int fstat64 (int __fd, struct stat64 *__buf) __THROW __nonnull ((2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__j1l": {
      "source": "__MATHCALL (j1,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigwait": {
      "source": "extern int sigwait (const sigset_t *__restrict __set, int *__restrict __sig)\n     __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__j1f": {
      "source": "__MATHCALL (j1,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "expf": {
      "source": "__MATHCALL (exp,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__erfc": {
      "source": "__MATHCALL (erfc,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyArena_New": {
      "source": "PyAPI_FUNC(PyArena *) PyArena_New(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMapping_HasKey": {
      "source": "PyAPI_FUNC(int) PyMapping_HasKey(PyObject *o, PyObject *key);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_InitializeEx": {
      "source": "PyAPI_FUNC(void) Py_InitializeEx(int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCFunction_GetFlags": {
      "source": "PyAPI_FUNC(int) PyCFunction_GetFlags(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_Malloc": {
      "source": "PyAPI_FUNC(void *) PyObject_Malloc(size_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "putwchar": {
      "source": "extern wint_t putwchar (wchar_t __wc);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFunction_SetDefaults": {
      "source": "PyAPI_FUNC(int) PyFunction_SetDefaults(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_InPlaceXor": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_InPlaceXor(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "get_current_dir_name": {
      "source": "extern char *get_current_dir_name (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_EncodeUTF16": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_EncodeUTF16(\n    const Py_UNICODE *data,     /* Unicode char buffer */\n    Py_ssize_t length,                  /* number of Py_UNICODE chars to encode */\n    const char *errors,         /* error handling */\n    int byteorder               /* byteorder to use 0=BOM+native;-1=LE,1=BE */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "timer_getoverrun": {
      "source": "extern int timer_getoverrun (timer_t __timerid) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_Next": {
      "source": "PyAPI_FUNC(int) PyDict_Next(\n    PyObject *mp, Py_ssize_t *pos, PyObject **key, PyObject **value);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCapsule_SetName": {
      "source": "PyAPI_FUNC(int) PyCapsule_SetName(PyObject *capsule, const char *name);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getwc_unlocked": {
      "source": "extern wint_t getwc_unlocked (__FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_Decode": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_Decode(\n    const char *s,              /* encoded string */\n    Py_ssize_t size,            /* size of buffer */\n    const char *encoding,       /* encoding */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyRun_AnyFileFlags": {
      "source": "PyAPI_FUNC(int) PyRun_AnyFileFlags(FILE *, const char *, PyCompilerFlags *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "alarm": {
      "source": "extern unsigned int alarm (unsigned int __seconds) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyEval_SliceIndex": {
      "source": "PyAPI_FUNC(int) _PyEval_SliceIndex(PyObject *, Py_ssize_t *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeEncodeError_SetReason": {
      "source": "PyAPI_FUNC(int) PyUnicodeEncodeError_SetReason(\n    PyObject *, const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__cosl": {
      "source": "__MATHCALL (cos,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__cosh": {
      "source": "__MATHCALL (cosh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyTuple_Resize": {
      "source": "PyAPI_FUNC(int) _PyTuple_Resize(PyObject **, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__cosf": {
      "source": "__MATHCALL (cos,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setlinebuf": {
      "source": "extern void setlinebuf (FILE *__stream) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__tgamma": {
      "source": "__MATHCALL (tgamma,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setvbuf": {
      "source": "extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,\n\t\t    int __modes, size_t __n) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyByteArray_Concat": {
      "source": "PyAPI_FUNC(PyObject *) PyByteArray_Concat(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_GetLocals": {
      "source": "PyAPI_FUNC(PyObject *) PyEval_GetLocals(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "a64l": {
      "source": "extern long int a64l (const char *__s)\n     __THROW __attribute_pure__ __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "random": {
      "source": "extern long int random (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__xmknodat": {
      "source": "extern int __xmknodat (int __ver, int __fd, const char *__path,\n\t\t       __mode_t __mode, __dev_t *__dev)\n     __THROW __nonnull ((3, 5));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_GenericSetAttr": {
      "source": "PyAPI_FUNC(int) PyObject_GenericSetAttr(PyObject *,\n                                              PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__log1pl": {
      "source": "__MATHCALL (log1p,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__underflow": {
      "source": "extern int __underflow (_IO_FILE *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fpclassify": {
      "source": "__MATHDECL_1 (int, __fpclassify,, (_Mdouble_ __value))\n     __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__log1pf": {
      "source": "__MATHCALL (log1p,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lockf64": {
      "source": "extern int lockf64 (int __fd, int __cmd, __off64_t __len) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_Tuple": {
      "source": "PyAPI_FUNC(PyObject *) PySequence_Tuple(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyRun_FileExFlags": {
      "source": "PyAPI_FUNC(PyObject *) PyRun_FileExFlags(FILE *, const char *, int,\n                                         PyObject *, PyObject *, int,\n                                         PyCompilerFlags *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_GetPath": {
      "source": "PyAPI_FUNC(char *) Py_GetPath(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "abs": {
      "source": "extern int abs (int __x) __THROW __attribute__ ((__const__)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_AsString": {
      "source": "PyAPI_FUNC(char *) PyString_AsString(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fstat": {
      "source": "extern int __REDIRECT_NTH (fstat, (int __fd, struct stat *__buf), fstat64)\n     __nonnull ((2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lgammaf": {
      "source": "__MATHCALL (lgamma,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wmemset": {
      "source": "extern wchar_t *wmemset (wchar_t *__s, wchar_t __c, size_t __n) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "dup3": {
      "source": "extern int dup3 (int __fd, int __fd2, int __flags) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "dup2": {
      "source": "extern int dup2 (int __fd, int __fd2) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_AsSsize_t": {
      "source": "PyAPI_FUNC(Py_ssize_t) PyLong_AsSsize_t(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_AsUnicode": {
      "source": "PyAPI_FUNC(Py_UNICODE *) PyUnicode_AsUnicode(\n    PyObject *unicode           /* Unicode object */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lgammal": {
      "source": "__MATHCALL (lgamma,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ceil": {
      "source": "__MATHCALLX (ceil,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__log": {
      "source": "__MATHCALL (log,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "rawmemchr": {
      "source": "extern void *rawmemchr (const void *__s, int __c)\n     __THROW __attribute_pure__ __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ptsname_r": {
      "source": "extern int ptsname_r (int __fd, char *__buf, size_t __buflen)\n     __THROW __nonnull ((2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_AtExit": {
      "source": "PyAPI_FUNC(int) Py_AtExit(void (*func)(void));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__ldexp": {
      "source": "__MATHCALL (ldexp,, (_Mdouble_ __x, int __exponent));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigwaitinfo": {
      "source": "extern int sigwaitinfo (const sigset_t *__restrict __set,\n\t\t\tsiginfo_t *__restrict __info) __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_CallFunction": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_CallFunction(PyObject *callable_object,\n                                                 char *format, ...);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "perror": {
      "source": "extern void perror (const char *__s);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "srandom": {
      "source": "extern void srandom (unsigned int __seed) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigrelse": {
      "source": "extern int sigrelse (int __sig) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_tolower": {
      "source": "__exctype (_tolower);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fgetwc": {
      "source": "extern wint_t fgetwc (__FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__sincosl": {
      "source": "__MATHDECL (void,sincos,,\n\t    (_Mdouble_ __x, _Mdouble_ *__sinx, _Mdouble_ *__cosx));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__lgammal_r": {
      "source": "__MATHCALL (lgamma,_r, (_Mdouble_, int *__signgamp));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "dysize": {
      "source": "extern int dysize (int __year) __THROW  __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__hypotf": {
      "source": "__MATHCALL (hypot,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__sincosf": {
      "source": "__MATHDECL (void,sincos,,\n\t    (_Mdouble_ __x, _Mdouble_ *__sinx, _Mdouble_ *__cosx));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_InitThreads": {
      "source": "PyAPI_FUNC(void) PyEval_InitThreads(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__hypotl": {
      "source": "__MATHCALL (hypot,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fgetws": {
      "source": "extern wchar_t *fgetws (wchar_t *__restrict __ws, int __n,\n\t\t\t__FILE *__restrict __stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strncmp": {
      "source": "extern int strncmp (const char *__s1, const char *__s2, size_t __n)\n     __THROW __attribute_pure__ __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicode_XStrip": {
      "source": "PyAPI_FUNC(PyObject *) _PyUnicode_XStrip(\n    PyUnicodeObject *self,\n    int striptype,\n    PyObject *sepobj\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCFunction_Fini": {
      "source": "PyAPI_FUNC(void) PyCFunction_Fini(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strcat": {
      "source": "extern char *strcat (char *__restrict __dest, const char *__restrict __src)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_Tailmatch": {
      "source": "PyAPI_FUNC(Py_ssize_t) PyUnicode_Tailmatch(\n    PyObject *str,              /* String */\n    PyObject *substr,           /* Prefix or Suffix string */\n    Py_ssize_t start,           /* Start index */\n    Py_ssize_t end,             /* Stop index */\n    int direction               /* Tail end: -1 prefix, +1 suffix */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "putwc": {
      "source": "extern wint_t putwc (wchar_t __wc, __FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyByteArray_FromObject": {
      "source": "PyAPI_FUNC(PyObject *) PyByteArray_FromObject(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_SetString": {
      "source": "PyAPI_FUNC(void) PyErr_SetString(PyObject *, const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_EvalFrameEx": {
      "source": "PyAPI_FUNC(PyObject *) PyEval_EvalFrameEx(struct _frame *f, int exc);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_FromFormat": {
      "source": "PyAPI_FUNC(PyObject *) PyUnicode_FromFormat(const char*, ...);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fgetpos": {
      "source": "extern int __REDIRECT (fgetpos, (FILE *__restrict __stream,\n\t\t\t\t fpos_t *__restrict __pos), fgetpos64);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fmax": {
      "source": "__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fmaf": {
      "source": "__MATHCALL (fma,, (_Mdouble_ __x, _Mdouble_ __y, _Mdouble_ __z));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "erfcf": {
      "source": "__MATHCALL (erfc,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "posix_memalign": {
      "source": "extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)\n     __THROW __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_IO_padn": {
      "source": "extern _IO_ssize_t _IO_padn (_IO_FILE *, int, _IO_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__llroundl": {
      "source": "__MATHDECL (long long int,llround,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "erfcl": {
      "source": "__MATHCALL (erfc,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFloat_GetMax": {
      "source": "PyAPI_FUNC(double) PyFloat_GetMax(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__overflow": {
      "source": "extern int __overflow (_IO_FILE *, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMem_Realloc": {
      "source": "PyAPI_FUNC(void *) PyMem_Realloc(void *, size_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_Check": {
      "source": "PyAPI_FUNC(int) PySequence_Check(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "timelocal": {
      "source": "extern time_t timelocal (struct tm *__tp) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_InitVar": {
      "source": "PyAPI_FUNC(PyVarObject *) PyObject_InitVar(PyVarObject *,\n                                                 PyTypeObject *, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__exp2l": {
      "source": "__MATHCALL (exp2,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyParser_ASTFromString": {
      "source": "PyAPI_FUNC(struct _mod *) PyParser_ASTFromString(const char *, const char *,\n                                                 int, PyCompilerFlags *flags,\n                                                 PyArena *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyBuffer_SizeFromFormat": {
      "source": "PyAPI_FUNC(int) PyBuffer_SizeFromFormat(const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "seed48_r": {
      "source": "extern int seed48_r (unsigned short int __seed16v[3],\n\t\t     struct drand48_data *__buffer) __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "cos": {
      "source": "__MATHCALL (cos,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fstatat": {
      "source": "extern int __REDIRECT_NTH (fstatat, (int __fd, const char *__restrict __file,\n\t\t\t\t     struct stat *__restrict __buf,\n\t\t\t\t     int __flag),\n\t\t\t   fstatat64) __nonnull ((2, 3));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isctype": {
      "source": "extern int isctype (int __c, int __mask) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyWeakref_NewProxy": {
      "source": "PyAPI_FUNC(PyObject *) PyWeakref_NewProxy(PyObject *ob,\n                                                PyObject *callback);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstoumax": {
      "source": "extern uintmax_t wcstoumax (const __gwchar_t *__restrict __nptr,\n\t\t\t    __gwchar_t ** __restrict __endptr, int __base)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMapping_Size": {
      "source": "PyAPI_FUNC(Py_ssize_t) PyMapping_Size(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__tolower_l": {
      "source": "extern int __tolower_l (int __c, __locale_t __l) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fabsf": {
      "source": "__MATHCALLX (fabs,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fmaxf": {
      "source": "__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyLong_AsByteArray": {
      "source": "PyAPI_FUNC(int) _PyLong_AsByteArray(PyLongObject* v,\n\tunsigned char* bytes, size_t n,\n\tint little_endian, int is_signed);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fmaxl": {
      "source": "__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCapsule_Import": {
      "source": "PyAPI_FUNC(void *) PyCapsule_Import(const char *name, int no_block);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fabsl": {
      "source": "__MATHCALLX (fabs,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCFunction_GetSelf": {
      "source": "PyAPI_FUNC(PyObject *) PyCFunction_GetSelf(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySys_AddWarnOption": {
      "source": "PyAPI_FUNC(void) PySys_AddWarnOption(char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__nearbyint": {
      "source": "__MATHCALL (nearbyint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyString_InsertThousandsGrouping": {
      "source": "PyAPI_FUNC(Py_ssize_t) _PyString_InsertThousandsGrouping(char *buffer,\n                                  Py_ssize_t n_buffer,\n                                  char *digits,\n                                  Py_ssize_t n_digits,\n                                  Py_ssize_t min_width,\n                                  const char *grouping,\n                                  const char *thousands_sep);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "putw": {
      "source": "extern int putw (int __w, FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_Str": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_Str(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "puts": {
      "source": "extern int puts (const char *__s);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_FromObject": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_FromObject(\n    register PyObject *obj      /* Object */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "hypotl": {
      "source": "__MATHCALL (hypot,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_Resize": {
      "source": "PyAPI_FUNC(int) PyUnicode_Resize(\n    PyObject **unicode,         /* Pointer to the Unicode object */\n    Py_ssize_t length           /* New length */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__finite": {
      "source": "__MATHDECL_1 (int,__finite,, (_Mdouble_ __value)) __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__lgammal": {
      "source": "__MATHCALL (lgamma,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "gnu_dev_major": {
      "source": "extern unsigned int gnu_dev_major (unsigned long long int __dev)\n     __THROW __attribute_const__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fminf": {
      "source": "__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "putc": {
      "source": "extern int putc (int __c, FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCode_New": {
      "source": "PyAPI_FUNC(PyCodeObject *) PyCode_New(\n\tint, int, int, int, PyObject *, PyObject *, PyObject *, PyObject *,\n\tPyObject *, PyObject *, PyObject *, PyObject *, int, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__lgammaf": {
      "source": "__MATHCALL (lgamma,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_Size": {
      "source": "PyAPI_FUNC(Py_ssize_t) PyString_Size(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeDecodeError_GetEnd": {
      "source": "PyAPI_FUNC(int) PyUnicodeDecodeError_GetEnd(PyObject *, Py_ssize_t *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__isnan": {
      "source": "__MATHDECL_1 (int,__isnan,, (_Mdouble_ __value)) __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fminl": {
      "source": "__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_hgversion": {
      "source": "PyAPI_FUNC(const char *) _Py_hgversion(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strsignal": {
      "source": "extern char *strsignal (int __sig) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "j0l": {
      "source": "__MATHCALL (j0,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyImport_ExecCodeModule": {
      "source": "PyAPI_FUNC(PyObject *) PyImport_ExecCodeModule(char *name, PyObject *co);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "j0f": {
      "source": "__MATHCALL (j0,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mbsrtowcs": {
      "source": "extern size_t mbsrtowcs (wchar_t *__restrict __dst,\n\t\t\t const char **__restrict __src, size_t __len,\n\t\t\t mbstate_t *__restrict __ps) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeDecodeError_SetStart": {
      "source": "PyAPI_FUNC(int) PyUnicodeDecodeError_SetStart(PyObject *, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tanl": {
      "source": "__MATHCALL (tan,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_AsCharBuffer": {
      "source": "PyAPI_FUNC(int) PyObject_AsCharBuffer(PyObject *obj,\n                                          const char **buffer,\n                                          Py_ssize_t *buffer_len);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tanh": {
      "source": "__MATHCALL (tanh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tanf": {
      "source": "__MATHCALL (tan,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_CallFunction": {
      "source": "PyAPI_FUNC(PyObject *) PyEval_CallFunction(PyObject *obj,\n                                           const char *format, ...);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "swscanf": {
      "source": "extern int swscanf (const wchar_t *__restrict __s,\n\t\t    const wchar_t *__restrict __format, ...)\n     __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Negative": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Negative(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_c_prod": {
      "source": "PyAPI_FUNC(Py_complex) c_prod(Py_complex, Py_complex);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigisemptyset": {
      "source": "extern int sigisemptyset (const sigset_t *__set) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "clearenv": {
      "source": "extern int clearenv (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__sincos": {
      "source": "__MATHDECL (void,sincos,,\n\t    (_Mdouble_ __x, _Mdouble_ *__sinx, _Mdouble_ *__cosx));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__cbrt": {
      "source": "__MATHCALL (cbrt,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcwidth": {
      "source": "extern int wcwidth (wchar_t __c) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyBuffer_FillContiguousStrides": {
      "source": "PyAPI_FUNC(void) PyBuffer_FillContiguousStrides(int ndims,\n                                                    Py_ssize_t *shape,\n                                                    Py_ssize_t *strides,\n                                                    int itemsize,\n                                                    char fort);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_BuildValue": {
      "source": "PyAPI_FUNC(PyObject *) Py_BuildValue(const char *, ...);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "gsignal": {
      "source": "extern int gsignal (int __sig) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getusershell": {
      "source": "extern char *getusershell (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyImport_Init": {
      "source": "PyAPI_FUNC(void) _PyImport_Init(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isgraph": {
      "source": "__exctype (isgraph);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__ctype_tolower_loc": {
      "source": "extern const __int32_t **__ctype_tolower_loc (void)\n     __THROW __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isinfl": {
      "source": "__MATHDECL_1 (int,isinf,, (_Mdouble_ __value)) __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "clock_adjtime": {
      "source": "extern int clock_adjtime (__clockid_t __clock_id, struct timex *__utx) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyThreadState_Swap": {
      "source": "PyAPI_FUNC(PyThreadState *) PyThreadState_Swap(PyThreadState *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_GivenExceptionMatches": {
      "source": "PyAPI_FUNC(int) PyErr_GivenExceptionMatches(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstombs": {
      "source": "extern size_t wcstombs (char *__restrict __s,\n\t\t\tconst wchar_t *__restrict __pwcs, size_t __n)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_GetSlice": {
      "source": "PyAPI_FUNC(PyObject *) PySequence_GetSlice(PyObject *o, Py_ssize_t i1, Py_ssize_t i2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCFunction_GetFunction": {
      "source": "PyAPI_FUNC(PyCFunction) PyCFunction_GetFunction(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyComplex_FormatAdvanced": {
      "source": "PyAPI_FUNC(PyObject *) _PyComplex_FormatAdvanced(PyObject *obj,\n                                                 char *format_spec,\n                                                 Py_ssize_t format_spec_len);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "nrand48": {
      "source": "extern long int nrand48 (unsigned short int __xsubi[3])\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setdomainname": {
      "source": "extern int setdomainname (const char *__name, size_t __len)\n     __THROW __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_BadInternalCall": {
      "source": "PyAPI_FUNC(void) PyErr_BadInternalCall(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyThreadState_DeleteCurrent": {
      "source": "PyAPI_FUNC(void) PyThreadState_DeleteCurrent(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__hypot": {
      "source": "__MATHCALL (hypot,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__lxstat": {
      "source": "extern int __REDIRECT_NTH (__lxstat, (int __ver, const char *__filename,\n\t\t\t\t      struct stat *__stat_buf), __lxstat64)\n     __nonnull ((2, 3));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_FromSize_t": {
      "source": "PyAPI_FUNC(PyObject *) PyLong_FromSize_t(size_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFloat_GetInfo": {
      "source": "PyAPI_FUNC(PyObject *) PyFloat_GetInfo(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyModule_GetName": {
      "source": "PyAPI_FUNC(char *) PyModule_GetName(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_Count": {
      "source": "PyAPI_FUNC(Py_ssize_t) PyUnicode_Count(\n    PyObject *str,              /* String */\n    PyObject *substr,           /* Substring to count */\n    Py_ssize_t start,           /* Start index */\n    Py_ssize_t end              /* Stop index */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_SetSlice": {
      "source": "PyAPI_FUNC(int) PySequence_SetSlice(PyObject *o, Py_ssize_t i1, Py_ssize_t i2,\n                                        PyObject *v);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_set_387controlword": {
      "source": "PyAPI_FUNC(void) _Py_set_387controlword(unsigned short);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tmpnam": {
      "source": "extern char *tmpnam (char *__s) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__floor": {
      "source": "__MATHCALLX (floor,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeEncodeError_SetEnd": {
      "source": "PyAPI_FUNC(int) PyUnicodeEncodeError_SetEnd(PyObject *, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyDict_NewPresized": {
      "source": "PyAPI_FUNC(PyObject *) _PyDict_NewPresized(Py_ssize_t minused);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFile_Name": {
      "source": "PyAPI_FUNC(PyObject *) PyFile_Name(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyOS_ascii_strtod": {
      "source": "PyAPI_FUNC(double) PyOS_ascii_strtod(const char *str, char **ptr);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyOS_mystricmp": {
      "source": "PyAPI_FUNC(int) PyOS_mystricmp(const char *, const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_Print": {
      "source": "PyAPI_FUNC(void) PyErr_Print(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "gnu_dev_minor": {
      "source": "extern unsigned int gnu_dev_minor (unsigned long long int __dev)\n     __THROW __attribute_const__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "daemon": {
      "source": "extern int daemon (int __nochdir, int __noclose) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ctime": {
      "source": "extern char *ctime (const time_t *__timer) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_Concat": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_Concat(\n    PyObject *left,             /* Left string */\n    PyObject *right             /* Right string */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyImport_Fini": {
      "source": "PyAPI_FUNC(void) _PyImport_Fini(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "freopen": {
      "source": "extern FILE *__REDIRECT (freopen, (const char *__restrict __filename,\n\t\t\t\t   const char *__restrict __modes,\n\t\t\t\t   FILE *__restrict __stream), freopen64)\n", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyWrapper_New": {
      "source": "PyAPI_FUNC(PyObject *) PyWrapper_New(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstol": {
      "source": "extern long int wcstol (const wchar_t *__restrict __nptr,\n\t\t\twchar_t **__restrict __endptr, int __base) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fread_unlocked": {
      "source": "extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,\n\t\t\t      size_t __n, FILE *__restrict __stream) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "rpmatch": {
      "source": "extern int rpmatch (const char *__response) __THROW __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_FromSsize_t": {
      "source": "PyAPI_FUNC(PyObject *) PyLong_FromSsize_t(Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_Free": {
      "source": "PyAPI_FUNC(void) PyObject_Free(void *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "hypot": {
      "source": "__MATHCALL (hypot,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_Fetch": {
      "source": "PyAPI_FUNC(void) PyErr_Fetch(PyObject **, PyObject **, PyObject **);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getgid": {
      "source": "extern __gid_t getgid (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ctermid": {
      "source": "extern char *ctermid (char *__s) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__rint": {
      "source": "__MATHCALL (rint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_IO_feof": {
      "source": "extern int _IO_feof (_IO_FILE *__fp) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_Fast": {
      "source": "PyAPI_FUNC(PyObject *) PySequence_Fast(PyObject *o, const char* m);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_GetRecursionLimit": {
      "source": "PyAPI_FUNC(int) Py_GetRecursionLimit(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lutimes": {
      "source": "extern int lutimes (const char *__file, const struct timeval __tvp[2])\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMapping_SetItemString": {
      "source": "PyAPI_FUNC(int) PyMapping_SetItemString(PyObject *o, char *key,\n                                            PyObject *value);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sighold": {
      "source": "extern int sighold (int __sig) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getpagesize": {
      "source": "extern int getpagesize (void)  __THROW __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fchmodat": {
      "source": "extern int fchmodat (int __fd, const char *__file, __mode_t __mode,\n\t\t     int __flag)\n     __THROW __nonnull ((2)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "gmtime": {
      "source": "extern struct tm *gmtime (const time_t *__timer) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fcloseall": {
      "source": "extern int fcloseall (void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcsncasecmp_l": {
      "source": "extern int wcsncasecmp_l (const wchar_t *__s1, const wchar_t *__s2,\n\t\t\t  size_t __n, __locale_t __loc) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__asin": {
      "source": "__MATHCALL (asin,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcsftime_l": {
      "source": "extern size_t wcsftime_l (wchar_t *__restrict __s, size_t __maxsize,\n\t\t\t  const wchar_t *__restrict __format,\n\t\t\t  const struct tm *__restrict __tp,\n\t\t\t  __locale_t __loc) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyModule_GetFilename": {
      "source": "PyAPI_FUNC(char *) PyModule_GetFilename(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "pthread_sigqueue": {
      "source": "extern int pthread_sigqueue (pthread_t __threadid, int __signo,\n\t\t\t     const union sigval __value) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_ReleaseLock": {
      "source": "PyAPI_FUNC(void) PyEval_ReleaseLock(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PySet_Update": {
      "source": "PyAPI_FUNC(int) _PySet_Update(PyObject *set, PyObject *iterable);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_Not": {
      "source": "PyAPI_FUNC(int) PyObject_Not(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_DecodeUTF32": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_DecodeUTF32(\n    const char *string,         /* UTF-32 encoded string */\n    Py_ssize_t length,          /* size of string */\n    const char *errors,         /* error handling */\n    int *byteorder              /* pointer to byteorder to use\n                                   0=native;-1=LE,1=BE; updated on\n                                   exit */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "j1l": {
      "source": "__MATHCALL (j1,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "roundf": {
      "source": "__MATHCALLX (round,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tmpfile": {
      "source": "extern FILE *__REDIRECT (tmpfile, (void), tmpfile64) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getpgid": {
      "source": "extern __pid_t getpgid (__pid_t __pid) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "logbl": {
      "source": "__MATHCALL (logb,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyOS_ascii_atof": {
      "source": "PyAPI_FUNC(double) PyOS_ascii_atof(const char *str);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_GetRestricted": {
      "source": "PyAPI_FUNC(int) PyEval_GetRestricted(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyFloat_FormatAdvanced": {
      "source": "PyAPI_FUNC(PyObject *) _PyFloat_FormatAdvanced(PyObject *obj,\n\t\t\t\t\t       char *format_spec,\n\t\t\t\t\t       Py_ssize_t format_spec_len);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fork": {
      "source": "extern __pid_t fork (void) __THROWNL;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_Call": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_Call(PyObject *callable_object,\n                                         PyObject *args, PyObject *kw);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyModule_GetDict": {
      "source": "PyAPI_FUNC(PyObject *) PyModule_GetDict(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyList_SetItem": {
      "source": "PyAPI_FUNC(int) PyList_SetItem(PyObject *, Py_ssize_t, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__finitel": {
      "source": "__MATHDECL_1 (int,__finite,, (_Mdouble_ __value)) __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__finitef": {
      "source": "__MATHDECL_1 (int,__finite,, (_Mdouble_ __value)) __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__ilogbl": {
      "source": "__MATHDECL (int,ilogb,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "bsd_signal": {
      "source": "extern __sighandler_t bsd_signal (int __sig, __sighandler_t __handler)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__ilogb": {
      "source": "__MATHDECL (int,ilogb,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__ilogbf": {
      "source": "__MATHDECL (int,ilogb,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__pow10f": {
      "source": "__MATHCALL (pow10,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_ReInitThreads": {
      "source": "PyAPI_FUNC(void) PyEval_ReInitThreads(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__pow10l": {
      "source": "__MATHCALL (pow10,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyType_Modified": {
      "source": "PyAPI_FUNC(void) PyType_Modified(PyTypeObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_Realloc": {
      "source": "PyAPI_FUNC(void *) PyObject_Realloc(void *, size_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "syscall": {
      "source": "extern long int syscall (long int __sysno, ...) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mbrtowc": {
      "source": "extern size_t mbrtowc (wchar_t *__restrict __pwc,\n\t\t       const char *__restrict __s, size_t __n,\n\t\t       mbstate_t *__restrict __p) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ftello": {
      "source": "extern __off64_t __REDIRECT (ftello, (FILE *__stream), ftello64);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Add": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Add(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "initstate": {
      "source": "extern char *initstate (unsigned int __seed, char *__statebuf,\n\t\t\tsize_t __statelen) __THROW __nonnull ((2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ftello64": {
      "source": "extern __off64_t ftello64 (FILE *__stream) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__scalb": {
      "source": "__MATHCALL (scalb,, (_Mdouble_ __x, _Mdouble_ __n));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyImport_FixupExtension": {
      "source": "PyAPI_FUNC(PyObject *) _PyImport_FixupExtension(char *, char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMem_Malloc": {
      "source": "PyAPI_FUNC(void *) PyMem_Malloc(size_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "posix_openpt": {
      "source": "extern int posix_openpt (int __oflag) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_ClearWeakRefs": {
      "source": "PyAPI_FUNC(void) PyObject_ClearWeakRefs(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "floor": {
      "source": "__MATHCALLX (floor,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "memmem": {
      "source": "extern void *memmem (const void *__haystack, size_t __haystacklen,\n\t\t     const void *__needle, size_t __needlelen)\n     __THROW __attribute_pure__ __nonnull ((1, 3));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicodeUCS4_IsUppercase": {
      "source": "PyAPI_FUNC(int) _PyUnicode_IsUppercase(\n    Py_UNICODE ch       /* Unicode character */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_Splitlines": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_Splitlines(\n    PyObject *s,                /* String to split */\n    int keepends                /* If true, line end markers are included */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_MakePendingCalls": {
      "source": "PyAPI_FUNC(int) Py_MakePendingCalls(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicodeUCS4_IsLinebreak": {
      "source": "PyAPI_FUNC(int) _PyUnicode_IsLinebreak(\n    const Py_UNICODE ch         /* Unicode character */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "truncate": {
      "source": "extern int __REDIRECT_NTH (truncate,\n\t\t\t   (const char *__file, __off64_t __length),\n\t\t\t   truncate64) __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigaddset": {
      "source": "extern int sigaddset (sigset_t *__set, int __signo) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_InPlaceRepeat": {
      "source": "PyAPI_FUNC(PyObject *) PySequence_InPlaceRepeat(PyObject *o, Py_ssize_t count);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getegid": {
      "source": "extern __gid_t getegid (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFloat_AsReprString": {
      "source": "PyAPI_FUNC(void) PyFloat_AsReprString(char*, PyFloatObject *v);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtoul_l": {
      "source": "extern unsigned long int strtoul_l (const char *__restrict __nptr,\n\t\t\t\t    char **__restrict __endptr,\n\t\t\t\t    int __base, __locale_t __loc)\n     __THROW __nonnull ((1, 4));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicodeUCS4_IsDigit": {
      "source": "PyAPI_FUNC(int) _PyUnicode_IsDigit(\n    Py_UNICODE ch       /* Unicode character */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_ReleaseThread": {
      "source": "PyAPI_FUNC(void) PyEval_ReleaseThread(PyThreadState *tstate);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "time": {
      "source": "extern time_t time (time_t *__timer) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__issignaling": {
      "source": "__MATHDECL_1 (int, __issignaling,, (_Mdouble_ __value))\n     __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "cbrtf": {
      "source": "__MATHCALL (cbrt,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "nearbyint": {
      "source": "__MATHCALL (nearbyint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_EncodeUTF32": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_EncodeUTF32(\n    const Py_UNICODE *data,     /* Unicode char buffer */\n    Py_ssize_t length,          /* number of Py_UNICODE chars to encode */\n    const char *errors,         /* error handling */\n    int byteorder               /* byteorder to use 0=BOM+native;-1=LE,1=BE */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "iscntrl_l": {
      "source": "__exctype_l (iscntrl_l);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "cbrtl": {
      "source": "__MATHCALL (cbrt,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "freopen64": {
      "source": "extern FILE *freopen64 (const char *__restrict __filename,\n\t\t\tconst char *__restrict __modes,\n\t\t\tFILE *__restrict __stream) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_InternImmortal": {
      "source": "PyAPI_FUNC(void) PyString_InternImmortal(PyObject **);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fsetpos": {
      "source": "extern int __REDIRECT (fsetpos,\n\t\t       (FILE *__stream, const fpos_t *__pos), fsetpos64);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "expm1l": {
      "source": "__MATHCALL (expm1,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyTuple_GetItem": {
      "source": "PyAPI_FUNC(PyObject *) PyTuple_GetItem(PyObject *, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__scalblnf": {
      "source": "__MATHCALL (scalbln,, (_Mdouble_ __x, long int __n));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__scalblnl": {
      "source": "__MATHCALL (scalbln,, (_Mdouble_ __x, long int __n));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_ExceptionMatches": {
      "source": "PyAPI_FUNC(int) PyErr_ExceptionMatches(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__bzero": {
      "source": "extern void __bzero (void *__s, size_t __n) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_FdIsInteractive": {
      "source": "PyAPI_FUNC(int) Py_FdIsInteractive(FILE *, const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyRun_InteractiveLoopFlags": {
      "source": "PyAPI_FUNC(int) PyRun_InteractiveLoopFlags(FILE *, const char *, PyCompilerFlags *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_FromEncodedObject": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_FromEncodedObject(\n    register PyObject *obj,     /* Object */\n    const char *encoding,       /* encoding */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fopencookie": {
      "source": "extern FILE *fopencookie (void *__restrict __magic_cookie,\n\t\t\t  const char *__restrict __modes,\n\t\t\t  _IO_cookie_io_functions_t __io_funcs) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "seteuid": {
      "source": "extern int seteuid (__uid_t __uid) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicode_EncodeUTF7": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_EncodeUTF7(\n    const Py_UNICODE *data,     /* Unicode char buffer */\n    Py_ssize_t length,                  /* number of Py_UNICODE chars to encode */\n    int base64SetO,             /* Encode RFC2152 Set O characters in base64 */\n    int base64WhiteSpace,       /* Encode whitespace (sp, ht, nl, cr) in base64 */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCell_New": {
      "source": "PyAPI_FUNC(PyObject *) PyCell_New(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strnlen": {
      "source": "extern size_t strnlen (const char *__string, size_t __maxlen)\n     __THROW __attribute_pure__ __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_AsLong": {
      "source": "PyAPI_FUNC(long) PyLong_AsLong(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_Format": {
      "source": "PyAPI_FUNC(PyObject *) PyString_Format(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_SetNone": {
      "source": "PyAPI_FUNC(void) PyErr_SetNone(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCode_Addr2Line": {
      "source": "PyAPI_FUNC(int) PyCode_Addr2Line(PyCodeObject *, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCodec_IncrementalEncoder": {
      "source": "PyAPI_FUNC(PyObject *) PyCodec_IncrementalEncoder(\n       const char *encoding,\n       const char *errors\n       );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_DelItem": {
      "source": "PyAPI_FUNC(int) PySequence_DelItem(PyObject *o, Py_ssize_t i);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "div": {
      "source": "extern div_t div (int __numer, int __denom)\n     __THROW __attribute__ ((__const__)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "round": {
      "source": "__MATHCALLX (round,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "putchar_unlocked": {
      "source": "extern int putchar_unlocked (int __c);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "cosf": {
      "source": "__MATHCALL (cos,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "nexttoward": {
      "source": "__MATHCALLX (nexttoward,, (_Mdouble_ __x, long double __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ecvt": {
      "source": "extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,\n\t\t   int *__restrict __sign) __THROW __nonnull ((3, 4)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_DelItemString": {
      "source": "PyAPI_FUNC(int) PyObject_DelItemString(PyObject *o, char *key);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "cosl": {
      "source": "__MATHCALL (cos,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyParser_SimpleParseFileFlags": {
      "source": "PyAPI_FUNC(struct _node *) PyParser_SimpleParseFileFlags(FILE *, const char *,\n                                                        int, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "cosh": {
      "source": "__MATHCALL (cosh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__stpcpy": {
      "source": "extern char *__stpcpy (char *__restrict __dest, const char *__restrict __src)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sincos": {
      "source": "__MATHDECL (void,sincos,,\n\t    (_Mdouble_ __x, _Mdouble_ *__sinx, _Mdouble_ *__cosx));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCapsule_SetContext": {
      "source": "PyAPI_FUNC(int) PyCapsule_SetContext(PyObject *capsule, void *context);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__nan": {
      "source": "__MATHCALLX (nan,, (const char *__tagb), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getchar_unlocked": {
      "source": "extern int getchar_unlocked (void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_EncodeLatin1": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_EncodeLatin1(\n    const Py_UNICODE *data,     /* Unicode char buffer */\n    Py_ssize_t length,                  /* Number of Py_UNICODE chars to encode */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ffsll": {
      "source": "extern int ffsll (long long int __ll)\n     __THROW __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_IsInstance": {
      "source": "PyAPI_FUNC(int) PyObject_IsInstance(PyObject *object, PyObject *typeorclass);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCodec_IncrementalDecoder": {
      "source": "PyAPI_FUNC(PyObject *) PyCodec_IncrementalDecoder(\n       const char *encoding,\n       const char *errors\n       );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_SetProfile": {
      "source": "PyAPI_FUNC(void) PyEval_SetProfile(Py_tracefunc, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_AsUTF32String": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_AsUTF32String(\n    PyObject *unicode           /* Unicode object */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "significandl": {
      "source": "__MATHCALL (significand,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fmax": {
      "source": "__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "significandf": {
      "source": "__MATHCALL (significand,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "localtime_r": {
      "source": "extern struct tm *localtime_r (const time_t *__restrict __timer,\n\t\t\t       struct tm *__restrict __tp) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__dremf": {
      "source": "__MATHCALL (drem,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "timer_settime": {
      "source": "extern int timer_settime (timer_t __timerid, int __flags,\n\t\t\t  const struct itimerspec *__restrict __value,\n\t\t\t  struct itimerspec *__restrict __ovalue) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setregid": {
      "source": "extern int setregid (__gid_t __rgid, __gid_t __egid) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fmaf": {
      "source": "__MATHCALL (fma,, (_Mdouble_ __x, _Mdouble_ __y, _Mdouble_ __z));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "putwchar_unlocked": {
      "source": "extern wint_t putwchar_unlocked (wchar_t __wc);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__dreml": {
      "source": "__MATHCALL (drem,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fmal": {
      "source": "__MATHCALL (fma,, (_Mdouble_ __x, _Mdouble_ __y, _Mdouble_ __z));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Divide": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Divide(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_WarnExplicit": {
      "source": "PyAPI_FUNC(int) PyErr_WarnExplicit(PyObject *, const char *, const char *, int,\n                                    const char *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fputws": {
      "source": "extern int fputws (const wchar_t *__restrict __ws,\n\t\t   __FILE *__restrict __stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "open_wmemstream": {
      "source": "extern __FILE *open_wmemstream (wchar_t **__bufloc, size_t *__sizeloc) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_GetFrame": {
      "source": "PyAPI_FUNC(struct _frame *) PyEval_GetFrame(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lroundl": {
      "source": "__MATHDECL (long int,lround,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_AsEncodedObject": {
      "source": "PyAPI_FUNC(PyObject*) PyString_AsEncodedObject(\n    PyObject *str,\t \t/* string object */\n    const char *encoding,\t/* encoding */\n    const char *errors\t\t/* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInt_AsUnsignedLongLongMask": {
      "source": "PyAPI_FUNC(unsigned PY_LONG_LONG) PyInt_AsUnsignedLongLongMask(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyAST_Compile": {
      "source": "PyAPI_FUNC(PyCodeObject *) PyAST_Compile(struct _mod *, const char *,\n\t\t\t\t\tPyCompilerFlags *, PyArena *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fputwc": {
      "source": "extern wint_t fputwc (wchar_t __wc, __FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wmempcpy": {
      "source": "extern wchar_t *wmempcpy (wchar_t *__restrict __s1,\n\t\t\t  const wchar_t *__restrict __s2, size_t __n)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "pause": {
      "source": "extern int pause (void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "bzero": {
      "source": "extern void bzero (void *__s, size_t __n) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__cbrtl": {
      "source": "__MATHCALL (cbrt,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigtimedwait": {
      "source": "extern int sigtimedwait (const sigset_t *__restrict __set,\n\t\t\t siginfo_t *__restrict __info,\n\t\t\t const struct timespec *__restrict __timeout)\n     __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_ReprEnter": {
      "source": "PyAPI_FUNC(int) Py_ReprEnter(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "clock_settime": {
      "source": "extern int clock_settime (clockid_t __clock_id, const struct timespec *__tp)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_SetItem": {
      "source": "PyAPI_FUNC(int) PySequence_SetItem(PyObject *o, Py_ssize_t i, PyObject *v);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "rindex": {
      "source": "extern char *rindex (const char *__s, int __c)\n     __THROW __attribute_pure__ __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_GC_NewVar": {
      "source": "PyAPI_FUNC(PyVarObject *) _PyObject_GC_NewVar(PyTypeObject *, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fmod": {
      "source": "__MATHCALL (fmod,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Int": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Int(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "pathconf": {
      "source": "extern long int pathconf (const char *__path, int __name)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcscspn": {
      "source": "extern size_t wcscspn (const wchar_t *__wcs, const wchar_t *__reject)\n     __THROW __attribute_pure__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__assert": {
      "source": "extern void __assert (const char *__assertion, const char *__file, int __line)\n     __THROW __attribute__ ((__noreturn__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigstack": {
      "source": "extern int sigstack (struct sigstack *__ss, struct sigstack *__oss)\n     __THROW __attribute_deprecated__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDescr_NewGetSet": {
      "source": "PyAPI_FUNC(PyObject *) PyDescr_NewGetSet(PyTypeObject *,\n                                               struct PyGetSetDef *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyArg_UnpackTuple": {
      "source": "PyAPI_FUNC(int) PyArg_UnpackTuple(PyObject *, const char *, Py_ssize_t, Py_ssize_t, ...);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyTuple_SetItem": {
      "source": "PyAPI_FUNC(int) PyTuple_SetItem(PyObject *, Py_ssize_t, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_FromVoidPtr": {
      "source": "PyAPI_FUNC(PyObject *) PyLong_FromVoidPtr(void *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ftrylockfile": {
      "source": "extern int ftrylockfile (FILE *__stream) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_Format": {
      "source": "PyAPI_FUNC(PyObject *) PyUnicode_Format(\n    PyObject *format,           /* Format string */\n    PyObject *args              /* Argument tuple or dictionary */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setresuid": {
      "source": "extern int setresuid (__uid_t __ruid, __uid_t __euid, __uid_t __suid)\n     __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyList_Size": {
      "source": "PyAPI_FUNC(Py_ssize_t) PyList_Size(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "vfork": {
      "source": "extern __pid_t vfork (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lockf": {
      "source": "extern int __REDIRECT (lockf, (int __fd, int __cmd, __off64_t __len),\n\t\t       lockf64) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sysconf": {
      "source": "extern long int sysconf (int __name) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyType_Ready": {
      "source": "PyAPI_FUNC(int) PyType_Ready(PyTypeObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__mbrlen": {
      "source": "extern size_t __mbrlen (const char *__restrict __s, size_t __n,\n\t\t\tmbstate_t *__restrict __ps) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtold": {
      "source": "extern long double strtold (const char *__restrict __nptr,\n\t\t\t    char **__restrict __endptr)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "abort": {
      "source": "extern void abort (void) __THROW __attribute__ ((__noreturn__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__logl": {
      "source": "__MATHCALL (log,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_GetExecPrefix": {
      "source": "PyAPI_FUNC(char *) Py_GetExecPrefix(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_ThreadsInitialized": {
      "source": "PyAPI_FUNC(int)  PyEval_ThreadsInitialized(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtoll": {
      "source": "extern long long int strtoll (const char *__restrict __nptr,\n\t\t\t      char **__restrict __endptr, int __base)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__logf": {
      "source": "__MATHCALL (log,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strncat": {
      "source": "extern char *strncat (char *__restrict __dest, const char *__restrict __src,\n\t\t      size_t __n) __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "chroot": {
      "source": "extern int chroot (const char *__path) __THROW __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "clearerr": {
      "source": "extern void clearerr (FILE *__stream) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_AsLatin1String": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_AsLatin1String(\n    PyObject *unicode           /* Unicode object */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "write": {
      "source": "extern ssize_t write (int __fd, const void *__buf, size_t __n) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "flockfile": {
      "source": "extern void flockfile (FILE *__stream) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "atan": {
      "source": "__MATHCALL (atan,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "memrchr": {
      "source": "extern void *memrchr (const void *__s, int __c, size_t __n)\n      __THROW __attribute_pure__ __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__log2": {
      "source": "__MATHCALL (log2,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__assert_perror_fail": {
      "source": "extern void __assert_perror_fail (int __errnum, const char *__file,\n\t\t\t\t  unsigned int __line, const char *__function)\n     __THROW __attribute__ ((__noreturn__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyBuiltin_Init": {
      "source": "PyAPI_FUNC(PyObject *) _PyBuiltin_Init(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyImport_ImportModuleNoBlock": {
      "source": "PyAPI_FUNC(PyObject *) PyImport_ImportModuleNoBlock(const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeTranslateError_SetEnd": {
      "source": "PyAPI_FUNC(int) PyUnicodeTranslateError_SetEnd(PyObject *, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCodec_StreamReader": {
      "source": "PyAPI_FUNC(PyObject *) PyCodec_StreamReader(\n       const char *encoding,\n       PyObject *stream,\n       const char *errors\n       );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strncasecmp_l": {
      "source": "extern int strncasecmp_l (const char *__s1, const char *__s2,\n\t\t\t  size_t __n, __locale_t __loc)\n     __THROW __attribute_pure__ __nonnull ((1, 2, 4));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "acos": {
      "source": "__MATHCALL (acos,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMethod_Class": {
      "source": "PyAPI_FUNC(PyObject *) PyMethod_Class(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFile_AsFile": {
      "source": "PyAPI_FUNC(FILE *) PyFile_AsFile(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_AsCharmapString": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_AsCharmapString(\n    PyObject *unicode,          /* Unicode object */\n    PyObject *mapping           /* character mapping\n                                   (unicode ordinal -> char ordinal) */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wctob": {
      "source": "extern int wctob (wint_t __c) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setpgrp": {
      "source": "extern int setpgrp (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__xstat": {
      "source": "extern int __REDIRECT_NTH (__xstat, (int __ver, const char *__filename,\n\t\t\t\t     struct stat *__stat_buf), __xstat64)\n     __nonnull ((2, 3));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyModule_AddStringConstant": {
      "source": "PyAPI_FUNC(int) PyModule_AddStringConstant(PyObject *, const char *, const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyArg_Parse": {
      "source": "PyAPI_FUNC(int) PyArg_Parse(PyObject *, const char *, ...);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__ceilf": {
      "source": "__MATHCALLX (ceil,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_UniversalNewlineFread": {
      "source": "size_t Py_UniversalNewlineFread(char *, size_t, FILE *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCodec_Encoder": {
      "source": "PyAPI_FUNC(PyObject *) PyCodec_Encoder(\n       const char *encoding\n       );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "roundl": {
      "source": "__MATHCALLX (round,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyList_Append": {
      "source": "PyAPI_FUNC(int) PyList_Append(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mbrlen": {
      "source": "extern size_t mbrlen (const char *__restrict __s, size_t __n,\n\t\t      mbstate_t *__restrict __ps) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyOS_strtoul": {
      "source": "PyAPI_FUNC(unsigned long) PyOS_strtoul(char *, char **, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcsnrtombs": {
      "source": "extern size_t wcsnrtombs (char *__restrict __dst,\n\t\t\t  const wchar_t **__restrict __src,\n\t\t\t  size_t __nwc, size_t __len,\n\t\t\t  mbstate_t *__restrict __ps) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyType_ClearCache": {
      "source": "PyAPI_FUNC(unsigned int) PyType_ClearCache(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInt_AsLong": {
      "source": "PyAPI_FUNC(long) PyInt_AsLong(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__asinh": {
      "source": "__MATHCALL (asinh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__asinl": {
      "source": "__MATHCALL (asin,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_GC_Resize": {
      "source": "PyAPI_FUNC(PyVarObject *) _PyObject_GC_Resize(PyVarObject *, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__asinf": {
      "source": "__MATHCALL (asin,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyModule_New": {
      "source": "PyAPI_FUNC(PyObject *) PyModule_New(const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_EvalFrame": {
      "source": "PyAPI_FUNC(PyObject *) PyEval_EvalFrame(struct _frame *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySet_Contains": {
      "source": "PyAPI_FUNC(int) PySet_Contains(PyObject *anyset, PyObject *key);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFunction_GetCode": {
      "source": "PyAPI_FUNC(PyObject *) PyFunction_GetCode(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strcoll_l": {
      "source": "extern int strcoll_l (const char *__s1, const char *__s2, __locale_t __l)\n     __THROW __attribute_pure__ __nonnull ((1, 2, 3));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_SetRecursionLimit": {
      "source": "PyAPI_FUNC(void) Py_SetRecursionLimit(int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_FromLong": {
      "source": "PyAPI_FUNC(PyObject *) PyLong_FromLong(long);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMethod_Function": {
      "source": "PyAPI_FUNC(PyObject *) PyMethod_Function(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isxdigit_l": {
      "source": "__exctype_l (isxdigit_l);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "siggetmask": {
      "source": "extern int siggetmask (void) __THROW __attribute_deprecated__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setreuid": {
      "source": "extern int setreuid (__uid_t __ruid, __uid_t __euid) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getdelim": {
      "source": "extern _IO_ssize_t getdelim (char **__restrict __lineptr,\n\t\t\t     size_t *__restrict __n, int __delimiter,\n\t\t\t     FILE *__restrict __stream) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__coshf": {
      "source": "__MATHCALL (cosh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__coshl": {
      "source": "__MATHCALL (cosh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyByteArray_Fini": {
      "source": "PyAPI_FUNC(void) PyByteArray_Fini(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Invert": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Invert(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyString_Join": {
      "source": "PyAPI_FUNC(PyObject *) _PyString_Join(PyObject *sep, PyObject *x);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "clock_gettime": {
      "source": "extern int clock_gettime (clockid_t __clock_id, struct timespec *__tp) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_GetItem": {
      "source": "PyAPI_FUNC(PyObject *) PySequence_GetItem(PyObject *o, Py_ssize_t i);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sqrtl": {
      "source": "__MATHCALL (sqrt,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__log10": {
      "source": "__MATHCALL (log10,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "initstate_r": {
      "source": "extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,\n\t\t\tsize_t __statelen,\n\t\t\tstruct random_data *__restrict __buf)\n     __THROW __nonnull ((2, 4));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fdimf": {
      "source": "__MATHCALL (fdim,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fdiml": {
      "source": "__MATHCALL (fdim,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicode_DecodeUTF7": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_DecodeUTF7(\n    const char *string,         /* UTF-7 encoded string */\n    Py_ssize_t length,          /* size of string */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "profil": {
      "source": "extern int profil (unsigned short int *__sample_buffer, size_t __size,\n\t\t   size_t __offset, unsigned int __scale)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInt_FromSsize_t": {
      "source": "PyAPI_FUNC(PyObject *) PyInt_FromSsize_t(Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicodeUCS4_ToDecimalDigit": {
      "source": "PyAPI_FUNC(int) _PyUnicode_ToDecimalDigit(\n    Py_UNICODE ch       /* Unicode character */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyWeakref_ClearRef": {
      "source": "PyAPI_FUNC(void) _PyWeakref_ClearRef(PyWeakReference *self);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_RealIsInstance": {
      "source": "PyAPI_FUNC(int) _PyObject_RealIsInstance(PyObject *inst, PyObject *cls);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_Main": {
      "source": "PyAPI_FUNC(int) Py_Main(int argc, char **argv);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_Concat": {
      "source": "PyAPI_FUNC(void) PyString_Concat(PyObject **, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "asprintf": {
      "source": "extern int asprintf (char **__restrict __ptr,\n\t\t     const char *__restrict __fmt, ...)\n     __THROWNL __attribute__ ((__format__ (__printf__, 2, 3))) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ferror": {
      "source": "extern int ferror (FILE *__stream) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getcwd": {
      "source": "extern char *getcwd (char *__buf, size_t __size) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_c_quot": {
      "source": "PyAPI_FUNC(Py_complex) c_quot(Py_complex, Py_complex);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__log1p": {
      "source": "__MATHCALL (log1p,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_AsASCIIString": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_AsASCIIString(\n    PyObject *unicode           /* Unicode object */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "asctime_r": {
      "source": "extern char *asctime_r (const struct tm *__restrict __tp,\n\t\t\tchar *__restrict __buf) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "remainder": {
      "source": "__MATHCALL (remainder,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "toupper_l": {
      "source": "extern int toupper_l (int __c, __locale_t __l) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyBytes_FormatAdvanced": {
      "source": "PyAPI_FUNC(PyObject *) _PyBytes_FormatAdvanced(PyObject *obj,\n\t\t\t\t\t       char *format_spec,\n\t\t\t\t\t       Py_ssize_t format_spec_len);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_GetBuildInfo": {
      "source": "PyAPI_FUNC(const char *) Py_GetBuildInfo(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__uflow": {
      "source": "extern int __uflow (_IO_FILE *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyComplex_AsCComplex": {
      "source": "PyAPI_FUNC(Py_complex) PyComplex_AsCComplex(PyObject *op);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFrozenSet_New": {
      "source": "PyAPI_FUNC(PyObject *) PyFrozenSet_New(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCapsule_GetPointer": {
      "source": "PyAPI_FUNC(void *) PyCapsule_GetPointer(PyObject *capsule, const char *name);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__gamma": {
      "source": "__MATHCALL (gamma,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__cos": {
      "source": "__MATHCALL (cos,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "islower": {
      "source": "__exctype (islower);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isupper": {
      "source": "__exctype (isupper);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lrand48": {
      "source": "extern long int lrand48 (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySys_SetArgv": {
      "source": "PyAPI_FUNC(void) PySys_SetArgv(int, char **);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__significandf": {
      "source": "__MATHCALL (significand,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "rint": {
      "source": "__MATHCALL (rint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_DecodeUTF32Stateful": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_DecodeUTF32Stateful(\n    const char *string,         /* UTF-32 encoded string */\n    Py_ssize_t length,          /* size of string */\n    const char *errors,         /* error handling */\n    int *byteorder,             /* pointer to byteorder to use\n                                   0=native;-1=LE,1=BE; updated on\n                                   exit */\n    Py_ssize_t *consumed        /* bytes consumed */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "nextafterl": {
      "source": "__MATHCALLX (nextafter,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__remquol": {
      "source": "__MATHCALL (remquo,, (_Mdouble_ __x, _Mdouble_ __y, int *__quo));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "acct": {
      "source": "extern int acct (const char *__name) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__remquof": {
      "source": "__MATHCALL (remquo,, (_Mdouble_ __x, _Mdouble_ __y, int *__quo));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_GetVersion": {
      "source": "PyAPI_FUNC(const char *) Py_GetVersion(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "clock_nanosleep": {
      "source": "extern int clock_nanosleep (clockid_t __clock_id, int __flags,\n\t\t\t    const struct timespec *__req,\n\t\t\t    struct timespec *__rem);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtoll_l": {
      "source": "extern long long int strtoll_l (const char *__restrict __nptr,\n\t\t\t\tchar **__restrict __endptr, int __base,\n\t\t\t\t__locale_t __loc)\n     __THROW __nonnull ((1, 4));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigpending": {
      "source": "extern int sigpending (sigset_t *__set) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyList_SetSlice": {
      "source": "PyAPI_FUNC(int) PyList_SetSlice(PyObject *, Py_ssize_t, Py_ssize_t, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigvec": {
      "source": "extern int sigvec (int __sig, const struct sigvec *__vec,\n\t\t   struct sigvec *__ovec) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strfry": {
      "source": "extern char *strfry (char *__string) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_SubversionShortBranch": {
      "source": "PyAPI_FUNC(const char *) Py_SubversionShortBranch(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fma": {
      "source": "__MATHCALL (fma,, (_Mdouble_ __x, _Mdouble_ __y, _Mdouble_ __z));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_Format": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_Format(PyObject* obj,\n                                            PyObject *format_spec);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyLong_AsInt": {
      "source": "PyAPI_FUNC(int) _PyLong_AsInt(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "confstr": {
      "source": "extern size_t confstr (int __name, char *__buf, size_t __len) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_CallFunctionObjArgs": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_CallFunctionObjArgs(PyObject *callable,\n                                                        ...);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMapping_HasKeyString": {
      "source": "PyAPI_FUNC(int) PyMapping_HasKeyString(PyObject *o, char *key);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lcong48_r": {
      "source": "extern int lcong48_r (unsigned short int __param[7],\n\t\t      struct drand48_data *__buffer)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PySys_GetSizeOf": {
      "source": "PyAPI_DATA(size_t) _PySys_GetSizeOf(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyOS_URandom": {
      "source": "PyAPI_FUNC(int) _PyOS_URandom (void *buffer, Py_ssize_t size);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCObject_GetDesc": {
      "source": "PyAPI_FUNC(void *) PyCObject_GetDesc(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyImport_AddModule": {
      "source": "PyAPI_FUNC(PyObject *) PyImport_AddModule(const char *name);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "nrand48_r": {
      "source": "extern int nrand48_r (unsigned short int __xsubi[3],\n\t\t      struct drand48_data *__restrict __buffer,\n\t\t      long int *__restrict __result)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getpass": {
      "source": "extern char *getpass (const char *__prompt) __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigfillset": {
      "source": "extern int sigfillset (sigset_t *__set) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyParser_SimpleParseStringFlags": {
      "source": "PyAPI_FUNC(struct _node *) PyParser_SimpleParseStringFlags(const char *, int,\n                                                          int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wmemcpy": {
      "source": "extern wchar_t *wmemcpy (wchar_t *__restrict __s1,\n\t\t\t const wchar_t *__restrict __s2, size_t __n) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_NormalizeException": {
      "source": "PyAPI_FUNC(void) PyErr_NormalizeException(PyObject**, PyObject**, PyObject**);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFunction_GetModule": {
      "source": "PyAPI_FUNC(PyObject *) PyFunction_GetModule(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "realpath": {
      "source": "extern char *realpath (const char *__restrict __name,\n\t\t       char *__restrict __resolved) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getlogin": {
      "source": "extern char *getlogin (void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_TrueDivide": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_TrueDivide(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strpbrk": {
      "source": "extern char *strpbrk (const char *__s, const char *__accept)\n     __THROW __attribute_pure__ __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "logbf": {
      "source": "__MATHCALL (logb,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__rintf": {
      "source": "__MATHCALL (rint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstold": {
      "source": "extern long double wcstold (const wchar_t *__restrict __nptr,\n\t\t\t    wchar_t **__restrict __endptr) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeTranslateError_GetStart": {
      "source": "PyAPI_FUNC(int) PyUnicodeTranslateError_GetStart(PyObject *, Py_ssize_t *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstoll": {
      "source": "extern long long int wcstoll (const wchar_t *__restrict __nptr,\n\t\t\t      wchar_t **__restrict __endptr, int __base)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__rintl": {
      "source": "__MATHCALL (rint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "srand48": {
      "source": "extern void srand48 (long int __seedval) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyString_InsertThousandsGroupingLocale": {
      "source": "PyAPI_FUNC(Py_ssize_t) _PyString_InsertThousandsGroupingLocale(char *buffer,\n                                  Py_ssize_t n_buffer,\n                                  char *digits,\n                                  Py_ssize_t n_digits,\n                                  Py_ssize_t min_width);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_Unicode": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_Unicode(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtold_l": {
      "source": "extern long double strtold_l (const char *__restrict __nptr,\n\t\t\t      char **__restrict __endptr,\n\t\t\t      __locale_t __loc)\n     __THROW __nonnull ((1, 3));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNode_Compile": {
      "source": "PyAPI_FUNC(PyCodeObject *) PyNode_Compile(struct _node *, const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_AsEncodedString": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_AsEncodedString(\n    PyObject *unicode,          /* Unicode object */\n    const char *encoding,       /* encoding */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_IO_funlockfile": {
      "source": "extern void _IO_funlockfile (_IO_FILE *) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_CallMethodObjArgs": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_CallMethodObjArgs(PyObject *o,\n                                                      PyObject *m, ...);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "obstack_vprintf": {
      "source": "extern int obstack_vprintf (struct obstack *__restrict __obstack,\n\t\t\t    const char *__restrict __format,\n\t\t\t    _G_va_list __args)\n     __THROWNL __attribute__ ((__format__ (__printf__, 2, 0)));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isprint_l": {
      "source": "__exctype_l (isprint_l);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCodec_IgnoreErrors": {
      "source": "PyAPI_FUNC(PyObject *) PyCodec_IgnoreErrors(PyObject *exc);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyArg_ParseTuple": {
      "source": "PyAPI_FUNC(int) PyArg_ParseTuple(PyObject *, const char *, ...) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "timegm": {
      "source": "extern time_t timegm (struct tm *__tp) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fmaxl": {
      "source": "__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtoull": {
      "source": "extern unsigned long long int strtoull (const char *__restrict __nptr,\n\t\t\t\t\tchar **__restrict __endptr, int __base)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lseek64": {
      "source": "extern __off64_t lseek64 (int __fd, __off64_t __offset, int __whence)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fmaxf": {
      "source": "__MATHCALLX (fmax,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_DecRef": {
      "source": "PyAPI_FUNC(void) Py_DecRef(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "atof": {
      "source": "extern double atof (const char *__nptr)\n     __THROW __attribute_pure__ __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "frexp": {
      "source": "__MATHCALL (frexp,, (_Mdouble_ __x, int *__exponent));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcscmp": {
      "source": "extern int wcscmp (const wchar_t *__s1, const wchar_t *__s2)\n     __THROW __attribute_pure__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyRun_SimpleStringFlags": {
      "source": "PyAPI_FUNC(int) PyRun_SimpleStringFlags(const char *, PyCompilerFlags *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "l64a": {
      "source": "extern char *l64a (long int __n) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_double_round": {
      "source": "PyAPI_FUNC(PyObject *) _Py_double_round(double x, int ndigits);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyList_Fini": {
      "source": "PyAPI_FUNC(void) PyList_Fini(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyBuffer_FromObject": {
      "source": "PyAPI_FUNC(PyObject *) PyBuffer_FromObject(PyObject *base,\n                                           Py_ssize_t offset, Py_ssize_t size);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyTrash_thread_deposit_object": {
      "source": "PyAPI_FUNC(void) _PyTrash_thread_deposit_object(PyObject*);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fileno": {
      "source": "extern int fileno (FILE *__stream) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicode_FormatAdvanced": {
      "source": "PyAPI_FUNC(PyObject *) _PyUnicode_FormatAdvanced(PyObject *obj,\n                                                 Py_UNICODE *format_spec,\n                                                 Py_ssize_t format_spec_len);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyOS_mystrnicmp": {
      "source": "PyAPI_FUNC(int) PyOS_mystrnicmp(const char *, const char *, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyBuffer_New": {
      "source": "PyAPI_FUNC(PyObject *) PyBuffer_New(Py_ssize_t size);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyImport_FindExtension": {
      "source": "PyAPI_FUNC(PyObject *) _PyImport_FindExtension(char *, char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcpncpy": {
      "source": "extern wchar_t *wcpncpy (wchar_t *__restrict __dest,\n\t\t\t const wchar_t *__restrict __src, size_t __n)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_AddPendingCall": {
      "source": "PyAPI_FUNC(int) Py_AddPendingCall(int (*func)(void *), void *arg);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "futimes": {
      "source": "extern int futimes (int __fd, const struct timeval __tvp[2]) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__log2l": {
      "source": "__MATHCALL (log2,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "finitef": {
      "source": "__MATHDECL_1 (int,finite,, (_Mdouble_ __value)) __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_hgidentifier": {
      "source": "PyAPI_FUNC(const char *) _Py_hgidentifier(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__log2f": {
      "source": "__MATHCALL (log2,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "j0": {
      "source": "__MATHCALL (j0,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "j1": {
      "source": "__MATHCALL (j1,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "qgcvt": {
      "source": "extern char *qgcvt (long double __value, int __ndigit, char *__buf)\n     __THROW __nonnull ((3)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCObject_SetVoidPtr": {
      "source": "PyAPI_FUNC(int) PyCObject_SetVoidPtr(PyObject *self, void *cobj);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicodeUCS4_ToNumeric": {
      "source": "PyAPI_FUNC(double) _PyUnicode_ToNumeric(\n    Py_UNICODE ch       /* Unicode character */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "scalbln": {
      "source": "__MATHCALL (scalbln,, (_Mdouble_ __x, long int __n));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lcong48": {
      "source": "extern void lcong48 (unsigned short int __param[7]) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_c_diff": {
      "source": "PyAPI_FUNC(Py_complex) c_diff(Py_complex, Py_complex);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_AsLongLong": {
      "source": "PyAPI_FUNC(PY_LONG_LONG) PyLong_AsLongLong(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_CallMethod": {
      "source": "PyAPI_FUNC(PyObject *) PyEval_CallMethod(PyObject *obj,\n                                         const char *methodname,\n                                         const char *format, ...);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyThreadState_SetAsyncExc": {
      "source": "PyAPI_FUNC(int) PyThreadState_SetAsyncExc(long, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_Length": {
      "source": "PyAPI_FUNC(Py_ssize_t) PySequence_Length(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lgammal_r": {
      "source": "__MATHCALL (lgamma,_r, (_Mdouble_, int *__signgamp));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "vdprintf": {
      "source": "extern int vdprintf (int __fd, const char *__restrict __fmt,\n\t\t     _G_va_list __arg)\n     __attribute__ ((__format__ (__printf__, 2, 0)));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__getdelim": {
      "source": "extern _IO_ssize_t __getdelim (char **__restrict __lineptr,\n\t\t\t       size_t *__restrict __n, int __delimiter,\n\t\t\t       FILE *__restrict __stream) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_add_one_to_index_C": {
      "source": "PyAPI_FUNC(void) _Py_add_one_to_index_C(int nd, Py_ssize_t *index,\n                                        const Py_ssize_t *shape);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "jn": {
      "source": "__MATHCALL (jn,, (int, _Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "stime": {
      "source": "extern int stime (const time_t *__when) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_SymtableString": {
      "source": "PyAPI_FUNC(struct symtable *) Py_SymtableString(const char *, const char *, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_Merge": {
      "source": "PyAPI_FUNC(int) PyDict_Merge(PyObject *mp,\n                                   PyObject *other,\n                                   int override);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_Find": {
      "source": "PyAPI_FUNC(Py_ssize_t) PyUnicode_Find(\n    PyObject *str,              /* String */\n    PyObject *substr,           /* Substring to find */\n    Py_ssize_t start,           /* Start index */\n    Py_ssize_t end,             /* Stop index */\n    int direction               /* Find direction: +1 forward, -1 backward */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fminl": {
      "source": "__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fminf": {
      "source": "__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "psiginfo": {
      "source": "extern void psiginfo (const siginfo_t *__pinfo, const char *__s);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFile_WriteString": {
      "source": "PyAPI_FUNC(int) PyFile_WriteString(const char *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_add_one_to_index_F": {
      "source": "PyAPI_FUNC(void) _Py_add_one_to_index_F(int nd, Py_ssize_t *index,\n                                        const Py_ssize_t *shape);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyImport_GetModuleDict": {
      "source": "PyAPI_FUNC(PyObject *) PyImport_GetModuleDict(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tzset": {
      "source": "extern void tzset (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "pow": {
      "source": "__MATHCALL (pow,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strxfrm": {
      "source": "extern size_t strxfrm (char *__restrict __dest,\n\t\t       const char *__restrict __src, size_t __n)\n     __THROW __nonnull ((2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyModule_Clear": {
      "source": "PyAPI_FUNC(void) _PyModule_Clear(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "toupper": {
      "source": "extern int toupper (int __c) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "clearerr_unlocked": {
      "source": "extern void clearerr_unlocked (FILE *__stream) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "aligned_alloc": {
      "source": "extern void *aligned_alloc (size_t __alignment, size_t __size)\n     __THROW __attribute_malloc__ ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFuture_FromAST": {
      "source": "PyAPI_FUNC(PyFutureFeatures *) PyFuture_FromAST(struct _mod *, const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_ReprLeave": {
      "source": "PyAPI_FUNC(void) Py_ReprLeave(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtoimax": {
      "source": "extern intmax_t strtoimax (const char *__restrict __nptr,\n\t\t\t   char **__restrict __endptr, int __base) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyOS_InterruptOccurred": {
      "source": "PyAPI_FUNC(int) PyOS_InterruptOccurred(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fcvt_r": {
      "source": "extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,\n\t\t   int *__restrict __sign, char *__restrict __buf,\n\t\t   size_t __len) __THROW __nonnull ((3, 4, 5));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_FromUnicode": {
      "source": "PyAPI_FUNC(PyObject *) PyLong_FromUnicode(Py_UNICODE*, Py_ssize_t, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_dg_dtoa": {
      "source": "PyAPI_FUNC(char *) _Py_dg_dtoa(double d, int mode, int ndigits,\n                        int *decpt, int *sign, char **rve);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "execvpe": {
      "source": "extern int execvpe (const char *__file, char *const __argv[],\n\t\t    char *const __envp[])\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstoul_l": {
      "source": "extern unsigned long int wcstoul_l (const wchar_t *__restrict __nptr,\n\t\t\t\t    wchar_t **__restrict __endptr,\n\t\t\t\t    int __base, __locale_t __loc) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__nanf": {
      "source": "__MATHCALLX (nan,, (const char *__tagb), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMem_Free": {
      "source": "PyAPI_FUNC(void) PyMem_Free(void *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_Contains": {
      "source": "PyAPI_FUNC(int) PyUnicode_Contains(\n    PyObject *container,        /* Container string */\n    PyObject *element           /* Element string */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyArena_AddPyObject": {
      "source": "PyAPI_FUNC(int) PyArena_AddPyObject(PyArena *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyThreadState_Clear": {
      "source": "PyAPI_FUNC(void) PyThreadState_Clear(PyThreadState *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "scalblnl": {
      "source": "__MATHCALL (scalbln,, (_Mdouble_ __x, long int __n));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "qfcvt": {
      "source": "extern char *qfcvt (long double __value, int __ndigit,\n\t\t    int *__restrict __decpt, int *__restrict __sign)\n     __THROW __nonnull ((3, 4)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lgammaf_r": {
      "source": "__MATHCALL (lgamma,_r, (_Mdouble_, int *__signgamp));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "atanhf": {
      "source": "__MATHCALL (atanh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setuid": {
      "source": "extern int setuid (__uid_t __uid) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_GetCopyright": {
      "source": "PyAPI_FUNC(const char *) Py_GetCopyright(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_Format": {
      "source": "PyAPI_FUNC(PyObject *) PyErr_Format(PyObject *, const char *, ...)\n                        Py_GCC_ATTRIBUTE((format(printf, 2, 3)));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyCodec_Lookup": {
      "source": "PyAPI_FUNC(PyObject *) _PyCodec_Lookup(\n       const char *encoding\n       );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_GetMax": {
      "source": "PyAPI_FUNC(Py_UNICODE) PyUnicode_GetMax(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "qfcvt_r": {
      "source": "extern int qfcvt_r (long double __value, int __ndigit,\n\t\t    int *__restrict __decpt, int *__restrict __sign,\n\t\t    char *__restrict __buf, size_t __len)\n     __THROW __nonnull ((3, 4, 5));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeTranslateError_Create": {
      "source": "PyAPI_FUNC(PyObject *) PyUnicodeTranslateError_Create(\n    const Py_UNICODE *, Py_ssize_t, Py_ssize_t, Py_ssize_t, const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_GetCompiler": {
      "source": "PyAPI_FUNC(const char *) Py_GetCompiler(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_InPlaceAnd": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_InPlaceAnd(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__gammal": {
      "source": "__MATHCALL (gamma,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_Split": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_Split(\n    PyObject *s,                /* String to split */\n    PyObject *sep,              /* String separator */\n    Py_ssize_t maxsplit         /* Maxsplit count */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigandset": {
      "source": "extern int sigandset (sigset_t *__set, const sigset_t *__left,\n\t\t      const sigset_t *__right) __THROW __nonnull ((1, 2, 3));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isnanf": {
      "source": "__MATHDECL_1 (int,isnan,, (_Mdouble_ __value)) __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "calloc": {
      "source": "extern void *calloc (size_t __nmemb, size_t __size)\n     __THROW __attribute_malloc__ ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isupper_l": {
      "source": "__exctype_l (isupper_l);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "unlinkat": {
      "source": "extern int unlinkat (int __fd, const char *__name, int __flag)\n     __THROW __nonnull ((2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isnanl": {
      "source": "__MATHDECL_1 (int,isnan,, (_Mdouble_ __value)) __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigblock": {
      "source": "extern int sigblock (int __mask) __THROW __attribute_deprecated__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__lrint": {
      "source": "__MATHDECL (long int,lrint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_GetProgramName": {
      "source": "PyAPI_FUNC(char *) Py_GetProgramName(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fopen64": {
      "source": "extern FILE *fopen64 (const char *__restrict __filename,\n\t\t      const char *__restrict __modes) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySys_SetPath": {
      "source": "PyAPI_FUNC(void) PySys_SetPath(char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_Fini": {
      "source": "PyAPI_FUNC(void) PyDict_Fini(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyOS_string_to_double": {
      "source": "PyAPI_FUNC(double) PyOS_string_to_double(const char *str,\n                                         char **endptr,\n                                         PyObject *overflow_exception);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "nan": {
      "source": "__MATHCALLX (nan,, (const char *__tagb), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcscasecmp_l": {
      "source": "extern int wcscasecmp_l (const wchar_t *__s1, const wchar_t *__s2,\n\t\t\t __locale_t __loc) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcsxfrm_l": {
      "source": "extern size_t wcsxfrm_l (wchar_t *__s1, const wchar_t *__s2,\n\t\t\t size_t __n, __locale_t __loc) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "kill": {
      "source": "extern int kill (__pid_t __pid, int __sig) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_Finalize": {
      "source": "PyAPI_FUNC(void) Py_Finalize(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lrintl": {
      "source": "__MATHDECL (long int,lrint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_Init": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_Init(PyObject *, PyTypeObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__xmknod": {
      "source": "extern int __xmknod (int __ver, const char *__path, __mode_t __mode,\n\t\t     __dev_t *__dev) __THROW __nonnull ((2, 4));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyByteArray_FromStringAndSize": {
      "source": "PyAPI_FUNC(PyObject *) PyByteArray_FromStringAndSize(const char *, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_GetBuiltins": {
      "source": "PyAPI_FUNC(PyObject *) PyEval_GetBuiltins(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInt_FromString": {
      "source": "PyAPI_FUNC(PyObject *) PyInt_FromString(char*, char**, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__nextafter": {
      "source": "__MATHCALLX (nextafter,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lrintf": {
      "source": "__MATHDECL (long int,lrint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ptsname": {
      "source": "extern char *ptsname (int __fd) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ynl": {
      "source": "__MATHCALL (yn,, (int, _Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "scalbf": {
      "source": "__MATHCALL (scalb,, (_Mdouble_ __x, _Mdouble_ __n));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcspbrk": {
      "source": "extern wchar_t *wcspbrk (const wchar_t *__wcs, const wchar_t *__accept)\n     __THROW __attribute_pure__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "read": {
      "source": "extern ssize_t read (int __fd, void *__buf, size_t __nbytes) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "scalbl": {
      "source": "__MATHCALL (scalb,, (_Mdouble_ __x, _Mdouble_ __n));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_IO_sgetn": {
      "source": "extern _IO_size_t _IO_sgetn (_IO_FILE *, void *, _IO_size_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "scalbn": {
      "source": "__MATHCALL (scalbn,, (_Mdouble_ __x, int __n));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyExc_Init": {
      "source": "PyAPI_FUNC(void) _PyExc_Init(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "srandom_r": {
      "source": "extern int srandom_r (unsigned int __seed, struct random_data *__buf)\n     __THROW __nonnull ((2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyGILState_Ensure": {
      "source": "PyAPI_FUNC(PyGILState_STATE) PyGILState_Ensure(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "memmove": {
      "source": "extern void *memmove (void *__dest, const void *__src, size_t __n)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "nice": {
      "source": "extern int nice (int __inc) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strcmp": {
      "source": "extern int strcmp (const char *__s1, const char *__s2)\n     __THROW __attribute_pure__ __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tanhl": {
      "source": "__MATHCALL (tanh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lldiv": {
      "source": "extern lldiv_t lldiv (long long int __numer,\n\t\t\t\t    long long int __denom)\n     __THROW __attribute__ ((__const__)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fgetc": {
      "source": "extern int fgetc (FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tanhf": {
      "source": "__MATHCALL (tanh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getresuid": {
      "source": "extern int getresuid (__uid_t *__ruid, __uid_t *__euid, __uid_t *__suid)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyImport_AppendInittab": {
      "source": "PyAPI_FUNC(int) PyImport_AppendInittab(const char *name, void (*initfunc)(void));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fgets": {
      "source": "extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)\n", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "exp2f": {
      "source": "__MATHCALL (exp2,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "exp2l": {
      "source": "__MATHCALL (exp2,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ftell": {
      "source": "extern long int ftell (FILE *__stream) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "exit": {
      "source": "extern void exit (int __status) __THROW __attribute__ ((__noreturn__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_HashDouble": {
      "source": "PyAPI_FUNC(long) _Py_HashDouble(double);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mbstowcs": {
      "source": "extern size_t mbstowcs (wchar_t *__restrict  __pwcs,\n\t\t\tconst char *__restrict __s, size_t __n) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFloat_AsDouble": {
      "source": "PyAPI_FUNC(double) PyFloat_AsDouble(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "log1pl": {
      "source": "__MATHCALL (log1p,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFile_SetBufSize": {
      "source": "PyAPI_FUNC(void) PyFile_SetBufSize(PyObject *, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_parse_inf_or_nan": {
      "source": "PyAPI_FUNC(double) _Py_parse_inf_or_nan(const char *p, char **endptr);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getitimer": {
      "source": "extern int getitimer (__itimer_which_t __which,\n\t\t      struct itimerval *__value) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tgammal": {
      "source": "__MATHCALL (tgamma,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "log1pf": {
      "source": "__MATHCALL (log1p,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tgammaf": {
      "source": "__MATHCALL (tgamma,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCapsule_SetPointer": {
      "source": "PyAPI_FUNC(int) PyCapsule_SetPointer(PyObject *capsule, void *pointer);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "inithello": {
      "source": "PyMODINIT_FUNC inithello(void)\n{\n  (void) Py_InitModule(\"hello\", HelloMethods);\n}\n", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigprocmask": {
      "source": "extern int sigprocmask (int __how, const sigset_t *__restrict __set,\n\t\t\tsigset_t *__restrict __oset) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Or": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Or(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strverscmp": {
      "source": "extern int strverscmp (const char *__s1, const char *__s2)\n     __THROW __attribute_pure__ __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyInt_FormatAdvanced": {
      "source": "PyAPI_FUNC(PyObject *) _PyInt_FormatAdvanced(PyObject *obj,\n\t\t\t\t\t     char *format_spec,\n\t\t\t\t\t     Py_ssize_t format_spec_len);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wmemmove": {
      "source": "extern wchar_t *wmemmove (wchar_t *__s1, const wchar_t *__s2, size_t __n)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "obstack_printf": {
      "source": "extern int obstack_printf (struct obstack *__restrict __obstack,\n\t\t\t   const char *__restrict __format, ...)\n     __THROWNL __attribute__ ((__format__ (__printf__, 2, 3)));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_LengthHint": {
      "source": "PyAPI_FUNC(Py_ssize_t) _PyObject_LengthHint(PyObject *o, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcscasecmp": {
      "source": "extern int wcscasecmp (const wchar_t *__s1, const wchar_t *__s2) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyImport_IsScript": {
      "source": "PyAPI_FUNC(int) _PyImport_IsScript(struct filedescr *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fxstat64": {
      "source": "extern int __fxstat64 (int __ver, int __fildes, struct stat64 *__stat_buf)\n     __THROW __nonnull ((3));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCapsule_GetDestructor": {
      "source": "PyAPI_FUNC(PyCapsule_Destructor) PyCapsule_GetDestructor(PyObject *capsule);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "putenv": {
      "source": "extern int putenv (char *__string) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fdopen": {
      "source": "extern FILE *fdopen (int __fd, const char *__modes) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_Initialize": {
      "source": "PyAPI_FUNC(void) Py_Initialize(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySet_Clear": {
      "source": "PyAPI_FUNC(int) PySet_Clear(PyObject *set);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "llround": {
      "source": "__MATHDECL (long long int,llround,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFile_FromString": {
      "source": "PyAPI_FUNC(PyObject *) PyFile_FromString(char *, char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyImport_ImportModule": {
      "source": "PyAPI_FUNC(PyObject *) PyImport_ImportModule(const char *name);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__erfcf": {
      "source": "__MATHCALL (erfc,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcsncat": {
      "source": "extern wchar_t *wcsncat (wchar_t *__restrict __dest,\n\t\t\t const wchar_t *__restrict __src, size_t __n)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "rmdir": {
      "source": "extern int rmdir (const char *__path) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__erfcl": {
      "source": "__MATHCALL (erfc,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyLong_Frexp": {
      "source": "PyAPI_FUNC(double) _PyLong_Frexp(PyLongObject *a, Py_ssize_t *e);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyByteArray_AsString": {
      "source": "PyAPI_FUNC(char *) PyByteArray_AsString(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyImport_GetImporter": {
      "source": "PyAPI_FUNC(PyObject *) PyImport_GetImporter(PyObject *path);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigpause": {
      "source": "extern int sigpause (int __sig) __asm__ (\"__xpg_sigpause\");", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFunction_GetClosure": {
      "source": "PyAPI_FUNC(PyObject *) PyFunction_GetClosure(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstold_l": {
      "source": "extern long double wcstold_l (const wchar_t *__restrict __nptr,\n\t\t\t      wchar_t **__restrict __endptr,\n\t\t\t      __locale_t __loc) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getdate": {
      "source": "extern struct tm *getdate (const char *__string);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Xor": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Xor(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_Encode": {
      "source": "PyAPI_FUNC(PyObject*) PyString_Encode(\n    const char *s,              /* string char buffer */\n    Py_ssize_t size,            /* number of chars to encode */\n    const char *encoding,       /* encoding */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_WarnEx": {
      "source": "PyAPI_FUNC(int) PyErr_WarnEx(PyObject *, const char *, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__modf": {
      "source": "__MATHCALL (modf,, (_Mdouble_ __x, _Mdouble_ *__iptr)) __nonnull ((2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__significand": {
      "source": "__MATHCALL (significand,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyArg_VaParse": {
      "source": "PyAPI_FUNC(int) PyArg_VaParse(PyObject *, const char *, va_list);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_IO_vfscanf": {
      "source": "extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,\n\t\t\t_IO_va_list, int *__restrict);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCapsule_New": {
      "source": "PyAPI_FUNC(PyObject *) PyCapsule_New(\n    void *pointer,\n    const char *name,\n    PyCapsule_Destructor destructor);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__nexttowardf": {
      "source": "__MATHCALLX (nexttoward,, (_Mdouble_ __x, long double __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__isnanf": {
      "source": "__MATHDECL_1 (int,__isnan,, (_Mdouble_ __value)) __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyOS_AfterFork": {
      "source": "PyAPI_FUNC(void) PyOS_AfterFork(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMemoryView_FromObject": {
      "source": "PyAPI_FUNC(PyObject *) PyMemoryView_FromObject(PyObject *base);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__sigdelset": {
      "source": "extern int __sigdelset (__sigset_t *, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__isnanl": {
      "source": "__MATHDECL_1 (int,__isnan,, (_Mdouble_ __value)) __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_SyntaxLocation": {
      "source": "PyAPI_FUNC(void) PyErr_SyntaxLocation(const char *, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_Str": {
      "source": "PyAPI_FUNC(PyObject *) _PyObject_Str(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_IO_seekpos": {
      "source": "extern _IO_off64_t _IO_seekpos (_IO_FILE *, _IO_off64_t, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__nanl": {
      "source": "__MATHCALLX (nan,, (const char *__tagb), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCell_Set": {
      "source": "PyAPI_FUNC(int) PyCell_Set(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__expl": {
      "source": "__MATHCALL (exp,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fwscanf": {
      "source": "extern int fwscanf (__FILE *__restrict __stream,\n\t\t    const wchar_t *__restrict __format, ...)\n", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__expf": {
      "source": "__MATHCALL (exp,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigaction": {
      "source": "extern int sigaction (int __sig, const struct sigaction *__restrict __act,\n\t\t      struct sigaction *__restrict __oact) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_InPlaceFloorDivide": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_InPlaceFloorDivide(PyObject *o1,\n                                                       PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mkstemp": {
      "source": "extern int __REDIRECT (mkstemp, (char *__template), mkstemp64)\n     __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcsrtombs": {
      "source": "extern size_t wcsrtombs (char *__restrict __dst,\n\t\t\t const wchar_t **__restrict __src, size_t __len,\n\t\t\t mbstate_t *__restrict __ps) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "vfscanf": {
      "source": "extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,\n\t\t    _G_va_list __arg)\n     __attribute__ ((__format__ (__scanf__, 2, 0))) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_GetAttrString": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_GetAttrString(PyObject *, const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "modfl": {
      "source": "__MATHCALL (modf,, (_Mdouble_ __x, _Mdouble_ *__iptr)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_InPlaceRshift": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_InPlaceRshift(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySys_GetFile": {
      "source": "PyAPI_FUNC(FILE *) PySys_GetFile(char *, FILE *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isinf": {
      "source": "__MATHDECL_1 (int,isinf,, (_Mdouble_ __value)) __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcsdup": {
      "source": "extern wchar_t *wcsdup (const wchar_t *__s) __THROW __attribute_malloc__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Power": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Power(PyObject *o1, PyObject *o2,\n                                          PyObject *o3);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInt_FromLong": {
      "source": "PyAPI_FUNC(PyObject *) PyInt_FromLong(long);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getuid": {
      "source": "extern __uid_t getuid (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_FromLongLong": {
      "source": "PyAPI_FUNC(PyObject *) PyLong_FromLongLong(PY_LONG_LONG);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "difftime": {
      "source": "extern double difftime (time_t __time1, time_t __time0)\n     __THROW __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "chown": {
      "source": "extern int chown (const char *__file, __uid_t __owner, __gid_t __group)\n     __THROW __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__exp2": {
      "source": "__MATHCALL (exp2,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcsftime": {
      "source": "extern size_t wcsftime (wchar_t *__restrict __s, size_t __maxsize,\n\t\t\tconst wchar_t *__restrict __format,\n\t\t\tconst struct tm *__restrict __tp) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_SetItem": {
      "source": "PyAPI_FUNC(int) PyDict_SetItem(PyObject *mp, PyObject *key, PyObject *item);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wctomb": {
      "source": "extern int wctomb (char *__s, wchar_t __wchar) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyList_New": {
      "source": "PyAPI_FUNC(PyObject *) PyList_New(Py_ssize_t size);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "acosl": {
      "source": "__MATHCALL (acos,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "acosh": {
      "source": "__MATHCALL (acosh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "acosf": {
      "source": "__MATHCALL (acos,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_Encode": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_Encode(\n    const Py_UNICODE *s,        /* Unicode char buffer */\n    Py_ssize_t size,            /* number of Py_UNICODE chars to encode */\n    const char *encoding,       /* encoding */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getresgid": {
      "source": "extern int getresgid (__gid_t *__rgid, __gid_t *__egid, __gid_t *__sgid)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strptime": {
      "source": "extern char *strptime (const char *__restrict __s,\n\t\t       const char *__restrict __fmt, struct tm *__tp)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "qecvt": {
      "source": "extern char *qecvt (long double __value, int __ndigit,\n\t\t    int *__restrict __decpt, int *__restrict __sign)\n     __THROW __nonnull ((3, 4)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mktime": {
      "source": "extern time_t mktime (struct tm *__tp) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Divmod": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Divmod(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fxstat": {
      "source": "extern int __REDIRECT_NTH (__fxstat, (int __ver, int __fildes,\n\t\t\t\t      struct stat *__stat_buf), __fxstat64)\n     __nonnull ((3));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySys_ResetWarnOptions": {
      "source": "PyAPI_FUNC(void) PySys_ResetWarnOptions(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fclose": {
      "source": "extern int fclose (FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__ceil": {
      "source": "__MATHCALLX (ceil,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyRun_AnyFileExFlags": {
      "source": "PyAPI_FUNC(int) PyRun_AnyFileExFlags(FILE *, const char *, int, PyCompilerFlags *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "vswprintf": {
      "source": "extern int vswprintf (wchar_t *__restrict __s, size_t __n,\n\t\t      const wchar_t *__restrict __format,\n\t\t      __gnuc_va_list __arg)\n     __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__sqrt": {
      "source": "__MATHCALL (sqrt,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_Update": {
      "source": "PyAPI_FUNC(int) PyDict_Update(PyObject *mp, PyObject *other);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tcsetpgrp": {
      "source": "extern int tcsetpgrp (int __fd, __pid_t __pgrp_id) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "scalblnf": {
      "source": "__MATHCALL (scalbln,, (_Mdouble_ __x, long int __n));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fputc_unlocked": {
      "source": "extern int fputc_unlocked (int __c, FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "expm1f": {
      "source": "__MATHCALL (expm1,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCode_Optimize": {
      "source": "PyAPI_FUNC(PyObject*) PyCode_Optimize(PyObject *code, PyObject* consts,\n                                      PyObject *names, PyObject *lineno_obj);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sync": {
      "source": "extern void sync (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mknod": {
      "source": "extern int mknod (const char *__path, __mode_t __mode, __dev_t __dev)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFunction_GetGlobals": {
      "source": "PyAPI_FUNC(PyObject *) PyFunction_GetGlobals(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_ReleaseInternedStrings": {
      "source": "PyAPI_FUNC(void) _Py_ReleaseInternedStrings(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fabs": {
      "source": "__MATHCALLX (fabs,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "log2": {
      "source": "__MATHCALL (log2,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_AsLongAndOverflow": {
      "source": "PyAPI_FUNC(long) PyLong_AsLongAndOverflow(PyObject *, int *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "y1l": {
      "source": "__MATHCALL (y1,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "nanl": {
      "source": "__MATHCALLX (nan,, (const char *__tagb), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_c_neg": {
      "source": "PyAPI_FUNC(Py_complex) c_neg(Py_complex);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "clock": {
      "source": "extern clock_t clock (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "y1f": {
      "source": "__MATHCALL (y1,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "nanf": {
      "source": "__MATHCALLX (nan,, (const char *__tagb), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__expm1l": {
      "source": "__MATHCALL (expm1,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "llroundl": {
      "source": "__MATHDECL (long long int,llround,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCodec_RegisterError": {
      "source": "PyAPI_FUNC(int) PyCodec_RegisterError(const char *name, PyObject *error);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__expm1f": {
      "source": "__MATHCALL (expm1,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcschrnul": {
      "source": "extern wchar_t *wcschrnul (const wchar_t *__s, wchar_t __wc)\n     __THROW __attribute_pure__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "llroundf": {
      "source": "__MATHDECL (long long int,llround,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setpgid": {
      "source": "extern int setpgid (__pid_t __pid, __pid_t __pgid) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_RichCompareBool": {
      "source": "PyAPI_FUNC(int) PyObject_RichCompareBool(PyObject *, PyObject *, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_Partition": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_Partition(\n    PyObject *s,                /* String to partition */\n    PyObject *sep               /* String separator */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDescr_NewMethod": {
      "source": "PyAPI_FUNC(PyObject *) PyDescr_NewMethod(PyTypeObject *, PyMethodDef *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__sinl": {
      "source": "__MATHCALL (sin,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fchdir": {
      "source": "extern int fchdir (int __fd) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "stpncpy": {
      "source": "extern char *stpncpy (char *__restrict __dest,\n\t\t      const char *__restrict __src, size_t __n)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "trunc": {
      "source": "__MATHCALLX (trunc,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_Replace": {
      "source": "PyAPI_FUNC(PyObject *) PyUnicode_Replace(\n    PyObject *str,              /* String */\n    PyObject *substr,           /* Substring to find */\n    PyObject *replstr,          /* Substring to replace */\n    Py_ssize_t maxcount         /* Max. number of replacements to apply;\n                                   -1 = all */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "popen": {
      "source": "extern FILE *popen (const char *__command, const char *__modes) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_IO_ferror": {
      "source": "extern int _IO_ferror (_IO_FILE *__fp) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isspace_l": {
      "source": "__exctype_l (isspace_l);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInterpreterState_Next": {
      "source": "PyAPI_FUNC(PyInterpreterState *) PyInterpreterState_Next(PyInterpreterState *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_DisplaySourceLine": {
      "source": "PyAPI_FUNC(int) _Py_DisplaySourceLine(PyObject *, const char *, int, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyEval_CallTracing": {
      "source": "PyAPI_FUNC(PyObject *) _PyEval_CallTracing(PyObject *func, PyObject *args);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCapsule_GetContext": {
      "source": "PyAPI_FUNC(void *) PyCapsule_GetContext(PyObject *capsule);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_InPlaceSubtract": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_InPlaceSubtract(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "unlockpt": {
      "source": "extern int unlockpt (int __fd) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "select": {
      "source": "extern int select (int __nfds, fd_set *__restrict __readfds,\n\t\t   fd_set *__restrict __writefds,\n\t\t   fd_set *__restrict __exceptfds,\n\t\t   struct timeval *__restrict __timeout);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "canonicalize_file_name": {
      "source": "extern char *canonicalize_file_name (const char *__name)\n     __THROW __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_GetItem": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_GetItem(PyObject *o, PyObject *key);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_AsUnicodeEscapeString": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_AsUnicodeEscapeString(\n    PyObject *unicode           /* Unicode object */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_And": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_And(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_GetIter": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_GetIter(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__frexp": {
      "source": "__MATHCALL (frexp,, (_Mdouble_ __x, int *__exponent));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fdatasync": {
      "source": "extern int fdatasync (int __fildes);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fseeko64": {
      "source": "extern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_RichCompare": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_RichCompare(PyObject *, PyObject *, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "exp10": {
      "source": "__MATHCALL (exp10,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "log10f": {
      "source": "__MATHCALL (log10,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMapping_GetItemString": {
      "source": "PyAPI_FUNC(PyObject *) PyMapping_GetItemString(PyObject *o, char *key);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInterpreterState_Clear": {
      "source": "PyAPI_FUNC(void) PyInterpreterState_Clear(PyInterpreterState *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFloat_Fini": {
      "source": "PyAPI_FUNC(void) PyFloat_Fini(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcsncpy": {
      "source": "extern wchar_t *wcsncpy (wchar_t *__restrict __dest,\n\t\t\t const wchar_t *__restrict __src, size_t __n)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcscat": {
      "source": "extern wchar_t *wcscat (wchar_t *__restrict __dest,\n\t\t\tconst wchar_t *__restrict __src) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__lgamma": {
      "source": "__MATHCALL (lgamma,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeTranslateError_GetObject": {
      "source": "PyAPI_FUNC(PyObject *) PyUnicodeTranslateError_GetObject(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isspace": {
      "source": "__exctype (isspace);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ftruncate": {
      "source": "extern int __REDIRECT_NTH (ftruncate, (int __fd, __off64_t __length),\n\t\t\t   ftruncate64) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_NewInterpreter": {
      "source": "PyAPI_FUNC(PyThreadState *) Py_NewInterpreter(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getwc": {
      "source": "extern wint_t getwc (__FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_Compare": {
      "source": "PyAPI_FUNC(int) PyObject_Compare(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_FromUnsignedLong": {
      "source": "PyAPI_FUNC(PyObject *) PyLong_FromUnsignedLong(unsigned long);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strlen": {
      "source": "extern size_t strlen (const char *__s)\n     __THROW __attribute_pure__ __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyTuple_MaybeUntrack": {
      "source": "PyAPI_FUNC(void) _PyTuple_MaybeUntrack(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "atanf": {
      "source": "__MATHCALL (atan,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "atanh": {
      "source": "__MATHCALL (atanh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "atanl": {
      "source": "__MATHCALL (atan,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_Concat": {
      "source": "PyAPI_FUNC(PyObject *) PySequence_Concat(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyTuple_GetSlice": {
      "source": "PyAPI_FUNC(PyObject *) PyTuple_GetSlice(PyObject *, Py_ssize_t, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "putc_unlocked": {
      "source": "extern int putc_unlocked (int __c, FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PySlice_FromIndices": {
      "source": "PyAPI_FUNC(PyObject *) _PySlice_FromIndices(Py_ssize_t start, Py_ssize_t stop);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__remainderf": {
      "source": "__MATHCALL (remainder,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mrand48_r": {
      "source": "extern int mrand48_r (struct drand48_data *__restrict __buffer,\n\t\t      long int *__restrict __result)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__remainderl": {
      "source": "__MATHCALL (remainder,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "srand48_r": {
      "source": "extern int srand48_r (long int __seedval, struct drand48_data *__buffer)\n     __THROW __nonnull ((2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyWarnings_Init": {
      "source": "PyAPI_FUNC(void) _PyWarnings_Init(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "unlink": {
      "source": "extern int unlink (const char *__name) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tcgetpgrp": {
      "source": "extern __pid_t tcgetpgrp (int __fd) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyThreadState_Get": {
      "source": "PyAPI_FUNC(PyThreadState *) PyThreadState_Get(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__toupper_l": {
      "source": "extern int __toupper_l (int __c, __locale_t __l) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "atan2": {
      "source": "__MATHCALL (atan2,, (_Mdouble_ __y, _Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCObject_FromVoidPtr": {
      "source": "PyAPI_FUNC(PyObject *) PyCObject_FromVoidPtr(\n\tvoid *cobj, void (*destruct)(void*));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_FromFormatV": {
      "source": "PyAPI_FUNC(PyObject *) PyString_FromFormatV(const char*, va_list)\n\t\t\t\tPy_GCC_ATTRIBUTE((format(printf, 1, 0)));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "coshf": {
      "source": "__MATHCALL (cosh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "coshl": {
      "source": "__MATHCALL (cosh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "basename": {
      "source": "extern char *basename (const char *__filename) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__sigsetjmp": {
      "source": "extern int __sigsetjmp (struct __jmp_buf_tag __env[1], int __savemask) __THROWNL;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ffs": {
      "source": "extern int ffs (int __i) __THROW __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strcasecmp_l": {
      "source": "extern int strcasecmp_l (const char *__s1, const char *__s2,\n\t\t\t __locale_t __loc)\n     __THROW __attribute_pure__ __nonnull ((1, 2, 3));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ferror_unlocked": {
      "source": "extern int ferror_unlocked (FILE *__stream) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "y1": {
      "source": "__MATHCALL (y1,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "y0": {
      "source": "__MATHCALL (y0,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__lround": {
      "source": "__MATHDECL (long int,lround,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCFunction_ClearFreeList": {
      "source": "PyAPI_FUNC(int) PyCFunction_ClearFreeList(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "floorf": {
      "source": "__MATHCALLX (floor,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_IO_ftrylockfile": {
      "source": "extern int _IO_ftrylockfile (_IO_FILE *) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getpid": {
      "source": "extern __pid_t getpid (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mkostemps64": {
      "source": "extern int mkostemps64 (char *__template, int __suffixlen, int __flags)\n     __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "feof_unlocked": {
      "source": "extern int feof_unlocked (FILE *__stream) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyDict_Contains": {
      "source": "PyAPI_FUNC(int) _PyDict_Contains(PyObject *mp, PyObject *key, long hash);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "remquo": {
      "source": "__MATHCALL (remquo,, (_Mdouble_ __x, _Mdouble_ __y, int *__quo));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__roundf": {
      "source": "__MATHCALLX (round,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeTranslateError_SetStart": {
      "source": "PyAPI_FUNC(int) PyUnicodeTranslateError_SetStart(PyObject *, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "yn": {
      "source": "__MATHCALL (yn,, (int, _Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyImport_ReloadModule": {
      "source": "PyAPI_FUNC(PyObject *) PyImport_ReloadModule(PyObject *m);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__sinhl": {
      "source": "__MATHCALL (sinh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strcoll": {
      "source": "extern int strcoll (const char *__s1, const char *__s2)\n     __THROW __attribute_pure__ __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "execl": {
      "source": "extern int execl (const char *__path, const char *__arg, ...)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__atan2f": {
      "source": "__MATHCALL (atan2,, (_Mdouble_ __y, _Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "say_hello": {
      "source": "static PyObject*\nsay_hello(PyObject* self, PyObject* args)\n{\n    const char* name;\n\n    if (!PyArg_ParseTuple(args, \"s\", &name))\n        return NULL;\n\n    printf(\"Hello %s!\\n\", name);\n\n    Py_RETURN_NONE;\n}\n", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ynf": {
      "source": "__MATHCALL (yn,, (int, _Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_SetFromErrnoWithFilename": {
      "source": "PyAPI_FUNC(PyObject *) PyErr_SetFromErrnoWithFilename(\n    PyObject *, const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fmod": {
      "source": "__MATHCALL (fmod,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "execv": {
      "source": "extern int execv (const char *__path, char *const __argv[])\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getw": {
      "source": "extern int getw (FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "linkat": {
      "source": "extern int linkat (int __fromfd, const char *__from, int __tofd,\n\t\t   const char *__to, int __flags)\n     __THROW __nonnull ((2, 4)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_IncRef": {
      "source": "PyAPI_FUNC(void) Py_IncRef(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__gammaf": {
      "source": "__MATHCALL (gamma,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isalnum_l": {
      "source": "__exctype_l (isalnum_l);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_InPlaceTrueDivide": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_InPlaceTrueDivide(PyObject *o1,\n                                                      PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeEncodeError_SetStart": {
      "source": "PyAPI_FUNC(int) PyUnicodeEncodeError_SetStart(PyObject *, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setsid": {
      "source": "extern __pid_t setsid (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "vfwprintf": {
      "source": "extern int vfwprintf (__FILE *__restrict __s,\n\t\t      const wchar_t *__restrict __format,\n\t\t      __gnuc_va_list __arg)\n", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "vscanf": {
      "source": "extern int vscanf (const char *__restrict __format, _G_va_list __arg)\n     __attribute__ ((__format__ (__scanf__, 1, 0))) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strrchr": {
      "source": "extern char *strrchr (const char *__s, int __c)\n     __THROW __attribute_pure__ __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_BadArgument": {
      "source": "PyAPI_FUNC(int) PyErr_BadArgument(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtoull_l": {
      "source": "extern unsigned long long int strtoull_l (const char *__restrict __nptr,\n\t\t\t\t\t  char **__restrict __endptr,\n\t\t\t\t\t  int __base, __locale_t __loc)\n     __THROW __nonnull ((1, 4));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strchrnul": {
      "source": "extern char *strchrnul (const char *__s, int __c)\n     __THROW __attribute_pure__ __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_Values": {
      "source": "PyAPI_FUNC(PyObject *) PyDict_Values(PyObject *mp);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "labs": {
      "source": "extern long int labs (long int __x) __THROW __attribute__ ((__const__)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySeqIter_New": {
      "source": "PyAPI_FUNC(PyObject *) PySeqIter_New(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_SetInterrupt": {
      "source": "PyAPI_FUNC(void) PyErr_SetInterrupt(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "qsort_r": {
      "source": "extern void qsort_r (void *__base, size_t __nmemb, size_t __size,\n\t\t     __compar_d_fn_t __compar, void *__arg)\n  __nonnull ((1, 4));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mknodat": {
      "source": "extern int mknodat (int __fd, const char *__path, __mode_t __mode,\n\t\t    __dev_t __dev) __THROW __nonnull ((2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "putchar": {
      "source": "extern int putchar (int __c);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcsspn": {
      "source": "extern size_t wcsspn (const wchar_t *__wcs, const wchar_t *__accept)\n     __THROW __attribute_pure__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyRun_StringFlags": {
      "source": "PyAPI_FUNC(PyObject *) PyRun_StringFlags(const char *, int, PyObject *,\n                                         PyObject *, PyCompilerFlags *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_AcquireLock": {
      "source": "PyAPI_FUNC(void) PyEval_AcquireLock(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__sinhf": {
      "source": "__MATHCALL (sinh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__xstat64": {
      "source": "extern int __xstat64 (int __ver, const char *__filename,\n\t\t      struct stat64 *__stat_buf) __THROW __nonnull ((2, 3));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_IO_seekoff": {
      "source": "extern _IO_off64_t _IO_seekoff (_IO_FILE *, _IO_off64_t, int, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "usleep": {
      "source": "extern int usleep (__useconds_t __useconds);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcsnlen": {
      "source": "extern size_t wcsnlen (const wchar_t *__s, size_t __maxlen)\n     __THROW __attribute_pure__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_List": {
      "source": "PyAPI_FUNC(PyObject *) PySequence_List(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__asprintf": {
      "source": "extern int __asprintf (char **__restrict __ptr,\n\t\t       const char *__restrict __fmt, ...)\n     __THROWNL __attribute__ ((__format__ (__printf__, 2, 3))) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_Print": {
      "source": "PyAPI_FUNC(int) PyObject_Print(PyObject *, FILE *, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_get_387controlword": {
      "source": "PyAPI_FUNC(unsigned short) _Py_get_387controlword(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "nearbyintl": {
      "source": "__MATHCALL (nearbyint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_SetPythonHome": {
      "source": "PyAPI_FUNC(void) Py_SetPythonHome(char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__libc_current_sigrtmin": {
      "source": "extern int __libc_current_sigrtmin (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "nearbyintf": {
      "source": "__MATHCALL (nearbyint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFile_SoftSpace": {
      "source": "PyAPI_FUNC(int) PyFile_SoftSpace(PyObject *, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyType_IsSubtype": {
      "source": "PyAPI_FUNC(int) PyType_IsSubtype(PyTypeObject *, PyTypeObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyGC_Collect": {
      "source": "PyAPI_FUNC(Py_ssize_t) PyGC_Collect(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strftime_l": {
      "source": "extern size_t strftime_l (char *__restrict __s, size_t __maxsize,\n\t\t\t  const char *__restrict __format,\n\t\t\t  const struct tm *__restrict __tp,\n\t\t\t  __locale_t __loc) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "llrint": {
      "source": "__MATHDECL (long long int,llrint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyOS_FiniInterrupts": {
      "source": "PyAPI_FUNC(void) PyOS_FiniInterrupts(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyFloat_Digits": {
      "source": "PyAPI_FUNC(int) _PyFloat_Digits(char *buf, double v, int *signum);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_SetItemString": {
      "source": "PyAPI_FUNC(int) PyDict_SetItemString(PyObject *dp, const char *key, PyObject *item);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyBuffer_FromMemory": {
      "source": "PyAPI_FUNC(PyObject *) PyBuffer_FromMemory(void *ptr, Py_ssize_t size);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyComplex_RealAsDouble": {
      "source": "PyAPI_FUNC(double) PyComplex_RealAsDouble(PyObject *op);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_Repr": {
      "source": "PyAPI_FUNC(PyObject *) PyString_Repr(PyObject *, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_GetGlobals": {
      "source": "PyAPI_FUNC(PyObject *) PyEval_GetGlobals(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isalpha_l": {
      "source": "__exctype_l (isalpha_l);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcscpy": {
      "source": "extern wchar_t *wcscpy (wchar_t *__restrict __dest,\n\t\t\tconst wchar_t *__restrict __src) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__tgammaf": {
      "source": "__MATHCALL (tgamma,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "y0f": {
      "source": "__MATHCALL (y0,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyThreadState_Delete": {
      "source": "PyAPI_FUNC(void) PyThreadState_Delete(PyThreadState *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__tgammal": {
      "source": "__MATHCALL (tgamma,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "y0l": {
      "source": "__MATHCALL (y0,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "gmtime_r": {
      "source": "extern struct tm *gmtime_r (const time_t *__restrict __timer,\n\t\t\t    struct tm *__restrict __tp) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "vsnprintf": {
      "source": "extern int vsnprintf (char *__restrict __s, size_t __maxlen,\n\t\t      const char *__restrict __format, _G_va_list __arg)\n     __THROWNL __attribute__ ((__format__ (__printf__, 3, 0)));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_IO_peekc_locked": {
      "source": "extern int _IO_peekc_locked (_IO_FILE *__fp);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySys_WriteStdout": {
      "source": "PyAPI_FUNC(void) PySys_WriteStdout(const char *format, ...)\n\t\t\tPy_GCC_ATTRIBUTE((format(printf, 1, 2)));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtok_r": {
      "source": "extern char *strtok_r (char *__restrict __s, const char *__restrict __delim,\n\t\t       char **__restrict __save_ptr)\n     __THROW __nonnull ((2, 3));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "pselect": {
      "source": "extern int pselect (int __nfds, fd_set *__restrict __readfds,\n\t\t    fd_set *__restrict __writefds,\n\t\t    fd_set *__restrict __exceptfds,\n\t\t    const struct timespec *__restrict __timeout,\n\t\t    const __sigset_t *__restrict __sigmask);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMethod_New": {
      "source": "PyAPI_FUNC(PyObject *) PyMethod_New(PyObject *, PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "euidaccess": {
      "source": "extern int euidaccess (const char *__name, int __type)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_FindMethod": {
      "source": "PyAPI_FUNC(PyObject *) Py_FindMethod(PyMethodDef[], PyObject *, const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_SetAttrString": {
      "source": "PyAPI_FUNC(int) PyObject_SetAttrString(PyObject *, const char *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyTuple_Fini": {
      "source": "PyAPI_FUNC(void) PyTuple_Fini(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyGen_NeedsFinalizing": {
      "source": "PyAPI_FUNC(int) PyGen_NeedsFinalizing(PyGenObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "geteuid": {
      "source": "extern __uid_t geteuid (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__jn": {
      "source": "__MATHCALL (jn,, (int, _Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_WriteUnraisable": {
      "source": "PyAPI_FUNC(void) PyErr_WriteUnraisable(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCallIter_New": {
      "source": "PyAPI_FUNC(PyObject *) PyCallIter_New(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "significand": {
      "source": "__MATHCALL (significand,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_SetFromErrno": {
      "source": "PyAPI_FUNC(PyObject *) PyErr_SetFromErrno(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setjmp": {
      "source": "extern int setjmp (jmp_buf __env) __THROWNL;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_Decode": {
      "source": "PyAPI_FUNC(PyObject*) PyString_Decode(\n    const char *s,              /* encoded string */\n    Py_ssize_t size,            /* size of buffer */\n    const char *encoding,       /* encoding */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyBuffer_FromReadWriteMemory": {
      "source": "PyAPI_FUNC(PyObject *) PyBuffer_FromReadWriteMemory(void *ptr, Py_ssize_t size);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyList_Insert": {
      "source": "PyAPI_FUNC(int) PyList_Insert(PyObject *, Py_ssize_t, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fwide": {
      "source": "extern int fwide (__FILE *__fp, int __mode) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__lgammaf_r": {
      "source": "__MATHCALL (lgamma,_r, (_Mdouble_, int *__signgamp));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__log10l": {
      "source": "__MATHCALL (log10,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_NewExceptionWithDoc": {
      "source": "PyAPI_FUNC(PyObject *) PyErr_NewExceptionWithDoc(\n    char *name, char *doc, PyObject *base, PyObject *dict);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcswcs": {
      "source": "extern wchar_t *wcswcs (const wchar_t *__haystack, const wchar_t *__needle)\n     __THROW __attribute_pure__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_UniversalNewlineFgets": {
      "source": "char *Py_UniversalNewlineFgets(char *, int, FILE*, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__log10f": {
      "source": "__MATHCALL (log10,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_EncodeCharmap": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_EncodeCharmap(\n    const Py_UNICODE *data,     /* Unicode char buffer */\n    Py_ssize_t length,          /* Number of Py_UNICODE chars to encode */\n    PyObject *mapping,          /* character mapping\n                                   (unicode ordinal -> char ordinal) */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__j0": {
      "source": "__MATHCALL (j0,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__j1": {
      "source": "__MATHCALL (j1,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__scalbl": {
      "source": "__MATHCALL (scalb,, (_Mdouble_ __x, _Mdouble_ __n));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "exp": {
      "source": "__MATHCALL (exp,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__scalbn": {
      "source": "__MATHCALL (scalbn,, (_Mdouble_ __x, int __n));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyClassMethod_New": {
      "source": "PyAPI_FUNC(PyObject *) PyClassMethod_New(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__scalbf": {
      "source": "__MATHCALL (scalb,, (_Mdouble_ __x, _Mdouble_ __n));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strncasecmp": {
      "source": "extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)\n     __THROW __attribute_pure__ __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Absolute": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Absolute(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_InPlaceAdd": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_InPlaceAdd(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Exit": {
      "source": "extern void _Exit (int __status) __THROW __attribute__ ((__noreturn__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fputc": {
      "source": "extern int fputc (int __c, FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMapping_Length": {
      "source": "PyAPI_FUNC(Py_ssize_t) PyMapping_Length(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fputs": {
      "source": "extern int fputs (const char *__restrict __s, FILE *__restrict __stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fchmod": {
      "source": "extern int fchmod (int __fd, __mode_t __mode) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtof_l": {
      "source": "extern float strtof_l (const char *__restrict __nptr,\n\t\t       char **__restrict __endptr, __locale_t __loc)\n     __THROW __nonnull ((1, 3));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wmemcmp": {
      "source": "extern int wmemcmp (const wchar_t *__s1, const wchar_t *__s2, size_t __n)\n     __THROW __attribute_pure__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Index": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Index(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fputws_unlocked": {
      "source": "extern int fputws_unlocked (const wchar_t *__restrict __ws,\n\t\t\t    __FILE *__restrict __stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tgamma": {
      "source": "__MATHCALL (tgamma,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcsncmp": {
      "source": "extern int wcsncmp (const wchar_t *__s1, const wchar_t *__s2, size_t __n)\n     __THROW __attribute_pure__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strsep": {
      "source": "extern char *strsep (char **__restrict __stringp,\n\t\t     const char *__restrict __delim)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtod_l": {
      "source": "extern double strtod_l (const char *__restrict __nptr,\n\t\t\tchar **__restrict __endptr, __locale_t __loc)\n     __THROW __nonnull ((1, 3));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_Size": {
      "source": "PyAPI_FUNC(Py_ssize_t) PyDict_Size(PyObject *mp);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInt_FromUnicode": {
      "source": "PyAPI_FUNC(PyObject *) PyInt_FromUnicode(Py_UNICODE*, Py_ssize_t, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "readlinkat": {
      "source": "extern ssize_t readlinkat (int __fd, const char *__restrict __path,\n\t\t\t   char *__restrict __buf, size_t __len)\n     __THROW __nonnull ((2, 3)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySet_Add": {
      "source": "PyAPI_FUNC(int) PySet_Add(PyObject *set, PyObject *key);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "remove": {
      "source": "extern int remove (const char *__filename) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "vhangup": {
      "source": "extern int vhangup (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeEncodeError_GetEncoding": {
      "source": "PyAPI_FUNC(PyObject *) PyUnicodeEncodeError_GetEncoding(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mkdirat": {
      "source": "extern int mkdirat (int __fd, const char *__path, __mode_t __mode)\n     __THROW __nonnull ((2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyTrash_deposit_object": {
      "source": "PyAPI_FUNC(void) _PyTrash_deposit_object(PyObject*);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyWeakref_NewRef": {
      "source": "PyAPI_FUNC(PyObject *) PyWeakref_NewRef(PyObject *ob,\n                                              PyObject *callback);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyArena_Malloc": {
      "source": "PyAPI_FUNC(void *) PyArena_Malloc(PyArena *, size_t size);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_DecodeUTF16Stateful": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_DecodeUTF16Stateful(\n    const char *string,         /* UTF-16 encoded string */\n    Py_ssize_t length,          /* size of string */\n    const char *errors,         /* error handling */\n    int *byteorder,             /* pointer to byteorder to use\n                                   0=native;-1=LE,1=BE; updated on\n                                   exit */\n    Py_ssize_t *consumed                /* bytes consumed */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "atexit": {
      "source": "extern int atexit (void (*__func) (void)) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fchownat": {
      "source": "extern int fchownat (int __fd, const char *__file, __uid_t __owner,\n\t\t     __gid_t __group, int __flag)\n     __THROW __nonnull ((2)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "close": {
      "source": "extern int close (int __fd);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_dg_strtod": {
      "source": "PyAPI_FUNC(double) _Py_dg_strtod(const char *str, char **ptr);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "jrand48": {
      "source": "extern long int jrand48 (unsigned short int __xsubi[3])\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strchr": {
      "source": "extern char *strchr (const char *__s, int __c)\n     __THROW __attribute_pure__ __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_FromUnicode": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_FromUnicode(\n    const Py_UNICODE *u,        /* Unicode buffer */\n    Py_ssize_t size             /* size of buffer */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__tanhl": {
      "source": "__MATHCALL (tanh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigaltstack": {
      "source": "extern int sigaltstack (const struct sigaltstack *__restrict __ss,\n\t\t\tstruct sigaltstack *__restrict __oss) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeDecodeError_SetEnd": {
      "source": "PyAPI_FUNC(int) PyUnicodeDecodeError_SetEnd(PyObject *, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__tanhf": {
      "source": "__MATHCALL (tanh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "clock_getres": {
      "source": "extern int clock_getres (clockid_t __clock_id, struct timespec *__res) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__nextafterl": {
      "source": "__MATHCALLX (nextafter,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__lxstat64": {
      "source": "extern int __lxstat64 (int __ver, const char *__filename,\n\t\t       struct stat64 *__stat_buf) __THROW __nonnull ((2, 3));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lstat": {
      "source": "extern int __REDIRECT_NTH (lstat,\n\t\t\t   (const char *__restrict __file,\n\t\t\t    struct stat *__restrict __buf), lstat64)\n     __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__nextafterf": {
      "source": "__MATHCALLX (nextafter,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "expl": {
      "source": "__MATHCALL (exp,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_DecodeUTF8Stateful": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_DecodeUTF8Stateful(\n    const char *string,         /* UTF-8 encoded string */\n    Py_ssize_t length,          /* size of string */\n    const char *errors,         /* error handling */\n    Py_ssize_t *consumed                /* bytes consumed */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ungetwc": {
      "source": "extern wint_t ungetwc (wint_t __wc, __FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicode_DecodeUnicodeInternal": {
      "source": "PyObject *_PyUnicode_DecodeUnicodeInternal(\n    const char *string,\n    Py_ssize_t length,\n    const char *errors\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "futimesat": {
      "source": "extern int futimesat (int __fd, const char *__file,\n\t\t      const struct timeval __tvp[2]) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lstat64": {
      "source": "extern int lstat64 (const char *__restrict __file,\n\t\t    struct stat64 *__restrict __buf)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_AsStringAndSize": {
      "source": "PyAPI_FUNC(int) PyString_AsStringAndSize(\n    register PyObject *obj,\t/* string or Unicode object */\n    register char **s,\t\t/* pointer to buffer variable */\n    register Py_ssize_t *len\t/* pointer to length variable or NULL\n\t\t\t\t   (only possible for 0-terminated\n\t\t\t\t   strings) */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sysv_signal": {
      "source": "extern __sighandler_t sysv_signal (int __sig, __sighandler_t __handler)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "open_memstream": {
      "source": "extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigqueue": {
      "source": "extern int sigqueue (__pid_t __pid, int __sig, const union sigval __val)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_IO_flockfile": {
      "source": "extern void _IO_flockfile (_IO_FILE *) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "timer_delete": {
      "source": "extern int timer_delete (timer_t __timerid) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "acoshf": {
      "source": "__MATHCALL (acosh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fflush_unlocked": {
      "source": "extern int fflush_unlocked (FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fsetpos64": {
      "source": "extern int fsetpos64 (FILE *__stream, const fpos64_t *__pos);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_AsFileDescriptor": {
      "source": "PyAPI_FUNC(int) PyObject_AsFileDescriptor(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "alloca": {
      "source": "extern void *alloca (size_t __size) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "symlinkat": {
      "source": "extern int symlinkat (const char *__from, int __tofd,\n\t\t      const char *__to) __THROW __nonnull ((1, 3)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_AcquireThread": {
      "source": "PyAPI_FUNC(void) PyEval_AcquireThread(PyThreadState *tstate);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeEncodeError_GetReason": {
      "source": "PyAPI_FUNC(PyObject *) PyUnicodeEncodeError_GetReason(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "pread": {
      "source": "extern ssize_t __REDIRECT (pread, (int __fd, void *__buf, size_t __nbytes,\n\t\t\t\t   __off64_t __offset),\n\t\t\t   pread64) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMethod_Fini": {
      "source": "PyAPI_FUNC(void) PyMethod_Fini(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyThreadState_New": {
      "source": "PyAPI_FUNC(PyThreadState *) PyThreadState_New(PyInterpreterState *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "gethostname": {
      "source": "extern int gethostname (char *__name, size_t __len) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "raise": {
      "source": "extern int raise (int __sig) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFrame_Fini": {
      "source": "PyAPI_FUNC(void) PyFrame_Fini(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCObject_AsVoidPtr": {
      "source": "PyAPI_FUNC(void *) PyCObject_AsVoidPtr(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Rshift": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Rshift(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyTrash_thread_destroy_chain": {
      "source": "PyAPI_FUNC(void) _PyTrash_thread_destroy_chain(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "dup": {
      "source": "extern int dup (int __fd) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtoumax": {
      "source": "extern uintmax_t strtoumax (const char *__restrict __nptr,\n\t\t\t    char ** __restrict __endptr, int __base) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__remainder": {
      "source": "__MATHCALL (remainder,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "asinl": {
      "source": "__MATHCALL (asin,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_Clear": {
      "source": "PyAPI_FUNC(void) PyDict_Clear(PyObject *mp);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyImportHooks_Init": {
      "source": "PyAPI_FUNC(void) _PyImportHooks_Init(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "asinf": {
      "source": "__MATHCALL (asin,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__powf": {
      "source": "__MATHCALL (pow,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Positive": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Positive(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "adjtime": {
      "source": "extern int adjtime (const struct timeval *__delta,\n\t\t    struct timeval *__olddelta) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeTranslateError_GetReason": {
      "source": "PyAPI_FUNC(PyObject *) PyUnicodeTranslateError_GetReason(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__powl": {
      "source": "__MATHCALL (pow,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_ClearFreelist": {
      "source": "PyAPI_FUNC(int) PyUnicode_ClearFreeList(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyLong_FromByteArray": {
      "source": "PyAPI_FUNC(PyObject *) _PyLong_FromByteArray(\n\tconst unsigned char* bytes, size_t n,\n\tint little_endian, int is_signed);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "execve": {
      "source": "extern int execve (const char *__path, char *const __argv[],\n\t\t   char *const __envp[]) __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lroundf": {
      "source": "__MATHDECL (long int,lround,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_AsUnsignedLongLong": {
      "source": "PyAPI_FUNC(unsigned PY_LONG_LONG) PyLong_AsUnsignedLongLong(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyWeakref_GetObject": {
      "source": "PyAPI_FUNC(PyObject *) PyWeakref_GetObject(PyObject *ref);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__ceill": {
      "source": "__MATHCALLX (ceil,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fputwc_unlocked": {
      "source": "extern wint_t fputwc_unlocked (wchar_t __wc, __FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PySys_Init": {
      "source": "PyAPI_FUNC(PyObject *) _PySys_Init(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_GetDefaultEncoding": {
      "source": "PyAPI_FUNC(const char*) PyUnicode_GetDefaultEncoding(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__tanf": {
      "source": "__MATHCALL (tan,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "malloc": {
      "source": "extern void *malloc (size_t __size) __THROW __attribute_malloc__ ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__tanl": {
      "source": "__MATHCALL (tan,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__tanh": {
      "source": "__MATHCALL (tanh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_HashNotImplemented": {
      "source": "PyAPI_FUNC(long) PyObject_HashNotImplemented(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyType_GenericAlloc": {
      "source": "PyAPI_FUNC(PyObject *) PyType_GenericAlloc(PyTypeObject *, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyImport_ImportFrozenModule": {
      "source": "PyAPI_FUNC(int) PyImport_ImportFrozenModule(char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_CompileStringFlags": {
      "source": "PyAPI_FUNC(PyObject *) Py_CompileStringFlags(const char *, const char *, int,\n                                             PyCompilerFlags *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDescr_NewWrapper": {
      "source": "PyAPI_FUNC(PyObject *) PyDescr_NewWrapper(PyTypeObject *,\n                                                struct wrapperbase *, void *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyOS_strtol": {
      "source": "PyAPI_FUNC(long) PyOS_strtol(char *, char **, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyOS_double_to_string": {
      "source": "PyAPI_FUNC(char *) PyOS_double_to_string(double val,\n                                         char format_code,\n                                         int precision,\n                                         int flags,\n                                         int *type);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__asinhf": {
      "source": "__MATHCALL (asinh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__asinhl": {
      "source": "__MATHCALL (asinh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "nextafter": {
      "source": "__MATHCALLX (nextafter,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ceilf": {
      "source": "__MATHCALLX (ceil,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_DelItem": {
      "source": "PyAPI_FUNC(int) PyObject_DelItem(PyObject *o, PyObject *key);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInterpreterState_New": {
      "source": "PyAPI_FUNC(PyInterpreterState *) PyInterpreterState_New(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ceill": {
      "source": "__MATHCALLX (ceil,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyThread_CurrentFrames": {
      "source": "PyAPI_FUNC(PyObject *) _PyThread_CurrentFrames(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fabsf": {
      "source": "__MATHCALLX (fabs,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "clock_getcpuclockid": {
      "source": "extern int clock_getcpuclockid (pid_t __pid, clockid_t *__clock_id) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fabsl": {
      "source": "__MATHCALLX (fabs,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ttyslot": {
      "source": "extern int ttyslot (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_InPlacePower": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_InPlacePower(PyObject *o1, PyObject *o2,\n                                                 PyObject *o3);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setitimer": {
      "source": "extern int setitimer (__itimer_which_t __which,\n\t\t      const struct itimerval *__restrict __new,\n\t\t      struct itimerval *__restrict __old) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__nexttoward": {
      "source": "__MATHCALLX (nexttoward,, (_Mdouble_ __x, long double __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCapsule_SetDestructor": {
      "source": "PyAPI_FUNC(int) PyCapsule_SetDestructor(PyObject *capsule, PyCapsule_Destructor destructor);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "truncate64": {
      "source": "extern int truncate64 (const char *__file, __off64_t __length)\n     __THROW __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mempcpy": {
      "source": "extern void *mempcpy (void *__restrict __dest,\n\t\t      const void *__restrict __src, size_t __n)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__cbrtf": {
      "source": "__MATHCALL (cbrt,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcpcpy": {
      "source": "extern wchar_t *wcpcpy (wchar_t *__restrict __dest,\n\t\t\tconst wchar_t *__restrict __src) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_HasAttr": {
      "source": "PyAPI_FUNC(int) PyObject_HasAttr(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mkstemps64": {
      "source": "extern int mkstemps64 (char *__template, int __suffixlen)\n     __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "dremf": {
      "source": "__MATHCALL (drem,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "dreml": {
      "source": "__MATHCALL (drem,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fflush": {
      "source": "extern int fflush (FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInterpreterState_Delete": {
      "source": "PyAPI_FUNC(void) PyInterpreterState_Delete(PyInterpreterState *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_longjmp": {
      "source": "extern void _longjmp (struct __jmp_buf_tag __env[1], int __val)\n     __THROWNL __attribute__ ((__noreturn__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFile_GetLine": {
      "source": "PyAPI_FUNC(PyObject *) PyFile_GetLine(PyObject *, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ldiv": {
      "source": "extern ldiv_t ldiv (long int __numer, long int __denom)\n     __THROW __attribute__ ((__const__)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_Length": {
      "source": "PyAPI_FUNC(Py_ssize_t) PyObject_Length(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lchown": {
      "source": "extern int lchown (const char *__file, __uid_t __owner, __gid_t __group)\n     __THROW __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "realloc": {
      "source": "extern void *realloc (void *__ptr, size_t __size)\n     __THROW __attribute_warn_unused_result__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_GetInfo": {
      "source": "PyAPI_FUNC(PyObject *) PyLong_GetInfo(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_setjmp": {
      "source": "extern int _setjmp (struct __jmp_buf_tag __env[1]) __THROWNL;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_AsUTF8String": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_AsUTF8String(\n    PyObject *unicode           /* Unicode object */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strptime_l": {
      "source": "extern char *strptime_l (const char *__restrict __s,\n\t\t\t const char *__restrict __fmt, struct tm *__tp,\n\t\t\t __locale_t __loc) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "exp10l": {
      "source": "__MATHCALL (exp10,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_GetCallStats": {
      "source": "PyAPI_FUNC(PyObject *) PyEval_GetCallStats(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "exp10f": {
      "source": "__MATHCALL (exp10,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "toascii": {
      "source": "extern int toascii (int __c) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__drem": {
      "source": "__MATHCALL (drem,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strstr": {
      "source": "extern char *strstr (const char *__haystack, const char *__needle)\n     __THROW __attribute_pure__ __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "renameat": {
      "source": "extern int renameat (int __oldfd, const char *__old, int __newfd,\n\t\t     const char *__new) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "signal": {
      "source": "extern __sighandler_t signal (int __sig, __sighandler_t __handler)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fgetwc_unlocked": {
      "source": "extern wint_t fgetwc_unlocked (__FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mblen": {
      "source": "extern int mblen (const char *__s, size_t __n) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setegid": {
      "source": "extern int setegid (__gid_t __gid) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_IO_vfprintf": {
      "source": "extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,\n\t\t\t _IO_va_list);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicode_BuildEncodingMap": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_BuildEncodingMap(\n    PyObject* string            /* 256 character map */\n   );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_GenericGetAttr": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_GenericGetAttr(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "remquol": {
      "source": "__MATHCALL (remquo,, (_Mdouble_ __x, _Mdouble_ __y, int *__quo));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tempnam": {
      "source": "extern char *tempnam (const char *__dir, const char *__pfx)\n     __THROW __attribute_malloc__ ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fmin": {
      "source": "__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "remquof": {
      "source": "__MATHCALL (remquo,, (_Mdouble_ __x, _Mdouble_ __y, int *__quo));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mrand48": {
      "source": "extern long int mrand48 (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ftruncate64": {
      "source": "extern int ftruncate64 (int __fd, __off64_t __length) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyBuffer_ToContiguous": {
      "source": "PyAPI_FUNC(int) PyBuffer_ToContiguous(void *buf, Py_buffer *view,\n                                           Py_ssize_t len, char fort);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_NoMemory": {
      "source": "PyAPI_FUNC(PyObject *) PyErr_NoMemory(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyTraceBack_Print": {
      "source": "PyAPI_FUNC(int) PyTraceBack_Print(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "scalb": {
      "source": "__MATHCALL (scalb,, (_Mdouble_ __x, _Mdouble_ __n));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_MergeCompilerFlags": {
      "source": "PyAPI_FUNC(int) PyEval_MergeCompilerFlags(PyCompilerFlags *cf);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyLong_Sign": {
      "source": "PyAPI_FUNC(int) _PyLong_Sign(PyObject *v);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFloat_GetMin": {
      "source": "PyAPI_FUNC(double) PyFloat_GetMin(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "qecvt_r": {
      "source": "extern int qecvt_r (long double __value, int __ndigit,\n\t\t    int *__restrict __decpt, int *__restrict __sign,\n\t\t    char *__restrict __buf, size_t __len)\n     __THROW __nonnull ((3, 4, 5));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__signbitf": {
      "source": "__MATHDECL_1 (int, __signbit,, (_Mdouble_ __value))\n     __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_SetObject": {
      "source": "PyAPI_FUNC(void) PyErr_SetObject(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_NewException": {
      "source": "PyAPI_FUNC(PyObject *) PyErr_NewException(\n    char *name, PyObject *base, PyObject *dict);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__signbitl": {
      "source": "__MATHDECL_1 (int, __signbit,, (_Mdouble_ __value))\n     __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__y1f": {
      "source": "__MATHCALL (y1,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__y1l": {
      "source": "__MATHCALL (y1,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_SetProgramName": {
      "source": "PyAPI_FUNC(void) Py_SetProgramName(char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "timer_gettime": {
      "source": "extern int timer_gettime (timer_t __timerid, struct itimerspec *__value)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mkfifoat": {
      "source": "extern int mkfifoat (int __fd, const char *__path, __mode_t __mode)\n     __THROW __nonnull ((2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicodeUCS4_IsWhitespace": {
      "source": "PyAPI_FUNC(int) _PyUnicode_IsWhitespace(\n    const Py_UNICODE ch         /* Unicode character */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_FromStringAndSize": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_FromStringAndSize(\n    const char *u,        /* char buffer */\n    Py_ssize_t size       /* size of buffer */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyArg_VaParseTupleAndKeywords": {
      "source": "PyAPI_FUNC(int) PyArg_VaParseTupleAndKeywords(PyObject *, PyObject *,\n                                                  const char *, char **, va_list);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "bsearch": {
      "source": "extern void *bsearch (const void *__key, const void *__base,\n\t\t      size_t __nmemb, size_t __size, __compar_fn_t __compar)\n     __nonnull ((1, 2, 5)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fmin": {
      "source": "__MATHCALLX (fmin,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyBuffer_Release": {
      "source": "PyAPI_FUNC(void) PyBuffer_Release(Py_buffer *view);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyTuple_Size": {
      "source": "PyAPI_FUNC(Py_ssize_t) PyTuple_Size(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyExc_Fini": {
      "source": "PyAPI_FUNC(void) _PyExc_Fini(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "gamma": {
      "source": "__MATHCALL (gamma,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyBuffer_FromContiguous": {
      "source": "PyAPI_FUNC(int) PyBuffer_FromContiguous(Py_buffer *view, void *buf,\n                                             Py_ssize_t len, char fort);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDictProxy_New": {
      "source": "PyAPI_FUNC(PyObject *) PyDictProxy_New(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "gethostid": {
      "source": "extern long int gethostid (void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fopen": {
      "source": "extern FILE *__REDIRECT (fopen, (const char *__restrict __filename,\n\t\t\t\t const char *__restrict __modes), fopen64)\n", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sqrtf": {
      "source": "__MATHCALL (sqrt,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "memccpy": {
      "source": "extern void *memccpy (void *__restrict __dest, const void *__restrict __src,\n\t\t      int __c, size_t __n)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lround": {
      "source": "__MATHDECL (long int,lround,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_GenericGetAttrWithDict": {
      "source": "PyAPI_FUNC(PyObject *)\n_PyObject_GenericGetAttrWithDict(PyObject *, PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "vprintf": {
      "source": "extern int vprintf (const char *__restrict __format, _G_va_list __arg);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyTuple_ClearFreeList": {
      "source": "PyAPI_FUNC(int) PyTuple_ClearFreeList(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicodeUCS4_IsLowercase": {
      "source": "PyAPI_FUNC(int) _PyUnicode_IsLowercase(\n    Py_UNICODE ch       /* Unicode character */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_GC_UnTrack": {
      "source": "PyAPI_FUNC(void) PyObject_GC_UnTrack(void *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__ynl": {
      "source": "__MATHCALL (yn,, (int, _Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "atoi": {
      "source": "extern int atoi (const char *__nptr)\n     __THROW __attribute_pure__ __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "link": {
      "source": "extern int link (const char *__from, const char *__to)\n     __THROW __nonnull ((1, 2)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "vfprintf": {
      "source": "extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,\n\t\t     _G_va_list __arg);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "atol": {
      "source": "extern long int atol (const char *__nptr)\n     __THROW __attribute_pure__ __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__ynf": {
      "source": "__MATHCALL (yn,, (int, _Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lrint": {
      "source": "__MATHDECL (long int,lrint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strdup": {
      "source": "extern char *strdup (const char *__s)\n     __THROW __attribute_malloc__ __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_DecodeUTF8": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_DecodeUTF8(\n    const char *string,         /* UTF-8 encoded string */\n    Py_ssize_t length,          /* size of string */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "erand48": {
      "source": "extern double erand48 (unsigned short int __xsubi[3]) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_InPlaceDivide": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_InPlaceDivide(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fdim": {
      "source": "__MATHCALL (fdim,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMemoryView_FromBuffer": {
      "source": "PyAPI_FUNC(PyObject *) PyMemoryView_FromBuffer(Py_buffer *info);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "imaxdiv": {
      "source": "extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)\n      __THROW __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_GC_New": {
      "source": "PyAPI_FUNC(PyObject *) _PyObject_GC_New(PyTypeObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ungetc": {
      "source": "extern int ungetc (int __c, FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySlice_GetIndicesEx": {
      "source": "PyAPI_FUNC(int) PySlice_GetIndicesEx(PySliceObject *r, Py_ssize_t length,\n\t\t\t\t    Py_ssize_t *start, Py_ssize_t *stop, \n\t\t\t\t    Py_ssize_t *step, Py_ssize_t *slicelength);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ffsl": {
      "source": "extern int ffsl (long int __l) __THROW __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fread": {
      "source": "extern size_t fread (void *__restrict __ptr, size_t __size,\n\t\t     size_t __n, FILE *__restrict __stream) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_CheckRecursiveCall": {
      "source": "PyAPI_FUNC(int) _Py_CheckRecursiveCall(char *where);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInt_FromSize_t": {
      "source": "PyAPI_FUNC(PyObject *) PyInt_FromSize_t(size_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeTranslateError_SetReason": {
      "source": "PyAPI_FUNC(int) PyUnicodeTranslateError_SetReason(\n    PyObject *, const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_GetItem": {
      "source": "PyAPI_FUNC(PyObject *) PyDict_GetItem(PyObject *mp, PyObject *key);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyThreadState_GetDict": {
      "source": "PyAPI_FUNC(PyObject *) PyThreadState_GetDict(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "pread64": {
      "source": "extern ssize_t pread64 (int __fd, void *__buf, size_t __nbytes,\n\t\t\t__off64_t __offset) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isdigit": {
      "source": "__exctype (isdigit);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_HashPointer": {
      "source": "PyAPI_FUNC(long) _Py_HashPointer(void*);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "stat64": {
      "source": "extern int stat64 (const char *__restrict __file,\n\t\t   struct stat64 *__restrict __buf) __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "crypt": {
      "source": "extern char *crypt (const char *__key, const char *__salt)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "nexttowardf": {
      "source": "__MATHCALLX (nexttoward,, (_Mdouble_ __x, long double __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_c_abs": {
      "source": "PyAPI_FUNC(double) c_abs(Py_complex);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_InPlaceOr": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_InPlaceOr(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setenv": {
      "source": "extern int setenv (const char *__name, const char *__value, int __replace)\n     __THROW __nonnull ((2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fmodf": {
      "source": "__MATHCALL (fmod,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fmodl": {
      "source": "__MATHCALL (fmod,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fma": {
      "source": "__MATHCALL (fma,, (_Mdouble_ __x, _Mdouble_ __y, _Mdouble_ __z));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_AsWriteBuffer": {
      "source": "PyAPI_FUNC(int) PyObject_AsWriteBuffer(PyObject *obj,\n                                           void **buffer,\n                                           Py_ssize_t *buffer_len);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigsuspend": {
      "source": "extern int sigsuspend (const sigset_t *__set) __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__ctype_toupper_loc": {
      "source": "extern const __int32_t **__ctype_toupper_loc (void)\n     __THROW __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCode_NewEmpty": {
      "source": "PyAPI_FUNC(PyCodeObject *)\nPyCode_NewEmpty(const char *filename, const char *funcname, int firstlineno);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Check": {
      "source": "PyAPI_FUNC(int) PyNumber_Check(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__nearbyintl": {
      "source": "__MATHCALL (nearbyint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyTrash_destroy_chain": {
      "source": "PyAPI_FUNC(void) _PyTrash_destroy_chain(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mkostemp64": {
      "source": "extern int mkostemp64 (char *__template, int __flags) __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__nearbyintf": {
      "source": "__MATHCALL (nearbyint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFile_FromFile": {
      "source": "PyAPI_FUNC(PyObject *) PyFile_FromFile(FILE *, char *, char *,\n                                             int (*)(FILE *));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "gettimeofday": {
      "source": "extern int gettimeofday (struct timeval *__restrict __tv,\n\t\t\t __timezone_ptr_t __tz) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyImport_ExtendInittab": {
      "source": "PyAPI_FUNC(int) PyImport_ExtendInittab(struct _inittab *newtab);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_DecodeRawUnicodeEscape": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_DecodeRawUnicodeEscape(\n    const char *string,         /* Raw-Unicode-Escape encoded string */\n    Py_ssize_t length,          /* size of string */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_FromFormat": {
      "source": "PyAPI_FUNC(PyObject *) PyString_FromFormat(const char*, ...)\n\t\t\t\tPy_GCC_ATTRIBUTE((format(printf, 1, 2)));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_Size": {
      "source": "PyAPI_FUNC(Py_ssize_t) PySequence_Size(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_SetFromErrnoWithFilenameObject": {
      "source": "PyAPI_FUNC(PyObject *) PyErr_SetFromErrnoWithFilenameObject(\n    PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mkstemps": {
      "source": "extern int __REDIRECT (mkstemps, (char *__template, int __suffixlen),\n\t\t       mkstemps64) __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyOS_InitInterrupts": {
      "source": "PyAPI_FUNC(void) PyOS_InitInterrupts(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ldexpl": {
      "source": "__MATHCALL (ldexp,, (_Mdouble_ __x, int __exponent));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_GetSize": {
      "source": "PyAPI_FUNC(Py_ssize_t) PyUnicode_GetSize(\n    PyObject *unicode           /* Unicode object */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_SetTrace": {
      "source": "PyAPI_FUNC(void) PyEval_SetTrace(Py_tracefunc, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFloat_ClearFreeList": {
      "source": "PyAPI_FUNC(int) PyFloat_ClearFreeList(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ldexpf": {
      "source": "__MATHCALL (ldexp,, (_Mdouble_ __x, int __exponent));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_SetDefaultEncoding": {
      "source": "PyAPI_FUNC(int) PyUnicode_SetDefaultEncoding(\n    const char *encoding        /* Encoding name in standard form */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "log2f": {
      "source": "__MATHCALL (log2,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "log2l": {
      "source": "__MATHCALL (log2,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__issignalingl": {
      "source": "__MATHDECL_1 (int, __issignaling,, (_Mdouble_ __value))\n     __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getline": {
      "source": "extern _IO_ssize_t getline (char **__restrict __lineptr,\n\t\t\t    size_t *__restrict __n,\n\t\t\t    FILE *__restrict __stream) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__issignalingf": {
      "source": "__MATHDECL_1 (int, __issignaling,, (_Mdouble_ __value))\n     __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyInstance_Lookup": {
      "source": "PyAPI_FUNC(PyObject *) _PyInstance_Lookup(PyObject *pinst, PyObject *name);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "scalbnf": {
      "source": "__MATHCALL (scalbn,, (_Mdouble_ __x, int __n));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_IO_putc": {
      "source": "extern int _IO_putc (int __c, _IO_FILE *__fp);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "scalbnl": {
      "source": "__MATHCALL (scalbn,, (_Mdouble_ __x, int __n));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_CheckSignals": {
      "source": "PyAPI_FUNC(int) PyErr_CheckSignals(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getumask": {
      "source": "extern __mode_t getumask (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySet_Fini": {
      "source": "PyAPI_FUNC(void) PySet_Fini(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCell_Get": {
      "source": "PyAPI_FUNC(PyObject *) PyCell_Get(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyByteArray_Resize": {
      "source": "PyAPI_FUNC(int) PyByteArray_Resize(PyObject *, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "siglongjmp": {
      "source": "extern void siglongjmp (sigjmp_buf __env, int __val)\n     __THROWNL __attribute__ ((__noreturn__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__roundl": {
      "source": "__MATHCALLX (round,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setlogin": {
      "source": "extern int setlogin (const char *__name) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigorset": {
      "source": "extern int sigorset (sigset_t *__set, const sigset_t *__left,\n\t\t     const sigset_t *__right) __THROW __nonnull ((1, 2, 3));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isblank": {
      "source": "__exctype (isblank);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ttyname": {
      "source": "extern char *ttyname (int __fd) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__y0f": {
      "source": "__MATHCALL (y0,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "snprintf": {
      "source": "extern int snprintf (char *__restrict __s, size_t __maxlen,\n\t\t     const char *__restrict __format, ...)\n     __THROWNL __attribute__ ((__format__ (__printf__, 3, 4)));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__errno_location": {
      "source": "extern int *__errno_location (void) __THROW __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "memset": {
      "source": "extern void *memset (void *__s, int __c, size_t __n) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__y0l": {
      "source": "__MATHCALL (y0,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_DecodeCharmap": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_DecodeCharmap(\n    const char *string,         /* Encoded string */\n    Py_ssize_t length,          /* size of string */\n    PyObject *mapping,          /* character mapping\n                                   (char ordinal -> unicode ordinal) */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstof": {
      "source": "extern float wcstof (const wchar_t *__restrict __nptr,\n\t\t     wchar_t **__restrict __endptr) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strcasestr": {
      "source": "extern char *strcasestr (const char *__haystack, const char *__needle)\n     __THROW __attribute_pure__ __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeDecodeError_GetReason": {
      "source": "PyAPI_FUNC(PyObject *) PyUnicodeDecodeError_GetReason(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__ctype_get_mb_cur_max": {
      "source": "extern size_t __ctype_get_mb_cur_max (void) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Multiply": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Multiply(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mktemp": {
      "source": "extern char *mktemp (char *__template) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "index": {
      "source": "extern char *index (const char *__s, int __c)\n     __THROW __attribute_pure__ __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyImport_GetMagicNumber": {
      "source": "PyAPI_FUNC(long) PyImport_GetMagicNumber(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "access": {
      "source": "extern int access (const char *__name, int __type) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "grantpt": {
      "source": "extern int grantpt (int __fd) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__acoshf": {
      "source": "__MATHCALL (acosh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyNumber_ConvertIntegralToInt": {
      "source": "PyAPI_FUNC(PyObject *) _PyNumber_ConvertIntegralToInt(\n         PyObject *integral,\n         const char* error_format);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__acoshl": {
      "source": "__MATHCALL (acosh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "settimeofday": {
      "source": "extern int settimeofday (const struct timeval *__tv,\n\t\t\t const struct timezone *__tz)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFunction_New": {
      "source": "PyAPI_FUNC(PyObject *) PyFunction_New(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__sysv_signal": {
      "source": "extern __sighandler_t __sysv_signal (int __sig, __sighandler_t __handler)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "matherr": {
      "source": "extern int matherr (struct exception *__exc);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sinl": {
      "source": "__MATHCALL (sin,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mbsinit": {
      "source": "extern int mbsinit (const mbstate_t *__ps) __THROW __attribute_pure__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sinh": {
      "source": "__MATHCALL (sinh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sinf": {
      "source": "__MATHCALL (sin,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fgetws_unlocked": {
      "source": "extern wchar_t *fgetws_unlocked (wchar_t *__restrict __ws, int __n,\n\t\t\t\t __FILE *__restrict __stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "acoshl": {
      "source": "__MATHCALL (acosh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyComplex_FromDoubles": {
      "source": "PyAPI_FUNC(PyObject *) PyComplex_FromDoubles(double real, double imag);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "pipe2": {
      "source": "extern int pipe2 (int __pipedes[2], int __flags) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sethostid": {
      "source": "extern int sethostid (long int __id) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyTuple_New": {
      "source": "PyAPI_FUNC(PyObject *) PyTuple_New(Py_ssize_t size);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__stpncpy": {
      "source": "extern char *__stpncpy (char *__restrict __dest,\n\t\t\tconst char *__restrict __src, size_t __n)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "psignal": {
      "source": "extern void psignal (int __sig, const char *__s);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fgetpos64": {
      "source": "extern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "cbrt": {
      "source": "__MATHCALL (cbrt,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_FatalError": {
      "source": "PyAPI_FUNC(void) Py_FatalError(const char *message);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyImport_FindModule": {
      "source": "PyAPI_FUNC(struct filedescr *) _PyImport_FindModule(\n\tconst char *, PyObject *, char *, size_t, FILE **, PyObject **);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__jnl": {
      "source": "__MATHCALL (jn,, (int, _Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_Dir": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_Dir(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fmemopen": {
      "source": "extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)\n  __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__jnf": {
      "source": "__MATHCALL (jn,, (int, _Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeEncodeError_Create": {
      "source": "PyAPI_FUNC(PyObject *) PyUnicodeEncodeError_Create(\n    const char *, const Py_UNICODE *, Py_ssize_t, Py_ssize_t, Py_ssize_t, const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fdimf": {
      "source": "__MATHCALL (fdim,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_AsVoidPtr": {
      "source": "PyAPI_FUNC(void *) PyLong_AsVoidPtr(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fdiml": {
      "source": "__MATHCALL (fdim,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_EncodeASCII": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_EncodeASCII(\n    const Py_UNICODE *data,     /* Unicode char buffer */\n    Py_ssize_t length,                  /* Number of Py_UNICODE chars to encode */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lrand48_r": {
      "source": "extern int lrand48_r (struct drand48_data *__restrict __buffer,\n\t\t      long int *__restrict __result)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstoimax": {
      "source": "extern intmax_t wcstoimax (const __gwchar_t *__restrict __nptr,\n\t\t\t   __gwchar_t **__restrict __endptr, int __base)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyGILState_GetThisThreadState": {
      "source": "PyAPI_FUNC(PyThreadState *) PyGILState_GetThisThreadState(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "islower_l": {
      "source": "__exctype_l (islower_l);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigset": {
      "source": "extern __sighandler_t sigset (int __sig, __sighandler_t __disp) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isgraph_l": {
      "source": "__exctype_l (isgraph_l);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "nexttowardl": {
      "source": "__MATHCALLX (nexttoward,, (_Mdouble_ __x, long double __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "llrintl": {
      "source": "__MATHDECL (long long int,llrint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "llrintf": {
      "source": "__MATHDECL (long long int,llrint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySet_Discard": {
      "source": "PyAPI_FUNC(int) PySet_Discard(PyObject *set, PyObject *key);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "erand48_r": {
      "source": "extern int erand48_r (unsigned short int __xsubi[3],\n\t\t      struct drand48_data *__restrict __buffer,\n\t\t      double *__restrict __result) __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "chdir": {
      "source": "extern int chdir (const char *__path) __THROW __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__floorf": {
      "source": "__MATHCALLX (floor,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_AsRawUnicodeEscapeString": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_AsRawUnicodeEscapeString(\n    PyObject *unicode           /* Unicode object */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__floorl": {
      "source": "__MATHCALLX (floor,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mkostemps": {
      "source": "extern int __REDIRECT (mkostemps, (char *__template, int __suffixlen,\n\t\t\t\t   int __flags), mkostemps64)\n     __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicodeUCS4_ToDigit": {
      "source": "PyAPI_FUNC(int) _PyUnicode_ToDigit(\n    Py_UNICODE ch       /* Unicode character */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "swprintf": {
      "source": "extern int swprintf (wchar_t *__restrict __s, size_t __n,\n\t\t     const wchar_t *__restrict __format, ...)\n     __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_InPlaceRemainder": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_InPlaceRemainder(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInt_AsSsize_t": {
      "source": "PyAPI_FUNC(Py_ssize_t) PyInt_AsSsize_t(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_AsDouble": {
      "source": "PyAPI_FUNC(double) PyLong_AsDouble(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wprintf": {
      "source": "extern int wprintf (const wchar_t *__restrict __format, ...)\n", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeDecodeError_GetStart": {
      "source": "PyAPI_FUNC(int) PyUnicodeDecodeError_GetStart(PyObject *, Py_ssize_t *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_New": {
      "source": "PyAPI_FUNC(PyObject *) _PyObject_New(PyTypeObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fprintf": {
      "source": "extern int fprintf (FILE *__restrict __stream,\n\t\t    const char *__restrict __format, ...);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__sigaddset": {
      "source": "extern int __sigaddset (__sigset_t *, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyIter_Next": {
      "source": "PyAPI_FUNC(PyObject *) PyIter_Next(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeDecodeError_GetObject": {
      "source": "PyAPI_FUNC(PyObject *) PyUnicodeDecodeError_GetObject(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tan": {
      "source": "__MATHCALL (tan,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "timespec_get": {
      "source": "extern int timespec_get (struct timespec *__ts, int __base)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "feof": {
      "source": "extern int feof (FILE *__stream) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_AsDecodedString": {
      "source": "PyAPI_FUNC(PyObject*) PyString_AsDecodedString(\n    PyObject *str,\t \t/* string object */\n    const char *encoding,\t/* encoding */\n    const char *errors\t\t/* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_EncodeRawUnicodeEscape": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_EncodeRawUnicodeEscape(\n    const Py_UNICODE *data,     /* Unicode char buffer */\n    Py_ssize_t length                   /* Number of Py_UNICODE chars to encode */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__ldexpl": {
      "source": "__MATHCALL (ldexp,, (_Mdouble_ __x, int __exponent));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wmemchr": {
      "source": "extern wchar_t *wmemchr (const wchar_t *__s, wchar_t __c, size_t __n)\n     __THROW __attribute_pure__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "on_exit": {
      "source": "extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sin": {
      "source": "__MATHCALL (sin,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__ldexpf": {
      "source": "__MATHCALL (ldexp,, (_Mdouble_ __x, int __exponent));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "vasprintf": {
      "source": "extern int vasprintf (char **__restrict __ptr, const char *__restrict __f,\n\t\t      _G_va_list __arg)\n     __THROWNL __attribute__ ((__format__ (__printf__, 2, 0))) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_IO_free_backup_area": {
      "source": "extern void _IO_free_backup_area (_IO_FILE *) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyFloat_Init": {
      "source": "PyAPI_FUNC(void) _PyFloat_Init(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_AsEncodedString": {
      "source": "PyAPI_FUNC(PyObject*) PyString_AsEncodedString(\n    PyObject *str,\t \t/* string object */\n    const char *encoding,\t/* encoding */\n    const char *errors\t\t/* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySignal_SetWakeupFd": {
      "source": "int PySignal_SetWakeupFd(int fd);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_Translate": {
      "source": "PyAPI_FUNC(PyObject *) PyUnicode_Translate(\n    PyObject *str,              /* String */\n    PyObject *table,            /* Translate table */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "gammaf": {
      "source": "__MATHCALL (gamma,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "random_r": {
      "source": "extern int random_r (struct random_data *__restrict __buf,\n\t\t     int32_t *__restrict __result) __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCodec_BackslashReplaceErrors": {
      "source": "PyAPI_FUNC(PyObject *) PyCodec_BackslashReplaceErrors(PyObject *exc);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_GC_Track": {
      "source": "PyAPI_FUNC(void) PyObject_GC_Track(void *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__scalbnl": {
      "source": "__MATHCALL (scalbn,, (_Mdouble_ __x, int __n));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "gammal": {
      "source": "__MATHCALL (gamma,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__round": {
      "source": "__MATHCALLX (round,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_IsSubclass": {
      "source": "PyAPI_FUNC(int) PyObject_IsSubclass(PyObject *object, PyObject *typeorclass);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "pwrite": {
      "source": "extern ssize_t __REDIRECT (pwrite, (int __fd, const void *__buf,\n\t\t\t\t    size_t __nbytes, __off64_t __offset),\n\t\t\t   pwrite64) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_SetAttr": {
      "source": "PyAPI_FUNC(int) PyObject_SetAttr(PyObject *, PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__llrintl": {
      "source": "__MATHDECL (long long int,llrint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "syncfs": {
      "source": "extern int syncfs (int __fd) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getdomainname": {
      "source": "extern int getdomainname (char *__name, size_t __len)\n     __THROW __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_SelfIter": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_SelfIter(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyInt_Init": {
      "source": "PyAPI_FUNC(int) _PyInt_Init(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "execle": {
      "source": "extern int execle (const char *__path, const char *__arg, ...)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInterpreterState_ThreadHead": {
      "source": "PyAPI_FUNC(PyThreadState *) PyInterpreterState_ThreadHead(PyInterpreterState *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "jnf": {
      "source": "__MATHCALL (jn,, (int, _Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "pthread_kill": {
      "source": "extern int pthread_kill (pthread_t __threadid, int __signo) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "execlp": {
      "source": "extern int execlp (const char *__file, const char *__arg, ...)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyType_Lookup": {
      "source": "PyAPI_FUNC(PyObject *) _PyType_Lookup(PyTypeObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyRun_SimpleFileExFlags": {
      "source": "PyAPI_FUNC(int) PyRun_SimpleFileExFlags(FILE *, const char *, int, PyCompilerFlags *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "jnl": {
      "source": "__MATHCALL (jn,, (int, _Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicodeUCS4_ToUppercase": {
      "source": "PyAPI_FUNC(Py_UNICODE) _PyUnicode_ToUppercase(\n    Py_UNICODE ch       /* Unicode character */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstol_l": {
      "source": "extern long int wcstol_l (const wchar_t *__restrict __nptr,\n\t\t\t  wchar_t **__restrict __endptr, int __base,\n\t\t\t  __locale_t __loc) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_EncodeUTF8": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_EncodeUTF8(\n    const Py_UNICODE *data,     /* Unicode char buffer */\n    Py_ssize_t length,                  /* number of Py_UNICODE chars to encode */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_Fini": {
      "source": "PyAPI_FUNC(void) PyString_Fini(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__copysignl": {
      "source": "__MATHCALLX (copysign,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__copysignf": {
      "source": "__MATHCALLX (copysign,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_GetProgramFullPath": {
      "source": "PyAPI_FUNC(char *) Py_GetProgramFullPath(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_GetItemString": {
      "source": "PyAPI_FUNC(PyObject *) PyDict_GetItemString(PyObject *dp, const char *key);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySys_SetObject": {
      "source": "PyAPI_FUNC(int) PySys_SetObject(char *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicodeUCS4_IsDecimalDigit": {
      "source": "PyAPI_FUNC(int) _PyUnicode_IsDecimalDigit(\n    Py_UNICODE ch       /* Unicode character */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__erf": {
      "source": "__MATHCALL (erf,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "modf": {
      "source": "__MATHCALL (modf,, (_Mdouble_ __x, _Mdouble_ *__iptr)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_Dump": {
      "source": "PyAPI_FUNC(void) _PyObject_Dump(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PySet_NextEntry": {
      "source": "PyAPI_FUNC(int) _PySet_NextEntry(PyObject *set, Py_ssize_t *pos, PyObject **key, long *hash);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mkfifo": {
      "source": "extern int mkfifo (const char *__path, __mode_t __mode)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__atan": {
      "source": "__MATHCALL (atan,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeTranslateError_GetEnd": {
      "source": "PyAPI_FUNC(int) PyUnicodeTranslateError_GetEnd(PyObject *, Py_ssize_t *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Lshift": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Lshift(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fgets_unlocked": {
      "source": "extern char *fgets_unlocked (char *__restrict __s, int __n,\n\t\t\t     FILE *__restrict __stream) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyList_Reverse": {
      "source": "PyAPI_FUNC(int) PyList_Reverse(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_RSplit": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_RSplit(\n    PyObject *s,                /* String to split */\n    PyObject *sep,              /* String separator */\n    Py_ssize_t maxsplit         /* Maxsplit count */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "killpg": {
      "source": "extern int killpg (__pid_t __pgrp, int __sig) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isdigit_l": {
      "source": "__exctype_l (isdigit_l);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_RestoreThread": {
      "source": "PyAPI_FUNC(void) PyEval_RestoreThread(PyThreadState *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_InitModule4_64": {
      "source": "PyAPI_FUNC(PyObject *) Py_InitModule4(const char *name, PyMethodDef *methods,\n                                      const char *doc, PyObject *self,\n                                      int apiver);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "unsetenv": {
      "source": "extern int unsetenv (const char *__name) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "atan2l": {
      "source": "__MATHCALL (atan2,, (_Mdouble_ __y, _Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "atan2f": {
      "source": "__MATHCALL (atan2,, (_Mdouble_ __y, _Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "revoke": {
      "source": "extern int revoke (const char *__file) __THROW __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_Join": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_Join(\n    PyObject *separator,        /* Separator string */\n    PyObject *seq               /* Sequence object */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__signbit": {
      "source": "__MATHDECL_1 (int, __signbit,, (_Mdouble_ __value))\n     __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInterpreterState_Head": {
      "source": "PyAPI_FUNC(PyInterpreterState *) PyInterpreterState_Head(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyBool_FromLong": {
      "source": "PyAPI_FUNC(PyObject *) PyBool_FromLong(long);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_IO_cookie_init": {
      "source": "extern void _IO_cookie_init (struct _IO_cookie_file *__cfile, int __read_write,\n\t\t\t     void *__cookie, _IO_cookie_io_functions_t __fns);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigignore": {
      "source": "extern int sigignore (int __sig) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_GetFuncName": {
      "source": "PyAPI_FUNC(const char *) PyEval_GetFuncName(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "log": {
      "source": "__MATHCALL (log,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_GetPrefix": {
      "source": "PyAPI_FUNC(char *) Py_GetPrefix(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fseeko": {
      "source": "extern int __REDIRECT (fseeko,\n\t\t       (FILE *__stream, __off64_t __off, int __whence),\n\t\t       fseeko64);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyLong_NumBits": {
      "source": "PyAPI_FUNC(size_t) _PyLong_NumBits(PyObject *v);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PySet_Next": {
      "source": "PyAPI_FUNC(int) _PySet_Next(PyObject *set, Py_ssize_t *pos, PyObject **key);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_Contains": {
      "source": "PyAPI_FUNC(int) PyDict_Contains(PyObject *mp, PyObject *key);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__scalbnf": {
      "source": "__MATHCALL (scalbn,, (_Mdouble_ __x, int __n));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySet_Pop": {
      "source": "PyAPI_FUNC(PyObject *) PySet_Pop(PyObject *set);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigsetmask": {
      "source": "extern int sigsetmask (int __mask) __THROW __attribute_deprecated__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_New": {
      "source": "PyAPI_FUNC(PyObject *) PyDict_New(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "bcopy": {
      "source": "extern void bcopy (const void *__src, void *__dest, size_t __n)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mbtowc": {
      "source": "extern int mbtowc (wchar_t *__restrict __pwc,\n\t\t   const char *__restrict __s, size_t __n) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_GetAttr": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_GetAttr(PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_CoerceEx": {
      "source": "PyAPI_FUNC(int) PyNumber_CoerceEx(PyObject **, PyObject **);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__pow": {
      "source": "__MATHCALL (pow,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInt_ClearFreeList": {
      "source": "PyAPI_FUNC(int) PyInt_ClearFreeList(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_AsWideChar": {
      "source": "PyAPI_FUNC(Py_ssize_t) PyUnicode_AsWideChar(\n    PyUnicodeObject *unicode,   /* Unicode object */\n    register wchar_t *w,        /* wchar_t buffer */\n    Py_ssize_t size             /* size of buffer */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mkdtemp": {
      "source": "extern char *mkdtemp (char *__template) __THROW __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcslen": {
      "source": "extern size_t wcslen (const wchar_t *__s) __THROW __attribute_pure__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "copysignf": {
      "source": "__MATHCALLX (copysign,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "copysignl": {
      "source": "__MATHCALLX (copysign,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "scanf": {
      "source": "extern int scanf (const char *__restrict __format, ...) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyList_GetItem": {
      "source": "PyAPI_FUNC(PyObject *) PyList_GetItem(PyObject *, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mkdir": {
      "source": "extern int mkdir (const char *__path, __mode_t __mode)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "system": {
      "source": "extern int system (const char *__command) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strcasecmp": {
      "source": "extern int strcasecmp (const char *__s1, const char *__s2)\n     __THROW __attribute_pure__ __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__frexpf": {
      "source": "__MATHCALL (frexp,, (_Mdouble_ __x, int *__exponent));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__frexpl": {
      "source": "__MATHCALL (frexp,, (_Mdouble_ __x, int *__exponent));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mkstemp64": {
      "source": "extern int mkstemp64 (char *__template) __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCapsule_IsValid": {
      "source": "PyAPI_FUNC(int) PyCapsule_IsValid(PyObject *capsule, const char *name);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__erff": {
      "source": "__MATHCALL (erf,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "secure_getenv": {
      "source": "extern char *secure_getenv (const char *__name)\n     __THROW __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_DecodeEscape": {
      "source": "PyAPI_FUNC(PyObject *) PyString_DecodeEscape(const char *, Py_ssize_t, \n\t\t\t\t\t\t   const char *, Py_ssize_t,\n\t\t\t\t\t\t   const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__erfl": {
      "source": "__MATHCALL (erf,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__sigismember": {
      "source": "extern int __sigismember (const __sigset_t *, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_AsLongLongAndOverflow": {
      "source": "PyAPI_FUNC(PY_LONG_LONG) PyLong_AsLongLongAndOverflow(PyObject *, int *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicodeUCS4_ToLowercase": {
      "source": "PyAPI_FUNC(Py_UNICODE) _PyUnicode_ToLowercase(\n    Py_UNICODE ch       /* Unicode character */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyType_GenericNew": {
      "source": "PyAPI_FUNC(PyObject *) PyType_GenericNew(PyTypeObject *,\n                                               PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fscanf": {
      "source": "extern int fscanf (FILE *__restrict __stream,\n\t\t   const char *__restrict __format, ...) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCodec_ReplaceErrors": {
      "source": "PyAPI_FUNC(PyObject *) PyCodec_ReplaceErrors(PyObject *exc);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "quick_exit": {
      "source": "extern void quick_exit (int __status) __THROW __attribute__ ((__noreturn__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fexecve": {
      "source": "extern int fexecve (int __fd, char *const __argv[], char *const __envp[])\n     __THROW __nonnull ((2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_Clear": {
      "source": "PyAPI_FUNC(void) PyErr_Clear(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_FromString": {
      "source": "PyAPI_FUNC(PyObject *) PyLong_FromString(char *, char **, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__assert_fail": {
      "source": "extern void __assert_fail (const char *__assertion, const char *__file,\n\t\t\t   unsigned int __line, const char *__function)\n     __THROW __attribute__ ((__noreturn__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstoul": {
      "source": "extern unsigned long int wcstoul (const wchar_t *__restrict __nptr,\n\t\t\t\t  wchar_t **__restrict __endptr, int __base)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcswidth": {
      "source": "extern int wcswidth (const wchar_t *__s, size_t __n) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstouq": {
      "source": "extern unsigned long long int wcstouq (const wchar_t *__restrict __nptr,\n\t\t\t\t       wchar_t **__restrict __endptr,\n\t\t\t\t       int __base) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_c_pow": {
      "source": "PyAPI_FUNC(Py_complex) c_pow(Py_complex, Py_complex);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyLong_FormatAdvanced": {
      "source": "PyAPI_FUNC(PyObject *) _PyLong_FormatAdvanced(PyObject *obj,\n\t\t\t\t\t      char *format_spec,\n\t\t\t\t\t      Py_ssize_t format_spec_len);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fseek": {
      "source": "extern int fseek (FILE *__stream, long int __off, int __whence);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Long": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Long(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_FromFormatV": {
      "source": "PyAPI_FUNC(PyObject *) PyUnicode_FromFormatV(const char*, va_list);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "frexpl": {
      "source": "__MATHCALL (frexp,, (_Mdouble_ __x, int *__exponent));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySet_New": {
      "source": "PyAPI_FUNC(PyObject *) PySet_New(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "frexpf": {
      "source": "__MATHCALL (frexp,, (_Mdouble_ __x, int *__exponent));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_FromWideChar": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_FromWideChar(\n    register const wchar_t *w,  /* wchar_t buffer */\n    Py_ssize_t size             /* size of buffer */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tolower": {
      "source": "extern int tolower (int __c) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyArg_ParseTupleAndKeywords": {
      "source": "PyAPI_FUNC(int) PyArg_ParseTupleAndKeywords(PyObject *, PyObject *,\n                                                  const char *, char **, ...);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_FromUnsignedLongLong": {
      "source": "PyAPI_FUNC(PyObject *) PyLong_FromUnsignedLongLong(unsigned PY_LONG_LONG);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCodec_Decoder": {
      "source": "PyAPI_FUNC(PyObject *) PyCodec_Decoder(\n       const char *encoding\n       );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicodeUCS4_ToTitlecase": {
      "source": "PyAPI_FUNC(Py_UNICODE) _PyUnicode_ToTitlecase(\n    Py_UNICODE ch       /* Unicode character */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wscanf": {
      "source": "extern int wscanf (const wchar_t *__restrict __format, ...)\n", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyByteArray_Init": {
      "source": "PyAPI_FUNC(int) PyByteArray_Init(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFile_WriteObject": {
      "source": "PyAPI_FUNC(int) PyFile_WriteObject(PyObject *, PyObject *, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_GenericSetAttrWithDict": {
      "source": "PyAPI_FUNC(int)\n_PyObject_GenericSetAttrWithDict(PyObject *, PyObject *,\n                                 PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCObject_FromVoidPtrAndDesc": {
      "source": "PyAPI_FUNC(PyObject *) PyCObject_FromVoidPtrAndDesc(\n\tvoid *cobj, void *desc, void (*destruct)(void*,void*));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "pipe": {
      "source": "extern int pipe (int __pipedes[2]) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Coerce": {
      "source": "PyAPI_FUNC(int) PyNumber_Coerce(PyObject **, PyObject **);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__acosh": {
      "source": "__MATHCALL (acosh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__acosl": {
      "source": "__MATHCALL (acos,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcsstr": {
      "source": "extern wchar_t *wcsstr (const wchar_t *__haystack, const wchar_t *__needle)\n     __THROW __attribute_pure__;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "utimes": {
      "source": "extern int utimes (const char *__file, const struct timeval __tvp[2])\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__acosf": {
      "source": "__MATHCALL (acos,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtol": {
      "source": "extern long int strtol (const char *__restrict __nptr,\n\t\t\tchar **__restrict __endptr, int __base)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_RPartition": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_RPartition(\n    PyObject *s,                /* String to partition */\n    PyObject *sep               /* String separator */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_InternInPlace": {
      "source": "PyAPI_FUNC(void) PyString_InternInPlace(PyObject **);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtok": {
      "source": "extern char *strtok (char *__restrict __s, const char *__restrict __delim)\n     __THROW __nonnull ((2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtod": {
      "source": "extern double strtod (const char *__restrict __nptr,\n\t\t      char **__restrict __endptr)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtof": {
      "source": "extern float strtof (const char *__restrict __nptr,\n\t\t     char **__restrict __endptr) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_FlushLine": {
      "source": "PyAPI_FUNC(int) Py_FlushLine(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__llroundf": {
      "source": "__MATHDECL (long long int,llround,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "umask": {
      "source": "extern __mode_t umask (__mode_t __mask) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_DecodeASCII": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_DecodeASCII(\n    const char *string,         /* ASCII encoded string */\n    Py_ssize_t length,          /* size of string */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strtoq": {
      "source": "extern long long int strtoq (const char *__restrict __nptr,\n\t\t\t     char **__restrict __endptr, int __base)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcscoll": {
      "source": "extern int wcscoll (const wchar_t *__s1, const wchar_t *__s2) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fmal": {
      "source": "__MATHCALL (fma,, (_Mdouble_ __x, _Mdouble_ __y, _Mdouble_ __z));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "bcmp": {
      "source": "extern int bcmp (const void *__s1, const void *__s2, size_t __n)\n     __THROW __attribute_pure__ __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strxfrm_l": {
      "source": "extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,\n\t\t\t __locale_t __l) __THROW __nonnull ((2, 4));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getpgrp": {
      "source": "extern __pid_t getpgrp (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMapping_Check": {
      "source": "PyAPI_FUNC(int) PyMapping_Check(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_Cmp": {
      "source": "PyAPI_FUNC(int) PyObject_Cmp(PyObject *o1, PyObject *o2, int *result);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "memcpy": {
      "source": "extern void *memcpy (void *__restrict __dest, const void *__restrict __src,\n\t\t     size_t __n) __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sbrk": {
      "source": "extern void *sbrk (intptr_t __delta) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_InPlaceMultiply": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_InPlaceMultiply(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyString_FormatLong": {
      "source": "PyAPI_FUNC(PyObject *) _PyString_FormatLong(PyObject*, int, int,\n\t\t\t\t\t\t  int, char**, int*);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigismember": {
      "source": "extern int sigismember (const sigset_t *__set, int __signo)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_DecodeUnicodeEscape": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_DecodeUnicodeEscape(\n    const char *string,         /* Unicode-Escape encoded string */\n    Py_ssize_t length,          /* size of string */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyImport_ExecCodeModuleEx": {
      "source": "PyAPI_FUNC(PyObject *) PyImport_ExecCodeModuleEx(\n\tchar *name, PyObject *co, char *pathname);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyGILState_Release": {
      "source": "PyAPI_FUNC(void) PyGILState_Release(PyGILState_STATE);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_Repr": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_Repr(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "nextafterf": {
      "source": "__MATHCALLX (nextafter,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyComplex_ImagAsDouble": {
      "source": "PyAPI_FUNC(double) PyComplex_ImagAsDouble(PyObject *op);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__llround": {
      "source": "__MATHDECL (long long int,llround,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tolower_l": {
      "source": "extern int tolower_l (int __c, __locale_t __l) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "stpcpy": {
      "source": "extern char *stpcpy (char *__restrict __dest, const char *__restrict __src)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyRandom_Fini": {
      "source": "PyAPI_FUNC(void) _PyRandom_Fini(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySys_HasWarnOptions": {
      "source": "PyAPI_FUNC(int) PySys_HasWarnOptions(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isnan": {
      "source": "__MATHDECL_1 (int,isnan,, (_Mdouble_ __value)) __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMethod_Self": {
      "source": "PyAPI_FUNC(PyObject *) PyMethod_Self(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_FindMethodInChain": {
      "source": "PyAPI_FUNC(PyObject *) Py_FindMethodInChain(PyMethodChain *, PyObject *,\n                                            const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "encrypt": {
      "source": "extern void encrypt (char *__glibc_block, int __edflag)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySet_Size": {
      "source": "PyAPI_FUNC(Py_ssize_t) PySet_Size(PyObject *anyset);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strspn": {
      "source": "extern size_t strspn (const char *__s, const char *__accept)\n     __THROW __attribute_pure__ __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCodec_StrictErrors": {
      "source": "PyAPI_FUNC(PyObject *) PyCodec_StrictErrors(PyObject *exc);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_dg_freedtoa": {
      "source": "PyAPI_FUNC(void) _Py_dg_freedtoa(char *s);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyModule_AddObject": {
      "source": "PyAPI_FUNC(int) PyModule_AddObject(PyObject *, const char *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setresgid": {
      "source": "extern int setresgid (__gid_t __rgid, __gid_t __egid, __gid_t __sgid)\n     __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__fdim": {
      "source": "__MATHCALL (fdim,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getwchar": {
      "source": "extern wint_t getwchar (void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ilogbl": {
      "source": "__MATHDECL (int,ilogb,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getdtablesize": {
      "source": "extern int getdtablesize (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ilogbf": {
      "source": "__MATHDECL (int,ilogb,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyImport_ReInitLock": {
      "source": "PyAPI_FUNC(void) _PyImport_ReInitLock(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tmpnam_r": {
      "source": "extern char *tmpnam_r (char *__s) __THROW ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "atanhl": {
      "source": "__MATHCALL (atanh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__exp2f": {
      "source": "__MATHCALL (exp2,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_SetItem": {
      "source": "PyAPI_FUNC(int) PyObject_SetItem(PyObject *o, PyObject *key, PyObject *v);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_Type": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_Type(PyObject *o);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyTraceBack_Here": {
      "source": "PyAPI_FUNC(int) PyTraceBack_Here(struct _frame *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyInt_AsUnsignedLongMask": {
      "source": "PyAPI_FUNC(unsigned long) PyInt_AsUnsignedLongMask(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strftime": {
      "source": "extern size_t strftime (char *__restrict __s, size_t __maxsize,\n\t\t\tconst char *__restrict __format,\n\t\t\tconst struct tm *__restrict __tp) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "chmod": {
      "source": "extern int chmod (const char *__file, __mode_t __mode)\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstoull": {
      "source": "extern unsigned long long int wcstoull (const wchar_t *__restrict __nptr,\n\t\t\t\t\twchar_t **__restrict __endptr,\n\t\t\t\t\tint __base) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "tmpfile64": {
      "source": "extern FILE *tmpfile64 (void) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFPE_dummy": {
      "source": "extern double PyFPE_dummy(void *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getsubopt": {
      "source": "extern int getsubopt (char **__restrict __optionp,\n\t\t      char *const *__restrict __tokens,\n\t\t      char **__restrict __valuep)\n     __THROW __nonnull ((1, 2, 3)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "nanosleep": {
      "source": "extern int nanosleep (const struct timespec *__requested_time,\n\t\t      struct timespec *__remaining);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strndup": {
      "source": "extern char *strndup (const char *__string, size_t __n)\n     __THROW __attribute_malloc__ __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyParser_ASTFromFile": {
      "source": "PyAPI_FUNC(struct _mod *) PyParser_ASTFromFile(FILE *, const char *, int,\n                                               char *, char *,\n                                               PyCompilerFlags *, int *,\n                                               PyArena *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__nexttowardl": {
      "source": "__MATHCALLX (nexttoward,, (_Mdouble_ __x, long double __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_CopyData": {
      "source": "PyAPI_FUNC(int) PyObject_CopyData(PyObject *dest, PyObject *src);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMemoryView_GetContiguous": {
      "source": "PyAPI_FUNC(PyObject *) PyMemoryView_GetContiguous(PyObject *base, \n\t\t\t\t\t\t  int buffertype, \n\t\t\t\t\t\t  char fort);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCFunction_NewEx": {
      "source": "PyAPI_FUNC(PyObject *) PyCFunction_NewEx(PyMethodDef *, PyObject *, \n\t\t\t\t\t PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyFloat_Unpack4": {
      "source": "PyAPI_FUNC(double) _PyFloat_Unpack4(const unsigned char *p, int le);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_GC_Malloc": {
      "source": "PyAPI_FUNC(PyObject *) _PyObject_GC_Malloc(size_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyFloat_Unpack8": {
      "source": "PyAPI_FUNC(double) _PyFloat_Unpack8(const unsigned char *p, int le);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_Repeat": {
      "source": "PyAPI_FUNC(PyObject *) PySequence_Repeat(PyObject *o, Py_ssize_t count);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_AsUnsignedLong": {
      "source": "PyAPI_FUNC(unsigned long) PyLong_AsUnsignedLong(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "drand48": {
      "source": "extern double drand48 (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "truncl": {
      "source": "__MATHCALLX (trunc,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "truncf": {
      "source": "__MATHCALLX (trunc,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lgamma": {
      "source": "__MATHCALL (lgamma,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyModule_AddIntConstant": {
      "source": "PyAPI_FUNC(int) PyModule_AddIntConstant(PyObject *, const char *, long);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "vsprintf": {
      "source": "extern int vsprintf (char *__restrict __s, const char *__restrict __format,\n\t\t     _G_va_list __arg) __THROWNL;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "rename": {
      "source": "extern int rename (const char *__old, const char *__new) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "log10l": {
      "source": "__MATHCALL (log10,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "cfree": {
      "source": "extern void cfree (void *__ptr) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "srand": {
      "source": "extern void srand (unsigned int __seed) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fwrite_unlocked": {
      "source": "extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,\n\t\t\t       size_t __n, FILE *__restrict __stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getwd": {
      "source": "extern char *getwd (char *__buf)\n     __THROW __nonnull ((1)) __attribute_deprecated__ ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_NewVar": {
      "source": "PyAPI_FUNC(PyVarObject *) _PyObject_NewVar(PyTypeObject *, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFile_SetEncodingAndErrors": {
      "source": "PyAPI_FUNC(int) PyFile_SetEncodingAndErrors(PyObject *, const char *, char *errors);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCObject_Import": {
      "source": "PyAPI_FUNC(void *) PyCObject_Import(char *module_name, char *cobject_name);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ispunct": {
      "source": "__exctype (ispunct);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fabs": {
      "source": "__MATHCALLX (fabs,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getc": {
      "source": "extern int getc (FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sqrt": {
      "source": "__MATHCALL (sqrt,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyBuffer_FillInfo": {
      "source": "PyAPI_FUNC(int) PyBuffer_FillInfo(Py_buffer *view, PyObject *o, void *buf,\n                                       Py_ssize_t len, int readonly,\n                                       int flags);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyTuple_Pack": {
      "source": "PyAPI_FUNC(PyObject *) PyTuple_Pack(Py_ssize_t, ...);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCodec_Decode": {
      "source": "PyAPI_FUNC(PyObject *) PyCodec_Decode(\n       PyObject *object,\n       const char *encoding,\n       const char *errors\n       );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_EndInterpreter": {
      "source": "PyAPI_FUNC(void) Py_EndInterpreter(PyThreadState *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "finite": {
      "source": "__MATHDECL_1 (int,finite,, (_Mdouble_ __value)) __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyArg_NoKeywords": {
      "source": "PyAPI_FUNC(int) _PyArg_NoKeywords(const char *funcname, PyObject *kw);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setstate": {
      "source": "extern char *setstate (char *__statebuf) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "ssignal": {
      "source": "extern __sighandler_t ssignal (int __sig, __sighandler_t __handler)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "longjmp": {
      "source": "extern void longjmp (struct __jmp_buf_tag __env[1], int __val)\n     __THROWNL __attribute__ ((__noreturn__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyBuffer_GetPointer": {
      "source": "PyAPI_FUNC(void *) PyBuffer_GetPointer(Py_buffer *view, Py_ssize_t *indices);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__strtok_r": {
      "source": "extern char *__strtok_r (char *__restrict __s,\n\t\t\t const char *__restrict __delim,\n\t\t\t char **__restrict __save_ptr)\n     __THROW __nonnull ((2, 3));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyList_GetSlice": {
      "source": "PyAPI_FUNC(PyObject *) PyList_GetSlice(PyObject *, Py_ssize_t, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setbuf": {
      "source": "extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_FloorDivide": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_FloorDivide(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__exp10": {
      "source": "__MATHCALL (exp10,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "drand48_r": {
      "source": "extern int drand48_r (struct drand48_data *__restrict __buffer,\n\t\t      double *__restrict __result) __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyList_AsTuple": {
      "source": "PyAPI_FUNC(PyObject *) PyList_AsTuple(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "powl": {
      "source": "__MATHCALL (pow,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__copysign": {
      "source": "__MATHCALLX (copysign,, (_Mdouble_ __x, _Mdouble_ __y), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "powf": {
      "source": "__MATHCALL (pow,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lseek": {
      "source": "extern __off64_t __REDIRECT_NTH (lseek,\n\t\t\t\t (int __fd, __off64_t __offset, int __whence),\n\t\t\t\t lseek64);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "rintf": {
      "source": "__MATHCALL (rint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__isinff": {
      "source": "__MATHDECL_1 (int,__isinf,, (_Mdouble_ __value)) __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyMethod_ClearFreeList": {
      "source": "PyAPI_FUNC(int) PyMethod_ClearFreeList(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCFunction_Call": {
      "source": "PyAPI_FUNC(PyObject *) PyCFunction_Call(PyObject *, PyObject *, PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__isinfl": {
      "source": "__MATHDECL_1 (int,__isinf,, (_Mdouble_ __value)) __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "rintl": {
      "source": "__MATHCALL (rint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_InPlaceLshift": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_InPlaceLshift(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyImport_Import": {
      "source": "PyAPI_FUNC(PyObject *) PyImport_Import(PyObject *name);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "atoll": {
      "source": "extern long long int atoll (const char *__nptr)\n     __THROW __attribute_pure__ __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyRandom_Init": {
      "source": "PyAPI_FUNC(void) _PyRandom_Init(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_DelSlice": {
      "source": "PyAPI_FUNC(int) PySequence_DelSlice(PyObject *o, Py_ssize_t i1, Py_ssize_t i2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sethostname": {
      "source": "extern int sethostname (const char *__name, size_t __len)\n     __THROW __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "j1f": {
      "source": "__MATHCALL (j1,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_LookupSpecial": {
      "source": "PyAPI_FUNC(PyObject *) _PyObject_LookupSpecial(PyObject *, char *, PyObject **);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeDecodeError_GetEncoding": {
      "source": "PyAPI_FUNC(PyObject *) PyUnicodeDecodeError_GetEncoding(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_FromStringAndSize": {
      "source": "PyAPI_FUNC(PyObject *) PyString_FromStringAndSize(const char *, Py_ssize_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "modff": {
      "source": "__MATHCALL (modf,, (_Mdouble_ __x, _Mdouble_ *__iptr)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyComplex_FromCComplex": {
      "source": "PyAPI_FUNC(PyObject *) PyComplex_FromCComplex(Py_complex);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_ToBase": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_ToBase(PyObject *n, int base);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "imaxabs": {
      "source": "extern intmax_t imaxabs (intmax_t __n) __THROW __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySlice_New": {
      "source": "PyAPI_FUNC(PyObject *) PySlice_New(PyObject* start, PyObject* stop,\n                                  PyObject* step);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeDecodeError_SetReason": {
      "source": "PyAPI_FUNC(int) PyUnicodeDecodeError_SetReason(\n    PyObject *, const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_Compare": {
      "source": "PyAPI_FUNC(int) PyUnicode_Compare(\n    PyObject *left,             /* Left string */\n    PyObject *right             /* Right string */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_PrintEx": {
      "source": "PyAPI_FUNC(void) PyErr_PrintEx(int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_In": {
      "source": "PyAPI_FUNC(int) PySequence_In(PyObject *o, PyObject *value);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fsync": {
      "source": "extern int fsync (int __fd);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PySequence_IterSearch": {
      "source": "PyAPI_FUNC(Py_ssize_t) _PySequence_IterSearch(PyObject *seq,\n                                        PyObject *obj, int operation);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyErr_ProgramText": {
      "source": "PyAPI_FUNC(PyObject *) PyErr_ProgramText(const char *, int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyCodec_Register": {
      "source": "PyAPI_FUNC(int) PyCodec_Register(\n       PyObject *search_function\n       );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "timer_create": {
      "source": "extern int timer_create (clockid_t __clock_id,\n\t\t\t struct sigevent *__restrict __evp,\n\t\t\t timer_t *__restrict __timerid) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_AsUnsignedLongMask": {
      "source": "PyAPI_FUNC(unsigned long) PyLong_AsUnsignedLongMask(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyArena_Free": {
      "source": "PyAPI_FUNC(void) PyArena_Free(PyArena *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyOS_vsnprintf": {
      "source": "PyAPI_FUNC(int) PyOS_vsnprintf(char *str, size_t size, const char  *format, va_list va)\n                        Py_GCC_ATTRIBUTE((format(printf, 3, 0)));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyGen_New": {
      "source": "PyAPI_FUNC(PyObject *) PyGen_New(struct _frame *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__y1": {
      "source": "__MATHCALL (y1,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__y0": {
      "source": "__MATHCALL (y0,, (_Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "pclose": {
      "source": "extern int pclose (FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyFrame_Init": {
      "source": "PyAPI_FUNC(int) _PyFrame_Init(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "llabs": {
      "source": "extern long long int llabs (long long int __x)\n     __THROW __attribute__ ((__const__)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "seed48": {
      "source": "extern unsigned short int *seed48 (unsigned short int __seed16v[3])\n     __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDescr_NewClassMethod": {
      "source": "PyAPI_FUNC(PyObject *) PyDescr_NewClassMethod(PyTypeObject *, PyMethodDef *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstod_l": {
      "source": "extern double wcstod_l (const wchar_t *__restrict __nptr,\n\t\t\twchar_t **__restrict __endptr, __locale_t __loc)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySys_GetObject": {
      "source": "PyAPI_FUNC(PyObject *) PySys_GetObject(char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fgetc_unlocked": {
      "source": "extern int fgetc_unlocked (FILE *__stream);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isxdigit": {
      "source": "__exctype (isxdigit);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "asctime": {
      "source": "extern char *asctime (const struct tm *__tp) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fstatat64": {
      "source": "extern int fstatat64 (int __fd, const char *__restrict __file,\n\t\t      struct stat64 *__restrict __buf, int __flag)\n     __THROW __nonnull ((2, 3));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "hypotf": {
      "source": "__MATHCALL (hypot,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "symlink": {
      "source": "extern int symlink (const char *__from, const char *__to)\n     __THROW __nonnull ((1, 2)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__lroundl": {
      "source": "__MATHDECL (long int,lround,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyEval_SaveThread": {
      "source": "PyAPI_FUNC(PyThreadState *) PyEval_SaveThread(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__yn": {
      "source": "__MATHCALL (yn,, (int, _Mdouble_));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__lroundf": {
      "source": "__MATHDECL (long int,lround,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeEncodeError_GetEnd": {
      "source": "PyAPI_FUNC(int) PyUnicodeEncodeError_GetEnd(PyObject *, Py_ssize_t *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "siginterrupt": {
      "source": "extern int siginterrupt (int __sig, int __interrupt) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_GetPlatform": {
      "source": "PyAPI_FUNC(const char *) Py_GetPlatform(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_TranslateCharmap": {
      "source": "PyAPI_FUNC(PyObject *) PyUnicode_TranslateCharmap(\n    const Py_UNICODE *data,     /* Unicode char buffer */\n    Py_ssize_t length,                  /* Number of Py_UNICODE chars to encode */\n    PyObject *table,            /* Translate table */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_svnversion": {
      "source": "PyAPI_FUNC(const char *) _Py_svnversion(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "strcpy": {
      "source": "extern char *strcpy (char *__restrict __dest, const char *__restrict __src)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "memchr": {
      "source": "extern void *memchr (const void *__s, int __c, size_t __n)\n      __THROW __attribute_pure__ __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_GetDictPtr": {
      "source": "PyAPI_FUNC(PyObject **) _PyObject_GetDictPtr(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_exit": {
      "source": "extern void _exit (int __status) __attribute__ ((__noreturn__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fcvt": {
      "source": "extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,\n\t\t   int *__restrict __sign) __THROW __nonnull ((3, 4)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "endusershell": {
      "source": "extern void endusershell (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDict_DelItemString": {
      "source": "PyAPI_FUNC(int) PyDict_DelItemString(PyObject *dp, const char *key);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__llrintf": {
      "source": "__MATHDECL (long long int,llrint,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__tan": {
      "source": "__MATHCALL (tan,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fwprintf": {
      "source": "extern int fwprintf (__FILE *__restrict __stream,\n\t\t     const wchar_t *__restrict __format, ...)\n", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "isprint": {
      "source": "__exctype (isprint);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFloat_AsString": {
      "source": "PyAPI_FUNC(void) PyFloat_AsString(char*, PyFloatObject *v);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyString_AsDecodedObject": {
      "source": "PyAPI_FUNC(PyObject*) PyString_AsDecodedObject(\n    PyObject *str,\t \t/* string object */\n    const char *encoding,\t/* encoding */\n    const char *errors\t\t/* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sigemptyset": {
      "source": "extern int sigemptyset (sigset_t *__set) __THROW __nonnull ((1));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyFile_SetEncoding": {
      "source": "PyAPI_FUNC(int) PyFile_SetEncoding(PyObject *, const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_Hash": {
      "source": "PyAPI_FUNC(long) PyObject_Hash(PyObject *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyImport_ReleaseLock": {
      "source": "PyAPI_FUNC(int) _PyImport_ReleaseLock(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_SubversionRevision": {
      "source": "PyAPI_FUNC(const char *) Py_SubversionRevision(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyErr_BadInternalCall": {
      "source": "PyAPI_FUNC(void) _PyErr_BadInternalCall(char *filename, int lineno);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcscoll_l": {
      "source": "extern int wcscoll_l (const wchar_t *__s1, const wchar_t *__s2,\n\t\t      __locale_t __loc) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyObject_CallFunction_SizeT": {
      "source": "PyAPI_FUNC(PyObject *) _PyObject_CallFunction_SizeT(PyObject *callable,\n                                                         char *format, ...);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_CheckReadBuffer": {
      "source": "PyAPI_FUNC(int) PyObject_CheckReadBuffer(PyObject *obj);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "log10": {
      "source": "__MATHCALL (log10,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_GetPythonHome": {
      "source": "PyAPI_FUNC(char *) Py_GetPythonHome(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyDescr_NewMember": {
      "source": "PyAPI_FUNC(PyObject *) PyDescr_NewMember(PyTypeObject *,\n                                               struct PyMemberDef *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getenv": {
      "source": "extern char *getenv (const char *__name) __THROW __nonnull ((1)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyImport_AcquireLock": {
      "source": "PyAPI_FUNC(void) _PyImport_AcquireLock(void);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyCode_CheckLineNumber": {
      "source": "PyAPI_FUNC(int) _PyCode_CheckLineNumber(PyCodeObject* co,\n                                        int lasti, PyAddrPair *bounds);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_VaBuildValue_SizeT": {
      "source": "PyAPI_FUNC(PyObject *) _Py_VaBuildValue_SizeT(const char *, va_list);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_Remainder": {
      "source": "PyAPI_FUNC(PyObject *) PyNumber_Remainder(PyObject *o1, PyObject *o2);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "wcstof_l": {
      "source": "extern float wcstof_l (const wchar_t *__restrict __nptr,\n\t\t       wchar_t **__restrict __endptr, __locale_t __loc)\n     __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyNumber_AsSsize_t": {
      "source": "PyAPI_FUNC(Py_ssize_t) PyNumber_AsSsize_t(PyObject *o, PyObject *exc);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_IO_getc": {
      "source": "extern int _IO_getc (_IO_FILE *__fp);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyThreadState_Next": {
      "source": "PyAPI_FUNC(PyThreadState *) PyThreadState_Next(PyThreadState *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeDecodeError_Create": {
      "source": "PyAPI_FUNC(PyObject *) PyUnicodeDecodeError_Create(\n    const char *, const char *, Py_ssize_t, Py_ssize_t, Py_ssize_t, const char *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "cuserid": {
      "source": "extern char *cuserid (char *__s);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_RichCompare": {
      "source": "PyAPI_FUNC(PyObject *) PyUnicode_RichCompare(\n    PyObject *left,             /* Left string */\n    PyObject *right,            /* Right string */\n    int op                      /* Operation: Py_EQ, Py_NE, Py_GT, etc. */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "log1p": {
      "source": "__MATHCALL (log1p,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sscanf": {
      "source": "extern int sscanf (const char *__restrict __s,\n\t\t   const char *__restrict __format, ...) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "Py_VaBuildValue": {
      "source": "PyAPI_FUNC(PyObject *) Py_VaBuildValue(const char *, va_list);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "asinh": {
      "source": "__MATHCALL (asinh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "jrand48_r": {
      "source": "extern int jrand48_r (unsigned short int __xsubi[3],\n\t\t      struct drand48_data *__restrict __buffer,\n\t\t      long int *__restrict __result)\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "lgamma_r": {
      "source": "__MATHCALL (lgamma,_r, (_Mdouble_, int *__signgamp));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__sigpause": {
      "source": "extern int __sigpause (int __sig_or_mask, int __is_sig);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_EncodeDecimal": {
      "source": "PyAPI_FUNC(int) PyUnicode_EncodeDecimal(\n    Py_UNICODE *s,              /* Unicode buffer */\n    Py_ssize_t length,                  /* Number of Py_UNICODE chars to encode */\n    char *output,               /* Output buffer; must have size >= length */\n    const char *errors          /* error handling */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyOS_setsig": {
      "source": "PyAPI_FUNC(PyOS_sighandler_t) PyOS_setsig(int, PyOS_sighandler_t);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__significandl": {
      "source": "__MATHCALL (significand,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "getopt": {
      "source": "extern int getopt (int ___argc, char *const *___argv, const char *__shortopts)\n       __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyThreadState_Prealloc": {
      "source": "PyAPI_FUNC(PyThreadState *) _PyThreadState_Prealloc(PyInterpreterState *);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__truncl": {
      "source": "__MATHCALLX (trunc,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "stat": {
      "source": "extern int __REDIRECT_NTH (stat, (const char *__restrict __file,\n\t\t\t\t  struct stat *__restrict __buf), stat64)\n     __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "execvp": {
      "source": "extern int execvp (const char *__file, char *const __argv[])\n     __THROW __nonnull ((1, 2));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_Py_Mangle": {
      "source": "PyAPI_FUNC(PyObject*) _Py_Mangle(PyObject *p, PyObject *name);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_AsReadBuffer": {
      "source": "PyAPI_FUNC(int) PyObject_AsReadBuffer(PyObject *obj,\n                                          const void **buffer,\n                                          Py_ssize_t *buffer_len);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__truncf": {
      "source": "__MATHCALLX (trunc,, (_Mdouble_ __x), (__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "setusershell": {
      "source": "extern void setusershell (void) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "remainderf": {
      "source": "__MATHCALL (remainder,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "readlink": {
      "source": "extern ssize_t readlink (const char *__restrict __path,\n\t\t\t char *__restrict __buf, size_t __len)\n     __THROW __nonnull ((1, 2)) ", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_toupper": {
      "source": "__exctype (_toupper);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "remainderl": {
      "source": "__MATHCALL (remainder,, (_Mdouble_ __x, _Mdouble_ __y));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__expm1": {
      "source": "__MATHCALL (expm1,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyLong_FromDouble": {
      "source": "PyAPI_FUNC(PyObject *) PyLong_FromDouble(double);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyUnicodeUCS4_EncodeUnicodeEscape": {
      "source": "PyAPI_FUNC(PyObject*) PyUnicode_EncodeUnicodeEscape(\n    const Py_UNICODE *data,     /* Unicode char buffer */\n    Py_ssize_t length                   /* Number of Py_UNICODE chars to encode */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__scalbln": {
      "source": "__MATHCALL (scalbln,, (_Mdouble_ __x, long int __n));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyOS_getsig": {
      "source": "PyAPI_FUNC(PyOS_sighandler_t) PyOS_getsig(int);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__isinf": {
      "source": "__MATHDECL_1 (int,__isinf,, (_Mdouble_ __value)) __attribute__ ((__const__));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "_PyUnicodeUCS4_IsAlpha": {
      "source": "PyAPI_FUNC(int) _PyUnicode_IsAlpha(\n    Py_UNICODE ch       /* Unicode character */\n    );", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__exp10f": {
      "source": "__MATHCALL (exp10,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "__exp10l": {
      "source": "__MATHCALL (exp10,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "fpathconf": {
      "source": "extern long int fpathconf (int __fd, int __name) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PySequence_Contains": {
      "source": "PyAPI_FUNC(int) PySequence_Contains(PyObject *seq, PyObject *ob);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "asinhf": {
      "source": "__MATHCALL (asinh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sincosl": {
      "source": "__MATHDECL (void,sincos,,\n\t    (_Mdouble_ __x, _Mdouble_ *__sinx, _Mdouble_ *__cosx));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "asinhl": {
      "source": "__MATHCALL (asinh,, (_Mdouble_ __x));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "sincosf": {
      "source": "__MATHDECL (void,sincos,,\n\t    (_Mdouble_ __x, _Mdouble_ *__sinx, _Mdouble_ *__cosx));", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "mbsnrtowcs": {
      "source": "extern size_t mbsnrtowcs (wchar_t *__restrict __dst,\n\t\t\t  const char **__restrict __src, size_t __nmc,\n\t\t\t  size_t __len, mbstate_t *__restrict __ps) __THROW;", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }, 
    "PyObject_CallMethod": {
      "source": "PyAPI_FUNC(PyObject *) PyObject_CallMethod(PyObject *o, char *m,\n                                               char *format, ...);", 
      "path": "/tmp/tmpSbM_A3/hellomodule.c"
    }
  }, 
  "method_names": {
    "HelloMethods": {
      "say_hello": "say_hello"
    }
  }
}